// $ANTLR 3.0.1 ./src/ru/unn/omp/parser/javaparser/JavaOMP.g 2010-05-24 22:46:31

package ru.unn.omp4j.parser.javaparser;

import org.apache.log4j.Logger;
import ru.unn.omp4j.parser.tree.OMPTree;
import ru.unn.omp4j.parser.tree.OMPTreeAdaptor;
import ru.unn.omp4j.parser.tree.Rule;
import ru.unn.omp4j.parser.tree.OMPRuleVisitor;
import ru.unn.omp4j.parser.OMPParserException;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;

@SuppressWarnings("all")
public class JavaOMPParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Identifier", "ENUM", "FloatingPointLiteral", "CharacterLiteral", "StringLiteral", "HexLiteral", "OctalLiteral", "DecimalLiteral", "ASSERT", "HexDigit", "IntegerTypeSuffix", "Exponent", "FloatTypeSuffix", "EscapeSequence", "UnicodeEscape", "OctalEscape", "Letter", "JavaIDDigit", "WS", "COMMENT", "'package'", "';'", "'import'", "'static'", "'.'", "'*'", "'public'", "'protected'", "'private'", "'abstract'", "'final'", "'strictfp'", "'class'", "'extends'", "'implements'", "'<'", "','", "'>'", "'&'", "'{'", "'}'", "'interface'", "'void'", "'['", "']'", "'throws'", "'='", "'native'", "'synchronized'", "'transient'", "'volatile'", "'boolean'", "'char'", "'byte'", "'short'", "'int'", "'long'", "'float'", "'double'", "'?'", "'super'", "'('", "')'", "'...'", "'this'", "'null'", "'true'", "'false'", "'@'", "'default'", "':'", "'if'", "'else'", "'for'", "'while'", "'do'", "'try'", "'finally'", "'switch'", "'return'", "'throw'", "'break'", "'continue'", "'catch'", "'case'", "'+='", "'-='", "'*='", "'/='", "'&='", "'|='", "'^='", "'%='", "'||'", "'&&'", "'|'", "'^'", "'=='", "'!='", "'instanceof'", "'+'", "'-'", "'/'", "'%'", "'++'", "'--'", "'~'", "'!'", "'new'", "'//omp'", "'parallel'", "'num_threads'", "'nowait'", "'ordered'", "'schedule'", "'dynamic'", "'guided'", "'runtime'", "'sections'", "'section'", "'task'", "'untied'", "'single'", "'master'", "'critical'", "'barrier'", "'atomic'", "'flush'", "'threadprivate'", "'copyprivate'", "'firstprivate'", "'lastprivate'", "'shared'", "'none'", "'reduction'", "'copyin'"
    };
    public static final int HexLiteral=9;
    public static final int FloatTypeSuffix=16;
    public static final int OctalLiteral=10;
    public static final int IntegerTypeSuffix=14;
    public static final int CharacterLiteral=7;
    public static final int Exponent=15;
    public static final int EOF=-1;
    public static final int DecimalLiteral=11;
    public static final int ASSERT=12;
    public static final int HexDigit=13;
    public static final int Identifier=4;
    public static final int StringLiteral=8;
    public static final int WS=22;
    public static final int ENUM=5;
    public static final int UnicodeEscape=18;
    public static final int FloatingPointLiteral=6;
    public static final int JavaIDDigit=21;
    public static final int COMMENT=23;
    public static final int Letter=20;
    public static final int EscapeSequence=17;
    public static final int OctalEscape=19;

        public JavaOMPParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[513+1];
         }
        
    protected TreeAdaptor adaptor = new OMPTreeAdaptor();


    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "./src/ru/unn/omp/parser/javaparser/JavaOMP.g"; }


      private Logger log = Logger.getLogger(getClass());
      
      public void emitErrorMessage(String msg) {
      	log.error(msg);
      }


    public static class compilationUnit extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start compilationUnit
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:52:1: compilationUnit : ( ( '@' )=> annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* );
    public final compilationUnit compilationUnit() throws RecognitionException, OMPParserException {
        compilationUnit retval = new compilationUnit();
        retval.setStart(input.LT(1));
        int compilationUnit_StartIndex = input.index();
        OMPTree root_0 = null;

        annotations annotations1 = null;

        packageDeclaration packageDeclaration2 = null;

        importDeclaration importDeclaration3 = null;

        typeDeclaration typeDeclaration4 = null;

        classOrInterfaceDeclaration classOrInterfaceDeclaration5 = null;

        typeDeclaration typeDeclaration6 = null;

        packageDeclaration packageDeclaration7 = null;

        importDeclaration importDeclaration8 = null;

        typeDeclaration typeDeclaration9 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 1) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:53:5: ( ( '@' )=> annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==72) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==45) ) {
                    alt8=2;
                }
                else if ( (LA8_1==Identifier) ) {
                    int LA8_17 = input.LA(3);

                    if ( (synpred1()) ) {
                        alt8=1;
                    }
                    else if ( (true) ) {
                        alt8=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("52:1: compilationUnit : ( ( '@' )=> annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* );", 8, 17, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("52:1: compilationUnit : ( ( '@' )=> annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* );", 8, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA8_0==EOF||LA8_0==ENUM||(LA8_0>=24 && LA8_0<=27)||(LA8_0>=30 && LA8_0<=36)||LA8_0==45) ) {
                alt8=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("52:1: compilationUnit : ( ( '@' )=> annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* );", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:53:9: ( '@' )=> annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotations_in_compilationUnit108);
                    annotations1=annotations();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotations1.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:54:9: ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )
                    int alt4=2;
                    int LA4_0 = input.LA(1);

                    if ( (LA4_0==24) ) {
                        alt4=1;
                    }
                    else if ( (LA4_0==ENUM||LA4_0==27||(LA4_0>=30 && LA4_0<=36)||LA4_0==45||LA4_0==72) ) {
                        alt4=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("54:9: ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )", 4, 0, input);

                        throw nvae;
                    }
                    switch (alt4) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:54:13: packageDeclaration ( importDeclaration )* ( typeDeclaration )*
                            {
                            pushFollow(FOLLOW_packageDeclaration_in_compilationUnit122);
                            packageDeclaration2=packageDeclaration();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, packageDeclaration2.getTree());
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:54:32: ( importDeclaration )*
                            loop1:
                            do {
                                int alt1=2;
                                int LA1_0 = input.LA(1);

                                if ( (LA1_0==26) ) {
                                    alt1=1;
                                }


                                switch (alt1) {
                            	case 1 :
                            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: importDeclaration
                            	    {
                            	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit124);
                            	    importDeclaration3=importDeclaration();
                            	    _fsp--;
                            	    if (failed) return retval;
                            	    if ( backtracking==0 ) adaptor.addChild(root_0, importDeclaration3.getTree());

                            	    }
                            	    break;

                            	default :
                            	    break loop1;
                                }
                            } while (true);

                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:54:51: ( typeDeclaration )*
                            loop2:
                            do {
                                int alt2=2;
                                int LA2_0 = input.LA(1);

                                if ( (LA2_0==ENUM||LA2_0==25||LA2_0==27||(LA2_0>=30 && LA2_0<=36)||LA2_0==45||LA2_0==72) ) {
                                    alt2=1;
                                }


                                switch (alt2) {
                            	case 1 :
                            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: typeDeclaration
                            	    {
                            	    pushFollow(FOLLOW_typeDeclaration_in_compilationUnit127);
                            	    typeDeclaration4=typeDeclaration();
                            	    _fsp--;
                            	    if (failed) return retval;
                            	    if ( backtracking==0 ) adaptor.addChild(root_0, typeDeclaration4.getTree());

                            	    }
                            	    break;

                            	default :
                            	    break loop2;
                                }
                            } while (true);


                            }
                            break;
                        case 2 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:55:13: classOrInterfaceDeclaration ( typeDeclaration )*
                            {
                            pushFollow(FOLLOW_classOrInterfaceDeclaration_in_compilationUnit143);
                            classOrInterfaceDeclaration5=classOrInterfaceDeclaration();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceDeclaration5.getTree());
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:55:41: ( typeDeclaration )*
                            loop3:
                            do {
                                int alt3=2;
                                int LA3_0 = input.LA(1);

                                if ( (LA3_0==ENUM||LA3_0==25||LA3_0==27||(LA3_0>=30 && LA3_0<=36)||LA3_0==45||LA3_0==72) ) {
                                    alt3=1;
                                }


                                switch (alt3) {
                            	case 1 :
                            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: typeDeclaration
                            	    {
                            	    pushFollow(FOLLOW_typeDeclaration_in_compilationUnit145);
                            	    typeDeclaration6=typeDeclaration();
                            	    _fsp--;
                            	    if (failed) return retval;
                            	    if ( backtracking==0 ) adaptor.addChild(root_0, typeDeclaration6.getTree());

                            	    }
                            	    break;

                            	default :
                            	    break loop3;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:57:9: ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )*
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:57:9: ( packageDeclaration )?
                    int alt5=2;
                    int LA5_0 = input.LA(1);

                    if ( (LA5_0==24) ) {
                        alt5=1;
                    }
                    switch (alt5) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:57:10: packageDeclaration
                            {
                            pushFollow(FOLLOW_packageDeclaration_in_compilationUnit166);
                            packageDeclaration7=packageDeclaration();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, packageDeclaration7.getTree());

                            }
                            break;

                    }

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:57:31: ( importDeclaration )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==26) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: importDeclaration
                    	    {
                    	    pushFollow(FOLLOW_importDeclaration_in_compilationUnit170);
                    	    importDeclaration8=importDeclaration();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, importDeclaration8.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:57:50: ( typeDeclaration )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==ENUM||LA7_0==25||LA7_0==27||(LA7_0>=30 && LA7_0<=36)||LA7_0==45||LA7_0==72) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: typeDeclaration
                    	    {
                    	    pushFollow(FOLLOW_typeDeclaration_in_compilationUnit173);
                    	    typeDeclaration9=typeDeclaration();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, typeDeclaration9.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 1, compilationUnit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end compilationUnit

    public static class packageDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start packageDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:60:1: packageDeclaration : 'package' qualifiedName ';' ;
    public final packageDeclaration packageDeclaration() throws RecognitionException, OMPParserException {
        packageDeclaration retval = new packageDeclaration();
        retval.setStart(input.LT(1));
        int packageDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal10=null;
        Token char_literal12=null;
        qualifiedName qualifiedName11 = null;


        OMPTree string_literal10_tree=null;
        OMPTree char_literal12_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 2) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:61:5: ( 'package' qualifiedName ';' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:61:9: 'package' qualifiedName ';'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal10=(Token)input.LT(1);
            match(input,24,FOLLOW_24_in_packageDeclaration193); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal10_tree = (OMPTree)adaptor.create(string_literal10);
            adaptor.addChild(root_0, string_literal10_tree);
            }
            pushFollow(FOLLOW_qualifiedName_in_packageDeclaration195);
            qualifiedName11=qualifiedName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedName11.getTree());
            char_literal12=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_packageDeclaration197); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal12_tree = (OMPTree)adaptor.create(char_literal12);
            adaptor.addChild(root_0, char_literal12_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 2, packageDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end packageDeclaration

    public static class importDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start importDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:64:1: importDeclaration : 'import' ( 'static' )? qualifiedName ( '.' '*' )? ';' ;
    public final importDeclaration importDeclaration() throws RecognitionException, OMPParserException {
        importDeclaration retval = new importDeclaration();
        retval.setStart(input.LT(1));
        int importDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal13=null;
        Token string_literal14=null;
        Token char_literal16=null;
        Token char_literal17=null;
        Token char_literal18=null;
        qualifiedName qualifiedName15 = null;


        OMPTree string_literal13_tree=null;
        OMPTree string_literal14_tree=null;
        OMPTree char_literal16_tree=null;
        OMPTree char_literal17_tree=null;
        OMPTree char_literal18_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:65:5: ( 'import' ( 'static' )? qualifiedName ( '.' '*' )? ';' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:65:9: 'import' ( 'static' )? qualifiedName ( '.' '*' )? ';'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal13=(Token)input.LT(1);
            match(input,26,FOLLOW_26_in_importDeclaration220); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal13_tree = (OMPTree)adaptor.create(string_literal13);
            adaptor.addChild(root_0, string_literal13_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:65:18: ( 'static' )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==27) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: 'static'
                    {
                    string_literal14=(Token)input.LT(1);
                    match(input,27,FOLLOW_27_in_importDeclaration222); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal14_tree = (OMPTree)adaptor.create(string_literal14);
                    adaptor.addChild(root_0, string_literal14_tree);
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_qualifiedName_in_importDeclaration225);
            qualifiedName15=qualifiedName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedName15.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:65:42: ( '.' '*' )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==28) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:65:43: '.' '*'
                    {
                    char_literal16=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_importDeclaration228); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal16_tree = (OMPTree)adaptor.create(char_literal16);
                    adaptor.addChild(root_0, char_literal16_tree);
                    }
                    char_literal17=(Token)input.LT(1);
                    match(input,29,FOLLOW_29_in_importDeclaration230); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal17_tree = (OMPTree)adaptor.create(char_literal17);
                    adaptor.addChild(root_0, char_literal17_tree);
                    }

                    }
                    break;

            }

            char_literal18=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_importDeclaration234); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal18_tree = (OMPTree)adaptor.create(char_literal18);
            adaptor.addChild(root_0, char_literal18_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 3, importDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end importDeclaration

    public static class typeDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:68:1: typeDeclaration : ( classOrInterfaceDeclaration | ';' );
    public final typeDeclaration typeDeclaration() throws RecognitionException, OMPParserException {
        typeDeclaration retval = new typeDeclaration();
        retval.setStart(input.LT(1));
        int typeDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal20=null;
        classOrInterfaceDeclaration classOrInterfaceDeclaration19 = null;


        OMPTree char_literal20_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:69:5: ( classOrInterfaceDeclaration | ';' )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==ENUM||LA11_0==27||(LA11_0>=30 && LA11_0<=36)||LA11_0==45||LA11_0==72) ) {
                alt11=1;
            }
            else if ( (LA11_0==25) ) {
                alt11=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("68:1: typeDeclaration : ( classOrInterfaceDeclaration | ';' );", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:69:9: classOrInterfaceDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration257);
                    classOrInterfaceDeclaration19=classOrInterfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceDeclaration19.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:70:9: ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal20=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_typeDeclaration267); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal20_tree = (OMPTree)adaptor.create(char_literal20);
                    adaptor.addChild(root_0, char_literal20_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 4, typeDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeDeclaration

    public static class classOrInterfaceDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classOrInterfaceDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:73:1: classOrInterfaceDeclaration : classOrInterfaceModifiers ( classDeclaration | interfaceDeclaration ) ;
    public final classOrInterfaceDeclaration classOrInterfaceDeclaration() throws RecognitionException, OMPParserException {
        classOrInterfaceDeclaration retval = new classOrInterfaceDeclaration();
        retval.setStart(input.LT(1));
        int classOrInterfaceDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        classOrInterfaceModifiers classOrInterfaceModifiers21 = null;

        classDeclaration classDeclaration22 = null;

        interfaceDeclaration interfaceDeclaration23 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:74:5: ( classOrInterfaceModifiers ( classDeclaration | interfaceDeclaration ) )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:74:9: classOrInterfaceModifiers ( classDeclaration | interfaceDeclaration )
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_classOrInterfaceModifiers_in_classOrInterfaceDeclaration290);
            classOrInterfaceModifiers21=classOrInterfaceModifiers();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceModifiers21.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:74:35: ( classDeclaration | interfaceDeclaration )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==ENUM||LA12_0==36) ) {
                alt12=1;
            }
            else if ( (LA12_0==45||LA12_0==72) ) {
                alt12=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("74:35: ( classDeclaration | interfaceDeclaration )", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:74:36: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_classOrInterfaceDeclaration293);
                    classDeclaration22=classDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classDeclaration22.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:74:55: interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration297);
                    interfaceDeclaration23=interfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceDeclaration23.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 5, classOrInterfaceDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classOrInterfaceDeclaration

    public static class classOrInterfaceModifiers extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classOrInterfaceModifiers
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:77:1: classOrInterfaceModifiers : ( classOrInterfaceModifier )* ;
    public final classOrInterfaceModifiers classOrInterfaceModifiers() throws RecognitionException, OMPParserException {
        classOrInterfaceModifiers retval = new classOrInterfaceModifiers();
        retval.setStart(input.LT(1));
        int classOrInterfaceModifiers_StartIndex = input.index();
        OMPTree root_0 = null;

        classOrInterfaceModifier classOrInterfaceModifier24 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:78:5: ( ( classOrInterfaceModifier )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:78:9: ( classOrInterfaceModifier )*
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:78:9: ( classOrInterfaceModifier )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==72) ) {
                    int LA13_4 = input.LA(2);

                    if ( (LA13_4==Identifier) ) {
                        alt13=1;
                    }


                }
                else if ( (LA13_0==27||(LA13_0>=30 && LA13_0<=35)) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: classOrInterfaceModifier
            	    {
            	    pushFollow(FOLLOW_classOrInterfaceModifier_in_classOrInterfaceModifiers321);
            	    classOrInterfaceModifier24=classOrInterfaceModifier();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceModifier24.getTree());

            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 6, classOrInterfaceModifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classOrInterfaceModifiers

    public static class classOrInterfaceModifier extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classOrInterfaceModifier
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:81:1: classOrInterfaceModifier : ( annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' );
    public final classOrInterfaceModifier classOrInterfaceModifier() throws RecognitionException, OMPParserException {
        classOrInterfaceModifier retval = new classOrInterfaceModifier();
        retval.setStart(input.LT(1));
        int classOrInterfaceModifier_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal26=null;
        Token string_literal27=null;
        Token string_literal28=null;
        Token string_literal29=null;
        Token string_literal30=null;
        Token string_literal31=null;
        Token string_literal32=null;
        annotation annotation25 = null;


        OMPTree string_literal26_tree=null;
        OMPTree string_literal27_tree=null;
        OMPTree string_literal28_tree=null;
        OMPTree string_literal29_tree=null;
        OMPTree string_literal30_tree=null;
        OMPTree string_literal31_tree=null;
        OMPTree string_literal32_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:82:5: ( annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' )
            int alt14=8;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt14=1;
                }
                break;
            case 30:
                {
                alt14=2;
                }
                break;
            case 31:
                {
                alt14=3;
                }
                break;
            case 32:
                {
                alt14=4;
                }
                break;
            case 33:
                {
                alt14=5;
                }
                break;
            case 27:
                {
                alt14=6;
                }
                break;
            case 34:
                {
                alt14=7;
                }
                break;
            case 35:
                {
                alt14=8;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("81:1: classOrInterfaceModifier : ( annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' );", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:82:9: annotation
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_classOrInterfaceModifier341);
                    annotation25=annotation();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotation25.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:83:9: 'public'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal26=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_classOrInterfaceModifier354); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal26_tree = (OMPTree)adaptor.create(string_literal26);
                    adaptor.addChild(root_0, string_literal26_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:84:9: 'protected'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal27=(Token)input.LT(1);
                    match(input,31,FOLLOW_31_in_classOrInterfaceModifier369); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal27_tree = (OMPTree)adaptor.create(string_literal27);
                    adaptor.addChild(root_0, string_literal27_tree);
                    }

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:85:9: 'private'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal28=(Token)input.LT(1);
                    match(input,32,FOLLOW_32_in_classOrInterfaceModifier381); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal28_tree = (OMPTree)adaptor.create(string_literal28);
                    adaptor.addChild(root_0, string_literal28_tree);
                    }

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:86:9: 'abstract'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal29=(Token)input.LT(1);
                    match(input,33,FOLLOW_33_in_classOrInterfaceModifier395); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal29_tree = (OMPTree)adaptor.create(string_literal29);
                    adaptor.addChild(root_0, string_literal29_tree);
                    }

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:87:9: 'static'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal30=(Token)input.LT(1);
                    match(input,27,FOLLOW_27_in_classOrInterfaceModifier408); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal30_tree = (OMPTree)adaptor.create(string_literal30);
                    adaptor.addChild(root_0, string_literal30_tree);
                    }

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:88:9: 'final'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal31=(Token)input.LT(1);
                    match(input,34,FOLLOW_34_in_classOrInterfaceModifier423); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal31_tree = (OMPTree)adaptor.create(string_literal31);
                    adaptor.addChild(root_0, string_literal31_tree);
                    }

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:89:9: 'strictfp'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal32=(Token)input.LT(1);
                    match(input,35,FOLLOW_35_in_classOrInterfaceModifier439); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal32_tree = (OMPTree)adaptor.create(string_literal32);
                    adaptor.addChild(root_0, string_literal32_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 7, classOrInterfaceModifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classOrInterfaceModifier

    public static class modifiers extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start modifiers
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:92:1: modifiers : ( modifier )* ;
    public final modifiers modifiers() throws RecognitionException, OMPParserException {
        modifiers retval = new modifiers();
        retval.setStart(input.LT(1));
        int modifiers_StartIndex = input.index();
        OMPTree root_0 = null;

        modifier modifier33 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:93:5: ( ( modifier )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:93:9: ( modifier )*
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:93:9: ( modifier )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==72) ) {
                    int LA15_6 = input.LA(2);

                    if ( (LA15_6==Identifier) ) {
                        alt15=1;
                    }


                }
                else if ( (LA15_0==27||(LA15_0>=30 && LA15_0<=35)||(LA15_0>=51 && LA15_0<=54)) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_modifiers461);
            	    modifier33=modifier();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, modifier33.getTree());

            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 8, modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end modifiers

    public static class classDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:96:1: classDeclaration : ( normalClassDeclaration | enumDeclaration );
    public final classDeclaration classDeclaration() throws RecognitionException, OMPParserException {
        classDeclaration retval = new classDeclaration();
        retval.setStart(input.LT(1));
        int classDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        normalClassDeclaration normalClassDeclaration34 = null;

        enumDeclaration enumDeclaration35 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:97:5: ( normalClassDeclaration | enumDeclaration )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==36) ) {
                alt16=1;
            }
            else if ( (LA16_0==ENUM) ) {
                alt16=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("96:1: classDeclaration : ( normalClassDeclaration | enumDeclaration );", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:97:9: normalClassDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_normalClassDeclaration_in_classDeclaration481);
                    normalClassDeclaration34=normalClassDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, normalClassDeclaration34.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:98:9: enumDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_enumDeclaration_in_classDeclaration491);
                    enumDeclaration35=enumDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, enumDeclaration35.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 9, classDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classDeclaration

    public static class normalClassDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start normalClassDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:101:1: normalClassDeclaration : 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody ;
    public final normalClassDeclaration normalClassDeclaration() throws RecognitionException, OMPParserException {
        normalClassDeclaration retval = new normalClassDeclaration();
        retval.setStart(input.LT(1));
        int normalClassDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal36=null;
        Token Identifier37=null;
        Token string_literal39=null;
        Token string_literal41=null;
        typeParameters typeParameters38 = null;

        type type40 = null;

        typeList typeList42 = null;

        classBody classBody43 = null;


        OMPTree string_literal36_tree=null;
        OMPTree Identifier37_tree=null;
        OMPTree string_literal39_tree=null;
        OMPTree string_literal41_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:102:5: ( 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:102:9: 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal36=(Token)input.LT(1);
            match(input,36,FOLLOW_36_in_normalClassDeclaration514); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal36_tree = (OMPTree)adaptor.create(string_literal36);
            adaptor.addChild(root_0, string_literal36_tree);
            }
            Identifier37=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_normalClassDeclaration516); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier37_tree = (OMPTree)adaptor.create(Identifier37);
            adaptor.addChild(root_0, Identifier37_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:102:28: ( typeParameters )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==39) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:102:29: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_normalClassDeclaration519);
                    typeParameters38=typeParameters();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeParameters38.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:103:9: ( 'extends' type )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==37) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:103:10: 'extends' type
                    {
                    string_literal39=(Token)input.LT(1);
                    match(input,37,FOLLOW_37_in_normalClassDeclaration532); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal39_tree = (OMPTree)adaptor.create(string_literal39);
                    adaptor.addChild(root_0, string_literal39_tree);
                    }
                    pushFollow(FOLLOW_type_in_normalClassDeclaration534);
                    type40=type();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, type40.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:104:9: ( 'implements' typeList )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==38) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:104:10: 'implements' typeList
                    {
                    string_literal41=(Token)input.LT(1);
                    match(input,38,FOLLOW_38_in_normalClassDeclaration547); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal41_tree = (OMPTree)adaptor.create(string_literal41);
                    adaptor.addChild(root_0, string_literal41_tree);
                    }
                    pushFollow(FOLLOW_typeList_in_normalClassDeclaration549);
                    typeList42=typeList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeList42.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_classBody_in_normalClassDeclaration561);
            classBody43=classBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, classBody43.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 10, normalClassDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end normalClassDeclaration

    public static class typeParameters extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeParameters
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:108:1: typeParameters : '<' typeParameter ( ',' typeParameter )* '>' ;
    public final typeParameters typeParameters() throws RecognitionException, OMPParserException {
        typeParameters retval = new typeParameters();
        retval.setStart(input.LT(1));
        int typeParameters_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal44=null;
        Token char_literal46=null;
        Token char_literal48=null;
        typeParameter typeParameter45 = null;

        typeParameter typeParameter47 = null;


        OMPTree char_literal44_tree=null;
        OMPTree char_literal46_tree=null;
        OMPTree char_literal48_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:109:5: ( '<' typeParameter ( ',' typeParameter )* '>' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:109:9: '<' typeParameter ( ',' typeParameter )* '>'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal44=(Token)input.LT(1);
            match(input,39,FOLLOW_39_in_typeParameters584); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal44_tree = (OMPTree)adaptor.create(char_literal44);
            adaptor.addChild(root_0, char_literal44_tree);
            }
            pushFollow(FOLLOW_typeParameter_in_typeParameters586);
            typeParameter45=typeParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, typeParameter45.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:109:27: ( ',' typeParameter )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==40) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:109:28: ',' typeParameter
            	    {
            	    char_literal46=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_typeParameters589); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal46_tree = (OMPTree)adaptor.create(char_literal46);
            	    adaptor.addChild(root_0, char_literal46_tree);
            	    }
            	    pushFollow(FOLLOW_typeParameter_in_typeParameters591);
            	    typeParameter47=typeParameter();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, typeParameter47.getTree());

            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            char_literal48=(Token)input.LT(1);
            match(input,41,FOLLOW_41_in_typeParameters595); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal48_tree = (OMPTree)adaptor.create(char_literal48);
            adaptor.addChild(root_0, char_literal48_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 11, typeParameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeParameters

    public static class typeParameter extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeParameter
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:112:1: typeParameter : Identifier ( 'extends' typeBound )? ;
    public final typeParameter typeParameter() throws RecognitionException, OMPParserException {
        typeParameter retval = new typeParameter();
        retval.setStart(input.LT(1));
        int typeParameter_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier49=null;
        Token string_literal50=null;
        typeBound typeBound51 = null;


        OMPTree Identifier49_tree=null;
        OMPTree string_literal50_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:113:5: ( Identifier ( 'extends' typeBound )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:113:9: Identifier ( 'extends' typeBound )?
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier49=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_typeParameter614); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier49_tree = (OMPTree)adaptor.create(Identifier49);
            adaptor.addChild(root_0, Identifier49_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:113:20: ( 'extends' typeBound )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==37) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:113:21: 'extends' typeBound
                    {
                    string_literal50=(Token)input.LT(1);
                    match(input,37,FOLLOW_37_in_typeParameter617); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal50_tree = (OMPTree)adaptor.create(string_literal50);
                    adaptor.addChild(root_0, string_literal50_tree);
                    }
                    pushFollow(FOLLOW_typeBound_in_typeParameter619);
                    typeBound51=typeBound();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeBound51.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 12, typeParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeParameter

    public static class typeBound extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeBound
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:116:1: typeBound : type ( '&' type )* ;
    public final typeBound typeBound() throws RecognitionException, OMPParserException {
        typeBound retval = new typeBound();
        retval.setStart(input.LT(1));
        int typeBound_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal53=null;
        type type52 = null;

        type type54 = null;


        OMPTree char_literal53_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:117:5: ( type ( '&' type )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:117:9: type ( '&' type )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_type_in_typeBound648);
            type52=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type52.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:117:14: ( '&' type )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==42) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:117:15: '&' type
            	    {
            	    char_literal53=(Token)input.LT(1);
            	    match(input,42,FOLLOW_42_in_typeBound651); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal53_tree = (OMPTree)adaptor.create(char_literal53);
            	    adaptor.addChild(root_0, char_literal53_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_typeBound653);
            	    type54=type();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, type54.getTree());

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 13, typeBound_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeBound

    public static class enumDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enumDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:120:1: enumDeclaration : ENUM Identifier ( 'implements' typeList )? enumBody ;
    public final enumDeclaration enumDeclaration() throws RecognitionException, OMPParserException {
        enumDeclaration retval = new enumDeclaration();
        retval.setStart(input.LT(1));
        int enumDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token ENUM55=null;
        Token Identifier56=null;
        Token string_literal57=null;
        typeList typeList58 = null;

        enumBody enumBody59 = null;


        OMPTree ENUM55_tree=null;
        OMPTree Identifier56_tree=null;
        OMPTree string_literal57_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:121:5: ( ENUM Identifier ( 'implements' typeList )? enumBody )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:121:9: ENUM Identifier ( 'implements' typeList )? enumBody
            {
            root_0 = (OMPTree)adaptor.nil();

            ENUM55=(Token)input.LT(1);
            match(input,ENUM,FOLLOW_ENUM_in_enumDeclaration674); if (failed) return retval;
            if ( backtracking==0 ) {
            ENUM55_tree = (OMPTree)adaptor.create(ENUM55);
            adaptor.addChild(root_0, ENUM55_tree);
            }
            Identifier56=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_enumDeclaration676); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier56_tree = (OMPTree)adaptor.create(Identifier56);
            adaptor.addChild(root_0, Identifier56_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:121:25: ( 'implements' typeList )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==38) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:121:26: 'implements' typeList
                    {
                    string_literal57=(Token)input.LT(1);
                    match(input,38,FOLLOW_38_in_enumDeclaration679); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal57_tree = (OMPTree)adaptor.create(string_literal57);
                    adaptor.addChild(root_0, string_literal57_tree);
                    }
                    pushFollow(FOLLOW_typeList_in_enumDeclaration681);
                    typeList58=typeList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeList58.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_enumBody_in_enumDeclaration685);
            enumBody59=enumBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, enumBody59.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 14, enumDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enumDeclaration

    public static class enumBody extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enumBody
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:124:1: enumBody : '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' ;
    public final enumBody enumBody() throws RecognitionException, OMPParserException {
        enumBody retval = new enumBody();
        retval.setStart(input.LT(1));
        int enumBody_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal60=null;
        Token char_literal62=null;
        Token char_literal64=null;
        enumConstants enumConstants61 = null;

        enumBodyDeclarations enumBodyDeclarations63 = null;


        OMPTree char_literal60_tree=null;
        OMPTree char_literal62_tree=null;
        OMPTree char_literal64_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:125:5: ( '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:125:9: '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal60=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_enumBody704); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal60_tree = (OMPTree)adaptor.create(char_literal60);
            adaptor.addChild(root_0, char_literal60_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:125:13: ( enumConstants )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==Identifier||LA24_0==72) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: enumConstants
                    {
                    pushFollow(FOLLOW_enumConstants_in_enumBody706);
                    enumConstants61=enumConstants();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, enumConstants61.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:125:28: ( ',' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==40) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: ','
                    {
                    char_literal62=(Token)input.LT(1);
                    match(input,40,FOLLOW_40_in_enumBody709); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal62_tree = (OMPTree)adaptor.create(char_literal62);
                    adaptor.addChild(root_0, char_literal62_tree);
                    }

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:125:33: ( enumBodyDeclarations )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==25) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: enumBodyDeclarations
                    {
                    pushFollow(FOLLOW_enumBodyDeclarations_in_enumBody712);
                    enumBodyDeclarations63=enumBodyDeclarations();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, enumBodyDeclarations63.getTree());

                    }
                    break;

            }

            char_literal64=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_enumBody715); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal64_tree = (OMPTree)adaptor.create(char_literal64);
            adaptor.addChild(root_0, char_literal64_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 15, enumBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enumBody

    public static class enumConstants extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enumConstants
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:128:1: enumConstants : enumConstant ( ',' enumConstant )* ;
    public final enumConstants enumConstants() throws RecognitionException, OMPParserException {
        enumConstants retval = new enumConstants();
        retval.setStart(input.LT(1));
        int enumConstants_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal66=null;
        enumConstant enumConstant65 = null;

        enumConstant enumConstant67 = null;


        OMPTree char_literal66_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:129:5: ( enumConstant ( ',' enumConstant )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:129:9: enumConstant ( ',' enumConstant )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_enumConstant_in_enumConstants734);
            enumConstant65=enumConstant();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, enumConstant65.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:129:22: ( ',' enumConstant )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==40) ) {
                    int LA27_1 = input.LA(2);

                    if ( (LA27_1==Identifier||LA27_1==72) ) {
                        alt27=1;
                    }


                }


                switch (alt27) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:129:23: ',' enumConstant
            	    {
            	    char_literal66=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_enumConstants737); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal66_tree = (OMPTree)adaptor.create(char_literal66);
            	    adaptor.addChild(root_0, char_literal66_tree);
            	    }
            	    pushFollow(FOLLOW_enumConstant_in_enumConstants739);
            	    enumConstant67=enumConstant();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, enumConstant67.getTree());

            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 16, enumConstants_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enumConstants

    public static class enumConstant extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enumConstant
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:132:1: enumConstant : ( annotations )? Identifier ( arguments )? ( classBody )? ;
    public final enumConstant enumConstant() throws RecognitionException, OMPParserException {
        enumConstant retval = new enumConstant();
        retval.setStart(input.LT(1));
        int enumConstant_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier69=null;
        annotations annotations68 = null;

        arguments arguments70 = null;

        classBody classBody71 = null;


        OMPTree Identifier69_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:5: ( ( annotations )? Identifier ( arguments )? ( classBody )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:9: ( annotations )? Identifier ( arguments )? ( classBody )?
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:9: ( annotations )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==72) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: annotations
                    {
                    pushFollow(FOLLOW_annotations_in_enumConstant764);
                    annotations68=annotations();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotations68.getTree());

                    }
                    break;

            }

            Identifier69=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_enumConstant767); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier69_tree = (OMPTree)adaptor.create(Identifier69);
            adaptor.addChild(root_0, Identifier69_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:33: ( arguments )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==65) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:34: arguments
                    {
                    pushFollow(FOLLOW_arguments_in_enumConstant770);
                    arguments70=arguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arguments70.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:46: ( classBody )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==43) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:133:47: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_enumConstant775);
                    classBody71=classBody();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classBody71.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 17, enumConstant_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enumConstant

    public static class enumBodyDeclarations extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enumBodyDeclarations
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:136:1: enumBodyDeclarations : ';' ( classBodyDeclaration )* ;
    public final enumBodyDeclarations enumBodyDeclarations() throws RecognitionException, OMPParserException {
        enumBodyDeclarations retval = new enumBodyDeclarations();
        retval.setStart(input.LT(1));
        int enumBodyDeclarations_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal72=null;
        classBodyDeclaration classBodyDeclaration73 = null;


        OMPTree char_literal72_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:137:5: ( ';' ( classBodyDeclaration )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:137:9: ';' ( classBodyDeclaration )*
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal72=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_enumBodyDeclarations800); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal72_tree = (OMPTree)adaptor.create(char_literal72);
            adaptor.addChild(root_0, char_literal72_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:137:13: ( classBodyDeclaration )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=Identifier && LA31_0<=ENUM)||LA31_0==25||LA31_0==27||(LA31_0>=30 && LA31_0<=36)||LA31_0==39||LA31_0==43||(LA31_0>=45 && LA31_0<=46)||(LA31_0>=51 && LA31_0<=62)||LA31_0==72) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:137:14: classBodyDeclaration
            	    {
            	    pushFollow(FOLLOW_classBodyDeclaration_in_enumBodyDeclarations803);
            	    classBodyDeclaration73=classBodyDeclaration();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, classBodyDeclaration73.getTree());

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 18, enumBodyDeclarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enumBodyDeclarations

    public static class interfaceDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:140:1: interfaceDeclaration : ( normalInterfaceDeclaration | annotationTypeDeclaration );
    public final interfaceDeclaration interfaceDeclaration() throws RecognitionException, OMPParserException {
        interfaceDeclaration retval = new interfaceDeclaration();
        retval.setStart(input.LT(1));
        int interfaceDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        normalInterfaceDeclaration normalInterfaceDeclaration74 = null;

        annotationTypeDeclaration annotationTypeDeclaration75 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:141:5: ( normalInterfaceDeclaration | annotationTypeDeclaration )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==45) ) {
                alt32=1;
            }
            else if ( (LA32_0==72) ) {
                alt32=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("140:1: interfaceDeclaration : ( normalInterfaceDeclaration | annotationTypeDeclaration );", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:141:9: normalInterfaceDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration828);
                    normalInterfaceDeclaration74=normalInterfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, normalInterfaceDeclaration74.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:142:9: annotationTypeDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration838);
                    annotationTypeDeclaration75=annotationTypeDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotationTypeDeclaration75.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 19, interfaceDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceDeclaration

    public static class normalInterfaceDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start normalInterfaceDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:145:1: normalInterfaceDeclaration : 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody ;
    public final normalInterfaceDeclaration normalInterfaceDeclaration() throws RecognitionException, OMPParserException {
        normalInterfaceDeclaration retval = new normalInterfaceDeclaration();
        retval.setStart(input.LT(1));
        int normalInterfaceDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal76=null;
        Token Identifier77=null;
        Token string_literal79=null;
        typeParameters typeParameters78 = null;

        typeList typeList80 = null;

        interfaceBody interfaceBody81 = null;


        OMPTree string_literal76_tree=null;
        OMPTree Identifier77_tree=null;
        OMPTree string_literal79_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:146:5: ( 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:146:9: 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal76=(Token)input.LT(1);
            match(input,45,FOLLOW_45_in_normalInterfaceDeclaration861); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal76_tree = (OMPTree)adaptor.create(string_literal76);
            adaptor.addChild(root_0, string_literal76_tree);
            }
            Identifier77=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_normalInterfaceDeclaration863); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier77_tree = (OMPTree)adaptor.create(Identifier77);
            adaptor.addChild(root_0, Identifier77_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:146:32: ( typeParameters )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==39) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_normalInterfaceDeclaration865);
                    typeParameters78=typeParameters();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeParameters78.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:146:48: ( 'extends' typeList )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==37) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:146:49: 'extends' typeList
                    {
                    string_literal79=(Token)input.LT(1);
                    match(input,37,FOLLOW_37_in_normalInterfaceDeclaration869); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal79_tree = (OMPTree)adaptor.create(string_literal79);
                    adaptor.addChild(root_0, string_literal79_tree);
                    }
                    pushFollow(FOLLOW_typeList_in_normalInterfaceDeclaration871);
                    typeList80=typeList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeList80.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_interfaceBody_in_normalInterfaceDeclaration875);
            interfaceBody81=interfaceBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, interfaceBody81.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 20, normalInterfaceDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end normalInterfaceDeclaration

    public static class typeList extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeList
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:149:1: typeList : type ( ',' type )* ;
    public final typeList typeList() throws RecognitionException, OMPParserException {
        typeList retval = new typeList();
        retval.setStart(input.LT(1));
        int typeList_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal83=null;
        type type82 = null;

        type type84 = null;


        OMPTree char_literal83_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:150:5: ( type ( ',' type )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:150:9: type ( ',' type )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_type_in_typeList898);
            type82=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type82.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:150:14: ( ',' type )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==40) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:150:15: ',' type
            	    {
            	    char_literal83=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_typeList901); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal83_tree = (OMPTree)adaptor.create(char_literal83);
            	    adaptor.addChild(root_0, char_literal83_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_typeList903);
            	    type84=type();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, type84.getTree());

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 21, typeList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeList

    public static class classBody extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classBody
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:153:1: classBody : '{' ( classBodyDeclaration )* '}' ;
    public final classBody classBody() throws RecognitionException, OMPParserException {
        classBody retval = new classBody();
        retval.setStart(input.LT(1));
        int classBody_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal85=null;
        Token char_literal87=null;
        classBodyDeclaration classBodyDeclaration86 = null;


        OMPTree char_literal85_tree=null;
        OMPTree char_literal87_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:154:5: ( '{' ( classBodyDeclaration )* '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:154:9: '{' ( classBodyDeclaration )* '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal85=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_classBody928); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal85_tree = (OMPTree)adaptor.create(char_literal85);
            adaptor.addChild(root_0, char_literal85_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:154:13: ( classBodyDeclaration )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=Identifier && LA36_0<=ENUM)||LA36_0==25||LA36_0==27||(LA36_0>=30 && LA36_0<=36)||LA36_0==39||LA36_0==43||(LA36_0>=45 && LA36_0<=46)||(LA36_0>=51 && LA36_0<=62)||LA36_0==72) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: classBodyDeclaration
            	    {
            	    pushFollow(FOLLOW_classBodyDeclaration_in_classBody930);
            	    classBodyDeclaration86=classBodyDeclaration();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, classBodyDeclaration86.getTree());

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            char_literal87=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_classBody933); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal87_tree = (OMPTree)adaptor.create(char_literal87);
            adaptor.addChild(root_0, char_literal87_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 22, classBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classBody

    public static class interfaceBody extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceBody
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:157:1: interfaceBody : '{' ( interfaceBodyDeclaration )* '}' ;
    public final interfaceBody interfaceBody() throws RecognitionException, OMPParserException {
        interfaceBody retval = new interfaceBody();
        retval.setStart(input.LT(1));
        int interfaceBody_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal88=null;
        Token char_literal90=null;
        interfaceBodyDeclaration interfaceBodyDeclaration89 = null;


        OMPTree char_literal88_tree=null;
        OMPTree char_literal90_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:158:5: ( '{' ( interfaceBodyDeclaration )* '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:158:9: '{' ( interfaceBodyDeclaration )* '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal88=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_interfaceBody956); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal88_tree = (OMPTree)adaptor.create(char_literal88);
            adaptor.addChild(root_0, char_literal88_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:158:13: ( interfaceBodyDeclaration )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( ((LA37_0>=Identifier && LA37_0<=ENUM)||LA37_0==25||LA37_0==27||(LA37_0>=30 && LA37_0<=36)||LA37_0==39||(LA37_0>=45 && LA37_0<=46)||(LA37_0>=51 && LA37_0<=62)||LA37_0==72) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: interfaceBodyDeclaration
            	    {
            	    pushFollow(FOLLOW_interfaceBodyDeclaration_in_interfaceBody958);
            	    interfaceBodyDeclaration89=interfaceBodyDeclaration();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceBodyDeclaration89.getTree());

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            char_literal90=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_interfaceBody961); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal90_tree = (OMPTree)adaptor.create(char_literal90);
            adaptor.addChild(root_0, char_literal90_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 23, interfaceBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceBody

    public static class classBodyDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classBodyDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:161:1: classBodyDeclaration : ( ';' | ( 'static' )? block | modifiers memberDecl );
    public final classBodyDeclaration classBodyDeclaration() throws RecognitionException, OMPParserException {
        classBodyDeclaration retval = new classBodyDeclaration();
        retval.setStart(input.LT(1));
        int classBodyDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal91=null;
        Token string_literal92=null;
        block block93 = null;

        modifiers modifiers94 = null;

        memberDecl memberDecl95 = null;


        OMPTree char_literal91_tree=null;
        OMPTree string_literal92_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:162:5: ( ';' | ( 'static' )? block | modifiers memberDecl )
            int alt39=3;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt39=1;
                }
                break;
            case 27:
                {
                int LA39_2 = input.LA(2);

                if ( ((LA39_2>=Identifier && LA39_2<=ENUM)||LA39_2==27||(LA39_2>=30 && LA39_2<=36)||LA39_2==39||(LA39_2>=45 && LA39_2<=46)||(LA39_2>=51 && LA39_2<=62)||LA39_2==72) ) {
                    alt39=3;
                }
                else if ( (LA39_2==43) ) {
                    alt39=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("161:1: classBodyDeclaration : ( ';' | ( 'static' )? block | modifiers memberDecl );", 39, 2, input);

                    throw nvae;
                }
                }
                break;
            case 43:
                {
                alt39=2;
                }
                break;
            case Identifier:
            case ENUM:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 39:
            case 45:
            case 46:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 72:
                {
                alt39=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("161:1: classBodyDeclaration : ( ';' | ( 'static' )? block | modifiers memberDecl );", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:162:9: ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal91=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_classBodyDeclaration980); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal91_tree = (OMPTree)adaptor.create(char_literal91);
                    adaptor.addChild(root_0, char_literal91_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:163:9: ( 'static' )? block
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:163:9: ( 'static' )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==27) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: 'static'
                            {
                            string_literal92=(Token)input.LT(1);
                            match(input,27,FOLLOW_27_in_classBodyDeclaration990); if (failed) return retval;
                            if ( backtracking==0 ) {
                            string_literal92_tree = (OMPTree)adaptor.create(string_literal92);
                            adaptor.addChild(root_0, string_literal92_tree);
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_block_in_classBodyDeclaration993);
                    block93=block();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, block93.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:164:9: modifiers memberDecl
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_modifiers_in_classBodyDeclaration1003);
                    modifiers94=modifiers();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, modifiers94.getTree());
                    pushFollow(FOLLOW_memberDecl_in_classBodyDeclaration1005);
                    memberDecl95=memberDecl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, memberDecl95.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 24, classBodyDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classBodyDeclaration

    public static class memberDecl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start memberDecl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:167:1: memberDecl : ( genericMethodOrConstructorDecl | memberDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration );
    public final memberDecl memberDecl() throws RecognitionException, OMPParserException {
        memberDecl retval = new memberDecl();
        retval.setStart(input.LT(1));
        int memberDecl_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal98=null;
        Token Identifier99=null;
        Token Identifier101=null;
        genericMethodOrConstructorDecl genericMethodOrConstructorDecl96 = null;

        memberDeclaration memberDeclaration97 = null;

        voidMethodDeclaratorRest voidMethodDeclaratorRest100 = null;

        constructorDeclaratorRest constructorDeclaratorRest102 = null;

        interfaceDeclaration interfaceDeclaration103 = null;

        classDeclaration classDeclaration104 = null;


        OMPTree string_literal98_tree=null;
        OMPTree Identifier99_tree=null;
        OMPTree Identifier101_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:168:5: ( genericMethodOrConstructorDecl | memberDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration )
            int alt40=6;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt40=1;
                }
                break;
            case Identifier:
                {
                int LA40_2 = input.LA(2);

                if ( (LA40_2==65) ) {
                    alt40=4;
                }
                else if ( (LA40_2==Identifier||LA40_2==28||LA40_2==39||LA40_2==47) ) {
                    alt40=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("167:1: memberDecl : ( genericMethodOrConstructorDecl | memberDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration );", 40, 2, input);

                    throw nvae;
                }
                }
                break;
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                alt40=2;
                }
                break;
            case 46:
                {
                alt40=3;
                }
                break;
            case 45:
            case 72:
                {
                alt40=5;
                }
                break;
            case ENUM:
            case 36:
                {
                alt40=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("167:1: memberDecl : ( genericMethodOrConstructorDecl | memberDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration );", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:168:9: genericMethodOrConstructorDecl
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_genericMethodOrConstructorDecl_in_memberDecl1028);
                    genericMethodOrConstructorDecl96=genericMethodOrConstructorDecl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, genericMethodOrConstructorDecl96.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:169:9: memberDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_memberDeclaration_in_memberDecl1038);
                    memberDeclaration97=memberDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, memberDeclaration97.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:170:9: 'void' Identifier voidMethodDeclaratorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal98=(Token)input.LT(1);
                    match(input,46,FOLLOW_46_in_memberDecl1048); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal98_tree = (OMPTree)adaptor.create(string_literal98);
                    adaptor.addChild(root_0, string_literal98_tree);
                    }
                    Identifier99=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_memberDecl1050); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier99_tree = (OMPTree)adaptor.create(Identifier99);
                    adaptor.addChild(root_0, Identifier99_tree);
                    }
                    pushFollow(FOLLOW_voidMethodDeclaratorRest_in_memberDecl1052);
                    voidMethodDeclaratorRest100=voidMethodDeclaratorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, voidMethodDeclaratorRest100.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:171:9: Identifier constructorDeclaratorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    Identifier101=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_memberDecl1062); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier101_tree = (OMPTree)adaptor.create(Identifier101);
                    adaptor.addChild(root_0, Identifier101_tree);
                    }
                    pushFollow(FOLLOW_constructorDeclaratorRest_in_memberDecl1064);
                    constructorDeclaratorRest102=constructorDeclaratorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, constructorDeclaratorRest102.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:172:9: interfaceDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_interfaceDeclaration_in_memberDecl1074);
                    interfaceDeclaration103=interfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceDeclaration103.getTree());

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:173:9: classDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_classDeclaration_in_memberDecl1084);
                    classDeclaration104=classDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classDeclaration104.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 25, memberDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end memberDecl

    public static class memberDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start memberDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:176:1: memberDeclaration : type ( methodDeclaration | fieldDeclaration ) ;
    public final memberDeclaration memberDeclaration() throws RecognitionException, OMPParserException {
        memberDeclaration retval = new memberDeclaration();
        retval.setStart(input.LT(1));
        int memberDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        type type105 = null;

        methodDeclaration methodDeclaration106 = null;

        fieldDeclaration fieldDeclaration107 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:177:5: ( type ( methodDeclaration | fieldDeclaration ) )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:177:9: type ( methodDeclaration | fieldDeclaration )
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_type_in_memberDeclaration1107);
            type105=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type105.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:177:14: ( methodDeclaration | fieldDeclaration )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==Identifier) ) {
                int LA41_1 = input.LA(2);

                if ( (LA41_1==25||LA41_1==40||LA41_1==47||LA41_1==50) ) {
                    alt41=2;
                }
                else if ( (LA41_1==65) ) {
                    alt41=1;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("177:14: ( methodDeclaration | fieldDeclaration )", 41, 1, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("177:14: ( methodDeclaration | fieldDeclaration )", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:177:15: methodDeclaration
                    {
                    pushFollow(FOLLOW_methodDeclaration_in_memberDeclaration1110);
                    methodDeclaration106=methodDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, methodDeclaration106.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:177:35: fieldDeclaration
                    {
                    pushFollow(FOLLOW_fieldDeclaration_in_memberDeclaration1114);
                    fieldDeclaration107=fieldDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, fieldDeclaration107.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 26, memberDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end memberDeclaration

    public static class genericMethodOrConstructorDecl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start genericMethodOrConstructorDecl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:180:1: genericMethodOrConstructorDecl : typeParameters genericMethodOrConstructorRest ;
    public final genericMethodOrConstructorDecl genericMethodOrConstructorDecl() throws RecognitionException, OMPParserException {
        genericMethodOrConstructorDecl retval = new genericMethodOrConstructorDecl();
        retval.setStart(input.LT(1));
        int genericMethodOrConstructorDecl_StartIndex = input.index();
        OMPTree root_0 = null;

        typeParameters typeParameters108 = null;

        genericMethodOrConstructorRest genericMethodOrConstructorRest109 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:181:5: ( typeParameters genericMethodOrConstructorRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:181:9: typeParameters genericMethodOrConstructorRest
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_typeParameters_in_genericMethodOrConstructorDecl1134);
            typeParameters108=typeParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, typeParameters108.getTree());
            pushFollow(FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl1136);
            genericMethodOrConstructorRest109=genericMethodOrConstructorRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, genericMethodOrConstructorRest109.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 27, genericMethodOrConstructorDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end genericMethodOrConstructorDecl

    public static class genericMethodOrConstructorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start genericMethodOrConstructorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:184:1: genericMethodOrConstructorRest : ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest );
    public final genericMethodOrConstructorRest genericMethodOrConstructorRest() throws RecognitionException, OMPParserException {
        genericMethodOrConstructorRest retval = new genericMethodOrConstructorRest();
        retval.setStart(input.LT(1));
        int genericMethodOrConstructorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal111=null;
        Token Identifier112=null;
        Token Identifier114=null;
        type type110 = null;

        methodDeclaratorRest methodDeclaratorRest113 = null;

        constructorDeclaratorRest constructorDeclaratorRest115 = null;


        OMPTree string_literal111_tree=null;
        OMPTree Identifier112_tree=null;
        OMPTree Identifier114_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 28) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:185:5: ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==Identifier) ) {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==65) ) {
                    alt43=2;
                }
                else if ( (LA43_1==Identifier||LA43_1==28||LA43_1==39||LA43_1==47) ) {
                    alt43=1;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("184:1: genericMethodOrConstructorRest : ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest );", 43, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA43_0==46||(LA43_0>=55 && LA43_0<=62)) ) {
                alt43=1;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("184:1: genericMethodOrConstructorRest : ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest );", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:185:9: ( type | 'void' ) Identifier methodDeclaratorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:185:9: ( type | 'void' )
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==Identifier||(LA42_0>=55 && LA42_0<=62)) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==46) ) {
                        alt42=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("185:9: ( type | 'void' )", 42, 0, input);

                        throw nvae;
                    }
                    switch (alt42) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:185:10: type
                            {
                            pushFollow(FOLLOW_type_in_genericMethodOrConstructorRest1160);
                            type110=type();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, type110.getTree());

                            }
                            break;
                        case 2 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:185:17: 'void'
                            {
                            string_literal111=(Token)input.LT(1);
                            match(input,46,FOLLOW_46_in_genericMethodOrConstructorRest1164); if (failed) return retval;
                            if ( backtracking==0 ) {
                            string_literal111_tree = (OMPTree)adaptor.create(string_literal111);
                            adaptor.addChild(root_0, string_literal111_tree);
                            }

                            }
                            break;

                    }

                    Identifier112=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_genericMethodOrConstructorRest1167); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier112_tree = (OMPTree)adaptor.create(Identifier112);
                    adaptor.addChild(root_0, Identifier112_tree);
                    }
                    pushFollow(FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest1169);
                    methodDeclaratorRest113=methodDeclaratorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, methodDeclaratorRest113.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:186:9: Identifier constructorDeclaratorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    Identifier114=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_genericMethodOrConstructorRest1179); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier114_tree = (OMPTree)adaptor.create(Identifier114);
                    adaptor.addChild(root_0, Identifier114_tree);
                    }
                    pushFollow(FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest1181);
                    constructorDeclaratorRest115=constructorDeclaratorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, constructorDeclaratorRest115.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 28, genericMethodOrConstructorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end genericMethodOrConstructorRest

    public static class methodDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start methodDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:189:1: methodDeclaration : Identifier methodDeclaratorRest ;
    public final methodDeclaration methodDeclaration() throws RecognitionException, OMPParserException {
        methodDeclaration retval = new methodDeclaration();
        retval.setStart(input.LT(1));
        int methodDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier116=null;
        methodDeclaratorRest methodDeclaratorRest117 = null;


        OMPTree Identifier116_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:190:5: ( Identifier methodDeclaratorRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:190:9: Identifier methodDeclaratorRest
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier116=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_methodDeclaration1200); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier116_tree = (OMPTree)adaptor.create(Identifier116);
            adaptor.addChild(root_0, Identifier116_tree);
            }
            pushFollow(FOLLOW_methodDeclaratorRest_in_methodDeclaration1202);
            methodDeclaratorRest117=methodDeclaratorRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, methodDeclaratorRest117.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 29, methodDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end methodDeclaration

    public static class fieldDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start fieldDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:193:1: fieldDeclaration : variableDeclarators ';' ;
    public final fieldDeclaration fieldDeclaration() throws RecognitionException, OMPParserException {
        fieldDeclaration retval = new fieldDeclaration();
        retval.setStart(input.LT(1));
        int fieldDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal119=null;
        variableDeclarators variableDeclarators118 = null;


        OMPTree char_literal119_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:194:5: ( variableDeclarators ';' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:194:9: variableDeclarators ';'
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableDeclarators_in_fieldDeclaration1221);
            variableDeclarators118=variableDeclarators();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclarators118.getTree());
            char_literal119=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_fieldDeclaration1223); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal119_tree = (OMPTree)adaptor.create(char_literal119);
            adaptor.addChild(root_0, char_literal119_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 30, fieldDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end fieldDeclaration

    public static class interfaceBodyDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceBodyDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:197:1: interfaceBodyDeclaration : ( modifiers interfaceMemberDecl | ';' );
    public final interfaceBodyDeclaration interfaceBodyDeclaration() throws RecognitionException, OMPParserException {
        interfaceBodyDeclaration retval = new interfaceBodyDeclaration();
        retval.setStart(input.LT(1));
        int interfaceBodyDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal122=null;
        modifiers modifiers120 = null;

        interfaceMemberDecl interfaceMemberDecl121 = null;


        OMPTree char_literal122_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:198:5: ( modifiers interfaceMemberDecl | ';' )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( ((LA44_0>=Identifier && LA44_0<=ENUM)||LA44_0==27||(LA44_0>=30 && LA44_0<=36)||LA44_0==39||(LA44_0>=45 && LA44_0<=46)||(LA44_0>=51 && LA44_0<=62)||LA44_0==72) ) {
                alt44=1;
            }
            else if ( (LA44_0==25) ) {
                alt44=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("197:1: interfaceBodyDeclaration : ( modifiers interfaceMemberDecl | ';' );", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:198:9: modifiers interfaceMemberDecl
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_modifiers_in_interfaceBodyDeclaration1250);
                    modifiers120=modifiers();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, modifiers120.getTree());
                    pushFollow(FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration1252);
                    interfaceMemberDecl121=interfaceMemberDecl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceMemberDecl121.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:199:9: ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal122=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_interfaceBodyDeclaration1262); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal122_tree = (OMPTree)adaptor.create(char_literal122);
                    adaptor.addChild(root_0, char_literal122_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 31, interfaceBodyDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceBodyDeclaration

    public static class interfaceMemberDecl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceMemberDecl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:202:1: interfaceMemberDecl : ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration );
    public final interfaceMemberDecl interfaceMemberDecl() throws RecognitionException, OMPParserException {
        interfaceMemberDecl retval = new interfaceMemberDecl();
        retval.setStart(input.LT(1));
        int interfaceMemberDecl_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal125=null;
        Token Identifier126=null;
        interfaceMethodOrFieldDecl interfaceMethodOrFieldDecl123 = null;

        interfaceGenericMethodDecl interfaceGenericMethodDecl124 = null;

        voidInterfaceMethodDeclaratorRest voidInterfaceMethodDeclaratorRest127 = null;

        interfaceDeclaration interfaceDeclaration128 = null;

        classDeclaration classDeclaration129 = null;


        OMPTree string_literal125_tree=null;
        OMPTree Identifier126_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:203:5: ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration )
            int alt45=5;
            switch ( input.LA(1) ) {
            case Identifier:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                alt45=1;
                }
                break;
            case 39:
                {
                alt45=2;
                }
                break;
            case 46:
                {
                alt45=3;
                }
                break;
            case 45:
            case 72:
                {
                alt45=4;
                }
                break;
            case ENUM:
            case 36:
                {
                alt45=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("202:1: interfaceMemberDecl : ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration );", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:203:9: interfaceMethodOrFieldDecl
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl1281);
                    interfaceMethodOrFieldDecl123=interfaceMethodOrFieldDecl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceMethodOrFieldDecl123.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:204:9: interfaceGenericMethodDecl
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl1291);
                    interfaceGenericMethodDecl124=interfaceGenericMethodDecl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceGenericMethodDecl124.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:205:9: 'void' Identifier voidInterfaceMethodDeclaratorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal125=(Token)input.LT(1);
                    match(input,46,FOLLOW_46_in_interfaceMemberDecl1301); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal125_tree = (OMPTree)adaptor.create(string_literal125);
                    adaptor.addChild(root_0, string_literal125_tree);
                    }
                    Identifier126=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_interfaceMemberDecl1303); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier126_tree = (OMPTree)adaptor.create(Identifier126);
                    adaptor.addChild(root_0, Identifier126_tree);
                    }
                    pushFollow(FOLLOW_voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl1305);
                    voidInterfaceMethodDeclaratorRest127=voidInterfaceMethodDeclaratorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, voidInterfaceMethodDeclaratorRest127.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:206:9: interfaceDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_interfaceDeclaration_in_interfaceMemberDecl1315);
                    interfaceDeclaration128=interfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceDeclaration128.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:207:9: classDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_classDeclaration_in_interfaceMemberDecl1325);
                    classDeclaration129=classDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classDeclaration129.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 32, interfaceMemberDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceMemberDecl

    public static class interfaceMethodOrFieldDecl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceMethodOrFieldDecl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:210:1: interfaceMethodOrFieldDecl : type Identifier interfaceMethodOrFieldRest ;
    public final interfaceMethodOrFieldDecl interfaceMethodOrFieldDecl() throws RecognitionException, OMPParserException {
        interfaceMethodOrFieldDecl retval = new interfaceMethodOrFieldDecl();
        retval.setStart(input.LT(1));
        int interfaceMethodOrFieldDecl_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier131=null;
        type type130 = null;

        interfaceMethodOrFieldRest interfaceMethodOrFieldRest132 = null;


        OMPTree Identifier131_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:211:5: ( type Identifier interfaceMethodOrFieldRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:211:9: type Identifier interfaceMethodOrFieldRest
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_type_in_interfaceMethodOrFieldDecl1348);
            type130=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type130.getTree());
            Identifier131=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_interfaceMethodOrFieldDecl1350); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier131_tree = (OMPTree)adaptor.create(Identifier131);
            adaptor.addChild(root_0, Identifier131_tree);
            }
            pushFollow(FOLLOW_interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl1352);
            interfaceMethodOrFieldRest132=interfaceMethodOrFieldRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, interfaceMethodOrFieldRest132.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 33, interfaceMethodOrFieldDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceMethodOrFieldDecl

    public static class interfaceMethodOrFieldRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceMethodOrFieldRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:214:1: interfaceMethodOrFieldRest : ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest );
    public final interfaceMethodOrFieldRest interfaceMethodOrFieldRest() throws RecognitionException, OMPParserException {
        interfaceMethodOrFieldRest retval = new interfaceMethodOrFieldRest();
        retval.setStart(input.LT(1));
        int interfaceMethodOrFieldRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal134=null;
        constantDeclaratorsRest constantDeclaratorsRest133 = null;

        interfaceMethodDeclaratorRest interfaceMethodDeclaratorRest135 = null;


        OMPTree char_literal134_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:215:5: ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==47||LA46_0==50) ) {
                alt46=1;
            }
            else if ( (LA46_0==65) ) {
                alt46=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("214:1: interfaceMethodOrFieldRest : ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest );", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:215:9: constantDeclaratorsRest ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_constantDeclaratorsRest_in_interfaceMethodOrFieldRest1375);
                    constantDeclaratorsRest133=constantDeclaratorsRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, constantDeclaratorsRest133.getTree());
                    char_literal134=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_interfaceMethodOrFieldRest1377); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal134_tree = (OMPTree)adaptor.create(char_literal134);
                    adaptor.addChild(root_0, char_literal134_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:216:9: interfaceMethodDeclaratorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest1387);
                    interfaceMethodDeclaratorRest135=interfaceMethodDeclaratorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, interfaceMethodDeclaratorRest135.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 34, interfaceMethodOrFieldRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceMethodOrFieldRest

    public static class methodDeclaratorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start methodDeclaratorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:219:1: methodDeclaratorRest : formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' ) ;
    public final methodDeclaratorRest methodDeclaratorRest() throws RecognitionException, OMPParserException {
        methodDeclaratorRest retval = new methodDeclaratorRest();
        retval.setStart(input.LT(1));
        int methodDeclaratorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal137=null;
        Token char_literal138=null;
        Token string_literal139=null;
        Token char_literal142=null;
        formalParameters formalParameters136 = null;

        qualifiedNameList qualifiedNameList140 = null;

        methodBody methodBody141 = null;


        OMPTree char_literal137_tree=null;
        OMPTree char_literal138_tree=null;
        OMPTree string_literal139_tree=null;
        OMPTree char_literal142_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:220:5: ( formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' ) )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:220:9: formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' )
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_methodDeclaratorRest1410);
            formalParameters136=formalParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameters136.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:220:26: ( '[' ']' )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==47) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:220:27: '[' ']'
            	    {
            	    char_literal137=(Token)input.LT(1);
            	    match(input,47,FOLLOW_47_in_methodDeclaratorRest1413); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal137_tree = (OMPTree)adaptor.create(char_literal137);
            	    adaptor.addChild(root_0, char_literal137_tree);
            	    }
            	    char_literal138=(Token)input.LT(1);
            	    match(input,48,FOLLOW_48_in_methodDeclaratorRest1415); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal138_tree = (OMPTree)adaptor.create(char_literal138);
            	    adaptor.addChild(root_0, char_literal138_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:221:9: ( 'throws' qualifiedNameList )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==49) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:221:10: 'throws' qualifiedNameList
                    {
                    string_literal139=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_methodDeclaratorRest1428); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal139_tree = (OMPTree)adaptor.create(string_literal139);
                    adaptor.addChild(root_0, string_literal139_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_methodDeclaratorRest1430);
                    qualifiedNameList140=qualifiedNameList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedNameList140.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:222:9: ( methodBody | ';' )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==43) ) {
                alt49=1;
            }
            else if ( (LA49_0==25) ) {
                alt49=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("222:9: ( methodBody | ';' )", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:222:13: methodBody
                    {
                    pushFollow(FOLLOW_methodBody_in_methodDeclaratorRest1446);
                    methodBody141=methodBody();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, methodBody141.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:223:13: ';'
                    {
                    char_literal142=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_methodDeclaratorRest1460); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal142_tree = (OMPTree)adaptor.create(char_literal142);
                    adaptor.addChild(root_0, char_literal142_tree);
                    }

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 35, methodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end methodDeclaratorRest

    public static class voidMethodDeclaratorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start voidMethodDeclaratorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:227:1: voidMethodDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' ) ;
    public final voidMethodDeclaratorRest voidMethodDeclaratorRest() throws RecognitionException, OMPParserException {
        voidMethodDeclaratorRest retval = new voidMethodDeclaratorRest();
        retval.setStart(input.LT(1));
        int voidMethodDeclaratorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal144=null;
        Token char_literal147=null;
        formalParameters formalParameters143 = null;

        qualifiedNameList qualifiedNameList145 = null;

        methodBody methodBody146 = null;


        OMPTree string_literal144_tree=null;
        OMPTree char_literal147_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:228:5: ( formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' ) )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:228:9: formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' )
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_voidMethodDeclaratorRest1493);
            formalParameters143=formalParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameters143.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:228:26: ( 'throws' qualifiedNameList )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==49) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:228:27: 'throws' qualifiedNameList
                    {
                    string_literal144=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_voidMethodDeclaratorRest1496); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal144_tree = (OMPTree)adaptor.create(string_literal144);
                    adaptor.addChild(root_0, string_literal144_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest1498);
                    qualifiedNameList145=qualifiedNameList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedNameList145.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:229:9: ( methodBody | ';' )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==43) ) {
                alt51=1;
            }
            else if ( (LA51_0==25) ) {
                alt51=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("229:9: ( methodBody | ';' )", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:229:13: methodBody
                    {
                    pushFollow(FOLLOW_methodBody_in_voidMethodDeclaratorRest1514);
                    methodBody146=methodBody();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, methodBody146.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:230:13: ';'
                    {
                    char_literal147=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_voidMethodDeclaratorRest1528); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal147_tree = (OMPTree)adaptor.create(char_literal147);
                    adaptor.addChild(root_0, char_literal147_tree);
                    }

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 36, voidMethodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end voidMethodDeclaratorRest

    public static class interfaceMethodDeclaratorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceMethodDeclaratorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:234:1: interfaceMethodDeclaratorRest : formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' ;
    public final interfaceMethodDeclaratorRest interfaceMethodDeclaratorRest() throws RecognitionException, OMPParserException {
        interfaceMethodDeclaratorRest retval = new interfaceMethodDeclaratorRest();
        retval.setStart(input.LT(1));
        int interfaceMethodDeclaratorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal149=null;
        Token char_literal150=null;
        Token string_literal151=null;
        Token char_literal153=null;
        formalParameters formalParameters148 = null;

        qualifiedNameList qualifiedNameList152 = null;


        OMPTree char_literal149_tree=null;
        OMPTree char_literal150_tree=null;
        OMPTree string_literal151_tree=null;
        OMPTree char_literal153_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:235:5: ( formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:235:9: formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';'
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest1561);
            formalParameters148=formalParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameters148.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:235:26: ( '[' ']' )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==47) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:235:27: '[' ']'
            	    {
            	    char_literal149=(Token)input.LT(1);
            	    match(input,47,FOLLOW_47_in_interfaceMethodDeclaratorRest1564); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal149_tree = (OMPTree)adaptor.create(char_literal149);
            	    adaptor.addChild(root_0, char_literal149_tree);
            	    }
            	    char_literal150=(Token)input.LT(1);
            	    match(input,48,FOLLOW_48_in_interfaceMethodDeclaratorRest1566); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal150_tree = (OMPTree)adaptor.create(char_literal150);
            	    adaptor.addChild(root_0, char_literal150_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:235:37: ( 'throws' qualifiedNameList )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==49) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:235:38: 'throws' qualifiedNameList
                    {
                    string_literal151=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_interfaceMethodDeclaratorRest1571); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal151_tree = (OMPTree)adaptor.create(string_literal151);
                    adaptor.addChild(root_0, string_literal151_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest1573);
                    qualifiedNameList152=qualifiedNameList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedNameList152.getTree());

                    }
                    break;

            }

            char_literal153=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_interfaceMethodDeclaratorRest1577); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal153_tree = (OMPTree)adaptor.create(char_literal153);
            adaptor.addChild(root_0, char_literal153_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 37, interfaceMethodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceMethodDeclaratorRest

    public static class interfaceGenericMethodDecl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start interfaceGenericMethodDecl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:238:1: interfaceGenericMethodDecl : typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest ;
    public final interfaceGenericMethodDecl interfaceGenericMethodDecl() throws RecognitionException, OMPParserException {
        interfaceGenericMethodDecl retval = new interfaceGenericMethodDecl();
        retval.setStart(input.LT(1));
        int interfaceGenericMethodDecl_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal156=null;
        Token Identifier157=null;
        typeParameters typeParameters154 = null;

        type type155 = null;

        interfaceMethodDeclaratorRest interfaceMethodDeclaratorRest158 = null;


        OMPTree string_literal156_tree=null;
        OMPTree Identifier157_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:239:5: ( typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:239:9: typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_typeParameters_in_interfaceGenericMethodDecl1600);
            typeParameters154=typeParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, typeParameters154.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:239:24: ( type | 'void' )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==Identifier||(LA54_0>=55 && LA54_0<=62)) ) {
                alt54=1;
            }
            else if ( (LA54_0==46) ) {
                alt54=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("239:24: ( type | 'void' )", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:239:25: type
                    {
                    pushFollow(FOLLOW_type_in_interfaceGenericMethodDecl1603);
                    type155=type();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, type155.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:239:32: 'void'
                    {
                    string_literal156=(Token)input.LT(1);
                    match(input,46,FOLLOW_46_in_interfaceGenericMethodDecl1607); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal156_tree = (OMPTree)adaptor.create(string_literal156);
                    adaptor.addChild(root_0, string_literal156_tree);
                    }

                    }
                    break;

            }

            Identifier157=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_interfaceGenericMethodDecl1610); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier157_tree = (OMPTree)adaptor.create(Identifier157);
            adaptor.addChild(root_0, Identifier157_tree);
            }
            pushFollow(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl1620);
            interfaceMethodDeclaratorRest158=interfaceMethodDeclaratorRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, interfaceMethodDeclaratorRest158.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 38, interfaceGenericMethodDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end interfaceGenericMethodDecl

    public static class voidInterfaceMethodDeclaratorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start voidInterfaceMethodDeclaratorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:243:1: voidInterfaceMethodDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? ';' ;
    public final voidInterfaceMethodDeclaratorRest voidInterfaceMethodDeclaratorRest() throws RecognitionException, OMPParserException {
        voidInterfaceMethodDeclaratorRest retval = new voidInterfaceMethodDeclaratorRest();
        retval.setStart(input.LT(1));
        int voidInterfaceMethodDeclaratorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal160=null;
        Token char_literal162=null;
        formalParameters formalParameters159 = null;

        qualifiedNameList qualifiedNameList161 = null;


        OMPTree string_literal160_tree=null;
        OMPTree char_literal162_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:244:5: ( formalParameters ( 'throws' qualifiedNameList )? ';' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:244:9: formalParameters ( 'throws' qualifiedNameList )? ';'
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest1643);
            formalParameters159=formalParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameters159.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:244:26: ( 'throws' qualifiedNameList )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==49) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:244:27: 'throws' qualifiedNameList
                    {
                    string_literal160=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_voidInterfaceMethodDeclaratorRest1646); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal160_tree = (OMPTree)adaptor.create(string_literal160);
                    adaptor.addChild(root_0, string_literal160_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest1648);
                    qualifiedNameList161=qualifiedNameList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedNameList161.getTree());

                    }
                    break;

            }

            char_literal162=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_voidInterfaceMethodDeclaratorRest1652); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal162_tree = (OMPTree)adaptor.create(char_literal162);
            adaptor.addChild(root_0, char_literal162_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 39, voidInterfaceMethodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end voidInterfaceMethodDeclaratorRest

    public static class constructorDeclaratorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start constructorDeclaratorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:247:1: constructorDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? constructorBody ;
    public final constructorDeclaratorRest constructorDeclaratorRest() throws RecognitionException, OMPParserException {
        constructorDeclaratorRest retval = new constructorDeclaratorRest();
        retval.setStart(input.LT(1));
        int constructorDeclaratorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal164=null;
        formalParameters formalParameters163 = null;

        qualifiedNameList qualifiedNameList165 = null;

        constructorBody constructorBody166 = null;


        OMPTree string_literal164_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:248:5: ( formalParameters ( 'throws' qualifiedNameList )? constructorBody )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:248:9: formalParameters ( 'throws' qualifiedNameList )? constructorBody
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_constructorDeclaratorRest1675);
            formalParameters163=formalParameters();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameters163.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:248:26: ( 'throws' qualifiedNameList )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==49) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:248:27: 'throws' qualifiedNameList
                    {
                    string_literal164=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_constructorDeclaratorRest1678); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal164_tree = (OMPTree)adaptor.create(string_literal164);
                    adaptor.addChild(root_0, string_literal164_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_constructorDeclaratorRest1680);
                    qualifiedNameList165=qualifiedNameList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedNameList165.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_constructorBody_in_constructorDeclaratorRest1684);
            constructorBody166=constructorBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, constructorBody166.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 40, constructorDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constructorDeclaratorRest

    public static class constantDeclarator extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start constantDeclarator
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:251:1: constantDeclarator : Identifier constantDeclaratorRest ;
    public final constantDeclarator constantDeclarator() throws RecognitionException, OMPParserException {
        constantDeclarator retval = new constantDeclarator();
        retval.setStart(input.LT(1));
        int constantDeclarator_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier167=null;
        constantDeclaratorRest constantDeclaratorRest168 = null;


        OMPTree Identifier167_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:252:5: ( Identifier constantDeclaratorRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:252:9: Identifier constantDeclaratorRest
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier167=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_constantDeclarator1703); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier167_tree = (OMPTree)adaptor.create(Identifier167);
            adaptor.addChild(root_0, Identifier167_tree);
            }
            pushFollow(FOLLOW_constantDeclaratorRest_in_constantDeclarator1705);
            constantDeclaratorRest168=constantDeclaratorRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, constantDeclaratorRest168.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 41, constantDeclarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constantDeclarator

    public static class variableDeclarators extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableDeclarators
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:255:1: variableDeclarators : variableDeclarator ( ',' variableDeclarator )* ;
    public final variableDeclarators variableDeclarators() throws RecognitionException, OMPParserException {
        variableDeclarators retval = new variableDeclarators();
        retval.setStart(input.LT(1));
        int variableDeclarators_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal170=null;
        variableDeclarator variableDeclarator169 = null;

        variableDeclarator variableDeclarator171 = null;


        OMPTree char_literal170_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:256:5: ( variableDeclarator ( ',' variableDeclarator )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:256:9: variableDeclarator ( ',' variableDeclarator )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators1728);
            variableDeclarator169=variableDeclarator();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclarator169.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:256:28: ( ',' variableDeclarator )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==40) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:256:29: ',' variableDeclarator
            	    {
            	    char_literal170=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_variableDeclarators1731); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal170_tree = (OMPTree)adaptor.create(char_literal170);
            	    adaptor.addChild(root_0, char_literal170_tree);
            	    }
            	    pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators1733);
            	    variableDeclarator171=variableDeclarator();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclarator171.getTree());

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 42, variableDeclarators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableDeclarators

    public static class variableDeclarator extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableDeclarator
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:259:1: variableDeclarator : variableDeclaratorId ( '=' variableInitializer )? ;
    public final variableDeclarator variableDeclarator() throws RecognitionException, OMPParserException {
        variableDeclarator retval = new variableDeclarator();
        retval.setStart(input.LT(1));
        int variableDeclarator_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal173=null;
        variableDeclaratorId variableDeclaratorId172 = null;

        variableInitializer variableInitializer174 = null;


        OMPTree char_literal173_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:260:5: ( variableDeclaratorId ( '=' variableInitializer )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:260:9: variableDeclaratorId ( '=' variableInitializer )?
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableDeclaratorId_in_variableDeclarator1754);
            variableDeclaratorId172=variableDeclaratorId();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclaratorId172.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:260:30: ( '=' variableInitializer )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==50) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:260:31: '=' variableInitializer
                    {
                    char_literal173=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_variableDeclarator1757); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal173_tree = (OMPTree)adaptor.create(char_literal173);
                    adaptor.addChild(root_0, char_literal173_tree);
                    }
                    pushFollow(FOLLOW_variableInitializer_in_variableDeclarator1759);
                    variableInitializer174=variableInitializer();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableInitializer174.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 43, variableDeclarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableDeclarator

    public static class constantDeclaratorsRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start constantDeclaratorsRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:263:1: constantDeclaratorsRest : constantDeclaratorRest ( ',' constantDeclarator )* ;
    public final constantDeclaratorsRest constantDeclaratorsRest() throws RecognitionException, OMPParserException {
        constantDeclaratorsRest retval = new constantDeclaratorsRest();
        retval.setStart(input.LT(1));
        int constantDeclaratorsRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal176=null;
        constantDeclaratorRest constantDeclaratorRest175 = null;

        constantDeclarator constantDeclarator177 = null;


        OMPTree char_literal176_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:264:5: ( constantDeclaratorRest ( ',' constantDeclarator )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:264:9: constantDeclaratorRest ( ',' constantDeclarator )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_constantDeclaratorRest_in_constantDeclaratorsRest1784);
            constantDeclaratorRest175=constantDeclaratorRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, constantDeclaratorRest175.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:264:32: ( ',' constantDeclarator )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==40) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:264:33: ',' constantDeclarator
            	    {
            	    char_literal176=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_constantDeclaratorsRest1787); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal176_tree = (OMPTree)adaptor.create(char_literal176);
            	    adaptor.addChild(root_0, char_literal176_tree);
            	    }
            	    pushFollow(FOLLOW_constantDeclarator_in_constantDeclaratorsRest1789);
            	    constantDeclarator177=constantDeclarator();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, constantDeclarator177.getTree());

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 44, constantDeclaratorsRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constantDeclaratorsRest

    public static class constantDeclaratorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start constantDeclaratorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:267:1: constantDeclaratorRest : ( '[' ']' )* '=' variableInitializer ;
    public final constantDeclaratorRest constantDeclaratorRest() throws RecognitionException, OMPParserException {
        constantDeclaratorRest retval = new constantDeclaratorRest();
        retval.setStart(input.LT(1));
        int constantDeclaratorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal178=null;
        Token char_literal179=null;
        Token char_literal180=null;
        variableInitializer variableInitializer181 = null;


        OMPTree char_literal178_tree=null;
        OMPTree char_literal179_tree=null;
        OMPTree char_literal180_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:268:5: ( ( '[' ']' )* '=' variableInitializer )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:268:9: ( '[' ']' )* '=' variableInitializer
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:268:9: ( '[' ']' )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==47) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:268:10: '[' ']'
            	    {
            	    char_literal178=(Token)input.LT(1);
            	    match(input,47,FOLLOW_47_in_constantDeclaratorRest1811); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal178_tree = (OMPTree)adaptor.create(char_literal178);
            	    adaptor.addChild(root_0, char_literal178_tree);
            	    }
            	    char_literal179=(Token)input.LT(1);
            	    match(input,48,FOLLOW_48_in_constantDeclaratorRest1813); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal179_tree = (OMPTree)adaptor.create(char_literal179);
            	    adaptor.addChild(root_0, char_literal179_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            char_literal180=(Token)input.LT(1);
            match(input,50,FOLLOW_50_in_constantDeclaratorRest1817); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal180_tree = (OMPTree)adaptor.create(char_literal180);
            adaptor.addChild(root_0, char_literal180_tree);
            }
            pushFollow(FOLLOW_variableInitializer_in_constantDeclaratorRest1819);
            variableInitializer181=variableInitializer();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableInitializer181.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 45, constantDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constantDeclaratorRest

    public static class variableDeclaratorId extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableDeclaratorId
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:271:1: variableDeclaratorId : Identifier ( '[' ']' )* ;
    public final variableDeclaratorId variableDeclaratorId() throws RecognitionException, OMPParserException {
        variableDeclaratorId retval = new variableDeclaratorId();
        retval.setStart(input.LT(1));
        int variableDeclaratorId_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier182=null;
        Token char_literal183=null;
        Token char_literal184=null;

        OMPTree Identifier182_tree=null;
        OMPTree char_literal183_tree=null;
        OMPTree char_literal184_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:272:5: ( Identifier ( '[' ']' )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:272:9: Identifier ( '[' ']' )*
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier182=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_variableDeclaratorId1842); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier182_tree = (OMPTree)adaptor.create(Identifier182);
            adaptor.addChild(root_0, Identifier182_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:272:20: ( '[' ']' )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==47) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:272:21: '[' ']'
            	    {
            	    char_literal183=(Token)input.LT(1);
            	    match(input,47,FOLLOW_47_in_variableDeclaratorId1845); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal183_tree = (OMPTree)adaptor.create(char_literal183);
            	    adaptor.addChild(root_0, char_literal183_tree);
            	    }
            	    char_literal184=(Token)input.LT(1);
            	    match(input,48,FOLLOW_48_in_variableDeclaratorId1847); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal184_tree = (OMPTree)adaptor.create(char_literal184);
            	    adaptor.addChild(root_0, char_literal184_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 46, variableDeclaratorId_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableDeclaratorId

    public static class variableInitializer extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableInitializer
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:275:1: variableInitializer : ( arrayInitializer | expression );
    public final variableInitializer variableInitializer() throws RecognitionException, OMPParserException {
        variableInitializer retval = new variableInitializer();
        retval.setStart(input.LT(1));
        int variableInitializer_StartIndex = input.index();
        OMPTree root_0 = null;

        arrayInitializer arrayInitializer185 = null;

        expression expression186 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:276:5: ( arrayInitializer | expression )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==43) ) {
                alt62=1;
            }
            else if ( (LA62_0==Identifier||(LA62_0>=FloatingPointLiteral && LA62_0<=DecimalLiteral)||LA62_0==46||(LA62_0>=55 && LA62_0<=62)||(LA62_0>=64 && LA62_0<=65)||(LA62_0>=68 && LA62_0<=71)||(LA62_0>=104 && LA62_0<=105)||(LA62_0>=108 && LA62_0<=112)) ) {
                alt62=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("275:1: variableInitializer : ( arrayInitializer | expression );", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:276:9: arrayInitializer
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_arrayInitializer_in_variableInitializer1868);
                    arrayInitializer185=arrayInitializer();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arrayInitializer185.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:277:9: expression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_variableInitializer1878);
                    expression186=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression186.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 47, variableInitializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableInitializer

    public static class arrayInitializer extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start arrayInitializer
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:280:1: arrayInitializer : '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}' ;
    public final arrayInitializer arrayInitializer() throws RecognitionException, OMPParserException {
        arrayInitializer retval = new arrayInitializer();
        retval.setStart(input.LT(1));
        int arrayInitializer_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal187=null;
        Token char_literal189=null;
        Token char_literal191=null;
        Token char_literal192=null;
        variableInitializer variableInitializer188 = null;

        variableInitializer variableInitializer190 = null;


        OMPTree char_literal187_tree=null;
        OMPTree char_literal189_tree=null;
        OMPTree char_literal191_tree=null;
        OMPTree char_literal192_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:5: ( '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:9: '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal187=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_arrayInitializer1905); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal187_tree = (OMPTree)adaptor.create(char_literal187);
            adaptor.addChild(root_0, char_literal187_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:13: ( variableInitializer ( ',' variableInitializer )* ( ',' )? )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Identifier||(LA65_0>=FloatingPointLiteral && LA65_0<=DecimalLiteral)||LA65_0==43||LA65_0==46||(LA65_0>=55 && LA65_0<=62)||(LA65_0>=64 && LA65_0<=65)||(LA65_0>=68 && LA65_0<=71)||(LA65_0>=104 && LA65_0<=105)||(LA65_0>=108 && LA65_0<=112)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:14: variableInitializer ( ',' variableInitializer )* ( ',' )?
                    {
                    pushFollow(FOLLOW_variableInitializer_in_arrayInitializer1908);
                    variableInitializer188=variableInitializer();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableInitializer188.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:34: ( ',' variableInitializer )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==40) ) {
                            int LA63_1 = input.LA(2);

                            if ( (LA63_1==Identifier||(LA63_1>=FloatingPointLiteral && LA63_1<=DecimalLiteral)||LA63_1==43||LA63_1==46||(LA63_1>=55 && LA63_1<=62)||(LA63_1>=64 && LA63_1<=65)||(LA63_1>=68 && LA63_1<=71)||(LA63_1>=104 && LA63_1<=105)||(LA63_1>=108 && LA63_1<=112)) ) {
                                alt63=1;
                            }


                        }


                        switch (alt63) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:35: ',' variableInitializer
                    	    {
                    	    char_literal189=(Token)input.LT(1);
                    	    match(input,40,FOLLOW_40_in_arrayInitializer1911); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal189_tree = (OMPTree)adaptor.create(char_literal189);
                    	    adaptor.addChild(root_0, char_literal189_tree);
                    	    }
                    	    pushFollow(FOLLOW_variableInitializer_in_arrayInitializer1913);
                    	    variableInitializer190=variableInitializer();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, variableInitializer190.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:61: ( ',' )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==40) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:281:62: ','
                            {
                            char_literal191=(Token)input.LT(1);
                            match(input,40,FOLLOW_40_in_arrayInitializer1918); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal191_tree = (OMPTree)adaptor.create(char_literal191);
                            adaptor.addChild(root_0, char_literal191_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            char_literal192=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_arrayInitializer1925); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal192_tree = (OMPTree)adaptor.create(char_literal192);
            adaptor.addChild(root_0, char_literal192_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 48, arrayInitializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end arrayInitializer

    public static class modifier extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start modifier
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:284:1: modifier : ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' );
    public final modifier modifier() throws RecognitionException, OMPParserException {
        modifier retval = new modifier();
        retval.setStart(input.LT(1));
        int modifier_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal194=null;
        Token string_literal195=null;
        Token string_literal196=null;
        Token string_literal197=null;
        Token string_literal198=null;
        Token string_literal199=null;
        Token string_literal200=null;
        Token string_literal201=null;
        Token string_literal202=null;
        Token string_literal203=null;
        Token string_literal204=null;
        annotation annotation193 = null;


        OMPTree string_literal194_tree=null;
        OMPTree string_literal195_tree=null;
        OMPTree string_literal196_tree=null;
        OMPTree string_literal197_tree=null;
        OMPTree string_literal198_tree=null;
        OMPTree string_literal199_tree=null;
        OMPTree string_literal200_tree=null;
        OMPTree string_literal201_tree=null;
        OMPTree string_literal202_tree=null;
        OMPTree string_literal203_tree=null;
        OMPTree string_literal204_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:285:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )
            int alt66=12;
            switch ( input.LA(1) ) {
            case 72:
                {
                alt66=1;
                }
                break;
            case 30:
                {
                alt66=2;
                }
                break;
            case 31:
                {
                alt66=3;
                }
                break;
            case 32:
                {
                alt66=4;
                }
                break;
            case 27:
                {
                alt66=5;
                }
                break;
            case 33:
                {
                alt66=6;
                }
                break;
            case 34:
                {
                alt66=7;
                }
                break;
            case 51:
                {
                alt66=8;
                }
                break;
            case 52:
                {
                alt66=9;
                }
                break;
            case 53:
                {
                alt66=10;
                }
                break;
            case 54:
                {
                alt66=11;
                }
                break;
            case 35:
                {
                alt66=12;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("284:1: modifier : ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' );", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:285:9: annotation
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_modifier1944);
                    annotation193=annotation();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotation193.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:286:9: 'public'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal194=(Token)input.LT(1);
                    match(input,30,FOLLOW_30_in_modifier1954); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal194_tree = (OMPTree)adaptor.create(string_literal194);
                    adaptor.addChild(root_0, string_literal194_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:287:9: 'protected'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal195=(Token)input.LT(1);
                    match(input,31,FOLLOW_31_in_modifier1964); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal195_tree = (OMPTree)adaptor.create(string_literal195);
                    adaptor.addChild(root_0, string_literal195_tree);
                    }

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:288:9: 'private'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal196=(Token)input.LT(1);
                    match(input,32,FOLLOW_32_in_modifier1974); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal196_tree = (OMPTree)adaptor.create(string_literal196);
                    adaptor.addChild(root_0, string_literal196_tree);
                    }

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:289:9: 'static'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal197=(Token)input.LT(1);
                    match(input,27,FOLLOW_27_in_modifier1984); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal197_tree = (OMPTree)adaptor.create(string_literal197);
                    adaptor.addChild(root_0, string_literal197_tree);
                    }

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:290:9: 'abstract'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal198=(Token)input.LT(1);
                    match(input,33,FOLLOW_33_in_modifier1994); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal198_tree = (OMPTree)adaptor.create(string_literal198);
                    adaptor.addChild(root_0, string_literal198_tree);
                    }

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:291:9: 'final'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal199=(Token)input.LT(1);
                    match(input,34,FOLLOW_34_in_modifier2004); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal199_tree = (OMPTree)adaptor.create(string_literal199);
                    adaptor.addChild(root_0, string_literal199_tree);
                    }

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:292:9: 'native'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal200=(Token)input.LT(1);
                    match(input,51,FOLLOW_51_in_modifier2014); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal200_tree = (OMPTree)adaptor.create(string_literal200);
                    adaptor.addChild(root_0, string_literal200_tree);
                    }

                    }
                    break;
                case 9 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:293:9: 'synchronized'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal201=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_modifier2024); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal201_tree = (OMPTree)adaptor.create(string_literal201);
                    adaptor.addChild(root_0, string_literal201_tree);
                    }

                    }
                    break;
                case 10 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:294:9: 'transient'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal202=(Token)input.LT(1);
                    match(input,53,FOLLOW_53_in_modifier2034); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal202_tree = (OMPTree)adaptor.create(string_literal202);
                    adaptor.addChild(root_0, string_literal202_tree);
                    }

                    }
                    break;
                case 11 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:295:9: 'volatile'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal203=(Token)input.LT(1);
                    match(input,54,FOLLOW_54_in_modifier2044); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal203_tree = (OMPTree)adaptor.create(string_literal203);
                    adaptor.addChild(root_0, string_literal203_tree);
                    }

                    }
                    break;
                case 12 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:296:9: 'strictfp'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal204=(Token)input.LT(1);
                    match(input,35,FOLLOW_35_in_modifier2054); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal204_tree = (OMPTree)adaptor.create(string_literal204);
                    adaptor.addChild(root_0, string_literal204_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 49, modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end modifier

    public static class packageOrTypeName extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start packageOrTypeName
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:299:1: packageOrTypeName : qualifiedName ;
    public final packageOrTypeName packageOrTypeName() throws RecognitionException, OMPParserException {
        packageOrTypeName retval = new packageOrTypeName();
        retval.setStart(input.LT(1));
        int packageOrTypeName_StartIndex = input.index();
        OMPTree root_0 = null;

        qualifiedName qualifiedName205 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:300:5: ( qualifiedName )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:300:9: qualifiedName
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_qualifiedName_in_packageOrTypeName2073);
            qualifiedName205=qualifiedName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedName205.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 50, packageOrTypeName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end packageOrTypeName

    public static class enumConstantName extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enumConstantName
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:303:1: enumConstantName : Identifier ;
    public final enumConstantName enumConstantName() throws RecognitionException, OMPParserException {
        enumConstantName retval = new enumConstantName();
        retval.setStart(input.LT(1));
        int enumConstantName_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier206=null;

        OMPTree Identifier206_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:304:5: ( Identifier )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:304:9: Identifier
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier206=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_enumConstantName2092); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier206_tree = (OMPTree)adaptor.create(Identifier206);
            adaptor.addChild(root_0, Identifier206_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 51, enumConstantName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enumConstantName

    public static class typeName extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeName
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:307:1: typeName : qualifiedName ;
    public final typeName typeName() throws RecognitionException, OMPParserException {
        typeName retval = new typeName();
        retval.setStart(input.LT(1));
        int typeName_StartIndex = input.index();
        OMPTree root_0 = null;

        qualifiedName qualifiedName207 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:308:5: ( qualifiedName )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:308:9: qualifiedName
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_qualifiedName_in_typeName2111);
            qualifiedName207=qualifiedName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedName207.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 52, typeName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeName

    public static class type extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start type
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:311:1: type : ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* );
    public final type type() throws RecognitionException, OMPParserException {
        type retval = new type();
        retval.setStart(input.LT(1));
        int type_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal209=null;
        Token char_literal210=null;
        Token char_literal212=null;
        Token char_literal213=null;
        classOrInterfaceType classOrInterfaceType208 = null;

        primitiveType primitiveType211 = null;


        OMPTree char_literal209_tree=null;
        OMPTree char_literal210_tree=null;
        OMPTree char_literal212_tree=null;
        OMPTree char_literal213_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:312:2: ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==Identifier) ) {
                alt69=1;
            }
            else if ( ((LA69_0>=55 && LA69_0<=62)) ) {
                alt69=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("311:1: type : ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* );", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:312:4: classOrInterfaceType ( '[' ']' )*
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceType_in_type2125);
                    classOrInterfaceType208=classOrInterfaceType();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceType208.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:312:25: ( '[' ']' )*
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==47) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:312:26: '[' ']'
                    	    {
                    	    char_literal209=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_type2128); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal209_tree = (OMPTree)adaptor.create(char_literal209);
                    	    adaptor.addChild(root_0, char_literal209_tree);
                    	    }
                    	    char_literal210=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_type2130); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal210_tree = (OMPTree)adaptor.create(char_literal210);
                    	    adaptor.addChild(root_0, char_literal210_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:313:4: primitiveType ( '[' ']' )*
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_primitiveType_in_type2137);
                    primitiveType211=primitiveType();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, primitiveType211.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:313:18: ( '[' ']' )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==47) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:313:19: '[' ']'
                    	    {
                    	    char_literal212=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_type2140); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal212_tree = (OMPTree)adaptor.create(char_literal212);
                    	    adaptor.addChild(root_0, char_literal212_tree);
                    	    }
                    	    char_literal213=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_type2142); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal213_tree = (OMPTree)adaptor.create(char_literal213);
                    	    adaptor.addChild(root_0, char_literal213_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 53, type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end type

    public static class classOrInterfaceType extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classOrInterfaceType
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:316:1: classOrInterfaceType : Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* ;
    public final classOrInterfaceType classOrInterfaceType() throws RecognitionException, OMPParserException {
        classOrInterfaceType retval = new classOrInterfaceType();
        retval.setStart(input.LT(1));
        int classOrInterfaceType_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier214=null;
        Token char_literal216=null;
        Token Identifier217=null;
        typeArguments typeArguments215 = null;

        typeArguments typeArguments218 = null;


        OMPTree Identifier214_tree=null;
        OMPTree char_literal216_tree=null;
        OMPTree Identifier217_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:2: ( Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:4: Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )*
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier214=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_classOrInterfaceType2155); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier214_tree = (OMPTree)adaptor.create(Identifier214);
            adaptor.addChild(root_0, Identifier214_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:15: ( typeArguments )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==39) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==Identifier||(LA70_1>=55 && LA70_1<=63)) ) {
                    alt70=1;
                }
            }
            switch (alt70) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:16: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_classOrInterfaceType2158);
                    typeArguments215=typeArguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, typeArguments215.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:32: ( '.' Identifier ( typeArguments )? )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==28) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:33: '.' Identifier ( typeArguments )?
            	    {
            	    char_literal216=(Token)input.LT(1);
            	    match(input,28,FOLLOW_28_in_classOrInterfaceType2163); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal216_tree = (OMPTree)adaptor.create(char_literal216);
            	    adaptor.addChild(root_0, char_literal216_tree);
            	    }
            	    Identifier217=(Token)input.LT(1);
            	    match(input,Identifier,FOLLOW_Identifier_in_classOrInterfaceType2165); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    Identifier217_tree = (OMPTree)adaptor.create(Identifier217);
            	    adaptor.addChild(root_0, Identifier217_tree);
            	    }
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:48: ( typeArguments )?
            	    int alt71=2;
            	    int LA71_0 = input.LA(1);

            	    if ( (LA71_0==39) ) {
            	        int LA71_1 = input.LA(2);

            	        if ( (LA71_1==Identifier||(LA71_1>=55 && LA71_1<=63)) ) {
            	            alt71=1;
            	        }
            	    }
            	    switch (alt71) {
            	        case 1 :
            	            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:317:49: typeArguments
            	            {
            	            pushFollow(FOLLOW_typeArguments_in_classOrInterfaceType2168);
            	            typeArguments218=typeArguments();
            	            _fsp--;
            	            if (failed) return retval;
            	            if ( backtracking==0 ) adaptor.addChild(root_0, typeArguments218.getTree());

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 54, classOrInterfaceType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classOrInterfaceType

    public static class primitiveType extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start primitiveType
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:320:1: primitiveType : ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
    public final primitiveType primitiveType() throws RecognitionException, OMPParserException {
        primitiveType retval = new primitiveType();
        retval.setStart(input.LT(1));
        int primitiveType_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set219=null;

        OMPTree set219_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:321:5: ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:
            {
            root_0 = (OMPTree)adaptor.nil();

            set219=(Token)input.LT(1);
            if ( (input.LA(1)>=55 && input.LA(1)<=62) ) {
                input.consume();
                if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set219));
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_primitiveType0);    throw mse;
            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 55, primitiveType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end primitiveType

    public static class variableModifier extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableModifier
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:331:1: variableModifier : ( 'final' | annotation );
    public final variableModifier variableModifier() throws RecognitionException, OMPParserException {
        variableModifier retval = new variableModifier();
        retval.setStart(input.LT(1));
        int variableModifier_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal220=null;
        annotation annotation221 = null;


        OMPTree string_literal220_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:332:5: ( 'final' | annotation )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==34) ) {
                alt73=1;
            }
            else if ( (LA73_0==72) ) {
                alt73=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("331:1: variableModifier : ( 'final' | annotation );", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:332:9: 'final'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal220=(Token)input.LT(1);
                    match(input,34,FOLLOW_34_in_variableModifier2278); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal220_tree = (OMPTree)adaptor.create(string_literal220);
                    adaptor.addChild(root_0, string_literal220_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:333:9: annotation
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_variableModifier2288);
                    annotation221=annotation();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotation221.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 56, variableModifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableModifier

    public static class typeArguments extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeArguments
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:336:1: typeArguments : '<' typeArgument ( ',' typeArgument )* '>' ;
    public final typeArguments typeArguments() throws RecognitionException, OMPParserException {
        typeArguments retval = new typeArguments();
        retval.setStart(input.LT(1));
        int typeArguments_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal222=null;
        Token char_literal224=null;
        Token char_literal226=null;
        typeArgument typeArgument223 = null;

        typeArgument typeArgument225 = null;


        OMPTree char_literal222_tree=null;
        OMPTree char_literal224_tree=null;
        OMPTree char_literal226_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:337:5: ( '<' typeArgument ( ',' typeArgument )* '>' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:337:9: '<' typeArgument ( ',' typeArgument )* '>'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal222=(Token)input.LT(1);
            match(input,39,FOLLOW_39_in_typeArguments2307); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal222_tree = (OMPTree)adaptor.create(char_literal222);
            adaptor.addChild(root_0, char_literal222_tree);
            }
            pushFollow(FOLLOW_typeArgument_in_typeArguments2309);
            typeArgument223=typeArgument();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, typeArgument223.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:337:26: ( ',' typeArgument )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==40) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:337:27: ',' typeArgument
            	    {
            	    char_literal224=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_typeArguments2312); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal224_tree = (OMPTree)adaptor.create(char_literal224);
            	    adaptor.addChild(root_0, char_literal224_tree);
            	    }
            	    pushFollow(FOLLOW_typeArgument_in_typeArguments2314);
            	    typeArgument225=typeArgument();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, typeArgument225.getTree());

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            char_literal226=(Token)input.LT(1);
            match(input,41,FOLLOW_41_in_typeArguments2318); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal226_tree = (OMPTree)adaptor.create(char_literal226);
            adaptor.addChild(root_0, char_literal226_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 57, typeArguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeArguments

    public static class typeArgument extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start typeArgument
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:340:1: typeArgument : ( type | '?' ( ( 'extends' | 'super' ) type )? );
    public final typeArgument typeArgument() throws RecognitionException, OMPParserException {
        typeArgument retval = new typeArgument();
        retval.setStart(input.LT(1));
        int typeArgument_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal228=null;
        Token set229=null;
        type type227 = null;

        type type230 = null;


        OMPTree char_literal228_tree=null;
        OMPTree set229_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:341:5: ( type | '?' ( ( 'extends' | 'super' ) type )? )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==Identifier||(LA76_0>=55 && LA76_0<=62)) ) {
                alt76=1;
            }
            else if ( (LA76_0==63) ) {
                alt76=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("340:1: typeArgument : ( type | '?' ( ( 'extends' | 'super' ) type )? );", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:341:9: type
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_type_in_typeArgument2341);
                    type227=type();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, type227.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:342:9: '?' ( ( 'extends' | 'super' ) type )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal228=(Token)input.LT(1);
                    match(input,63,FOLLOW_63_in_typeArgument2351); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal228_tree = (OMPTree)adaptor.create(char_literal228);
                    adaptor.addChild(root_0, char_literal228_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:342:13: ( ( 'extends' | 'super' ) type )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==37||LA75_0==64) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:342:14: ( 'extends' | 'super' ) type
                            {
                            set229=(Token)input.LT(1);
                            if ( input.LA(1)==37||input.LA(1)==64 ) {
                                input.consume();
                                if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set229));
                                errorRecovery=false;failed=false;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                MismatchedSetException mse =
                                    new MismatchedSetException(null,input);
                                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_typeArgument2354);    throw mse;
                            }

                            pushFollow(FOLLOW_type_in_typeArgument2362);
                            type230=type();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, type230.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 58, typeArgument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeArgument

    public static class qualifiedNameList extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start qualifiedNameList
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:345:1: qualifiedNameList : qualifiedName ( ',' qualifiedName )* ;
    public final qualifiedNameList qualifiedNameList() throws RecognitionException, OMPParserException {
        qualifiedNameList retval = new qualifiedNameList();
        retval.setStart(input.LT(1));
        int qualifiedNameList_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal232=null;
        qualifiedName qualifiedName231 = null;

        qualifiedName qualifiedName233 = null;


        OMPTree char_literal232_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:346:5: ( qualifiedName ( ',' qualifiedName )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:346:9: qualifiedName ( ',' qualifiedName )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_qualifiedName_in_qualifiedNameList2387);
            qualifiedName231=qualifiedName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedName231.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:346:23: ( ',' qualifiedName )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==40) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:346:24: ',' qualifiedName
            	    {
            	    char_literal232=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_qualifiedNameList2390); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal232_tree = (OMPTree)adaptor.create(char_literal232);
            	    adaptor.addChild(root_0, char_literal232_tree);
            	    }
            	    pushFollow(FOLLOW_qualifiedName_in_qualifiedNameList2392);
            	    qualifiedName233=qualifiedName();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, qualifiedName233.getTree());

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 59, qualifiedNameList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end qualifiedNameList

    public static class formalParameters extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start formalParameters
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:349:1: formalParameters : '(' ( formalParameterDecls )? ')' ;
    public final formalParameters formalParameters() throws RecognitionException, OMPParserException {
        formalParameters retval = new formalParameters();
        retval.setStart(input.LT(1));
        int formalParameters_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal234=null;
        Token char_literal236=null;
        formalParameterDecls formalParameterDecls235 = null;


        OMPTree char_literal234_tree=null;
        OMPTree char_literal236_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:350:5: ( '(' ( formalParameterDecls )? ')' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:350:9: '(' ( formalParameterDecls )? ')'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal234=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_formalParameters2413); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal234_tree = (OMPTree)adaptor.create(char_literal234);
            adaptor.addChild(root_0, char_literal234_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:350:13: ( formalParameterDecls )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Identifier||LA78_0==34||(LA78_0>=55 && LA78_0<=62)||LA78_0==72) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: formalParameterDecls
                    {
                    pushFollow(FOLLOW_formalParameterDecls_in_formalParameters2415);
                    formalParameterDecls235=formalParameterDecls();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, formalParameterDecls235.getTree());

                    }
                    break;

            }

            char_literal236=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_formalParameters2418); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal236_tree = (OMPTree)adaptor.create(char_literal236);
            adaptor.addChild(root_0, char_literal236_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 60, formalParameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formalParameters

    public static class formalParameterDecls extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start formalParameterDecls
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:353:1: formalParameterDecls : variableModifiers type formalParameterDeclsRest ;
    public final formalParameterDecls formalParameterDecls() throws RecognitionException, OMPParserException {
        formalParameterDecls retval = new formalParameterDecls();
        retval.setStart(input.LT(1));
        int formalParameterDecls_StartIndex = input.index();
        OMPTree root_0 = null;

        variableModifiers variableModifiers237 = null;

        type type238 = null;

        formalParameterDeclsRest formalParameterDeclsRest239 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:354:5: ( variableModifiers type formalParameterDeclsRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:354:9: variableModifiers type formalParameterDeclsRest
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableModifiers_in_formalParameterDecls2441);
            variableModifiers237=variableModifiers();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableModifiers237.getTree());
            pushFollow(FOLLOW_type_in_formalParameterDecls2443);
            type238=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type238.getTree());
            pushFollow(FOLLOW_formalParameterDeclsRest_in_formalParameterDecls2445);
            formalParameterDeclsRest239=formalParameterDeclsRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameterDeclsRest239.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 61, formalParameterDecls_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formalParameterDecls

    public static class formalParameterDeclsRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start formalParameterDeclsRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:357:1: formalParameterDeclsRest : ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId );
    public final formalParameterDeclsRest formalParameterDeclsRest() throws RecognitionException, OMPParserException {
        formalParameterDeclsRest retval = new formalParameterDeclsRest();
        retval.setStart(input.LT(1));
        int formalParameterDeclsRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal241=null;
        Token string_literal243=null;
        variableDeclaratorId variableDeclaratorId240 = null;

        formalParameterDecls formalParameterDecls242 = null;

        variableDeclaratorId variableDeclaratorId244 = null;


        OMPTree char_literal241_tree=null;
        OMPTree string_literal243_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:358:5: ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Identifier) ) {
                alt80=1;
            }
            else if ( (LA80_0==67) ) {
                alt80=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("357:1: formalParameterDeclsRest : ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId );", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:358:9: variableDeclaratorId ( ',' formalParameterDecls )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest2468);
                    variableDeclaratorId240=variableDeclaratorId();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclaratorId240.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:358:30: ( ',' formalParameterDecls )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==40) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:358:31: ',' formalParameterDecls
                            {
                            char_literal241=(Token)input.LT(1);
                            match(input,40,FOLLOW_40_in_formalParameterDeclsRest2471); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal241_tree = (OMPTree)adaptor.create(char_literal241);
                            adaptor.addChild(root_0, char_literal241_tree);
                            }
                            pushFollow(FOLLOW_formalParameterDecls_in_formalParameterDeclsRest2473);
                            formalParameterDecls242=formalParameterDecls();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameterDecls242.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:359:9: '...' variableDeclaratorId
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal243=(Token)input.LT(1);
                    match(input,67,FOLLOW_67_in_formalParameterDeclsRest2485); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal243_tree = (OMPTree)adaptor.create(string_literal243);
                    adaptor.addChild(root_0, string_literal243_tree);
                    }
                    pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest2487);
                    variableDeclaratorId244=variableDeclaratorId();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclaratorId244.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 62, formalParameterDeclsRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formalParameterDeclsRest

    public static class methodBody extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start methodBody
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:362:1: methodBody : block ;
    public final methodBody methodBody() throws RecognitionException, OMPParserException {
        methodBody retval = new methodBody();
        retval.setStart(input.LT(1));
        int methodBody_StartIndex = input.index();
        OMPTree root_0 = null;

        block block245 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:363:5: ( block )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:363:9: block
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_block_in_methodBody2510);
            block245=block();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, block245.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 63, methodBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end methodBody

    public static class constructorBody extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start constructorBody
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:366:1: constructorBody : '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' ;
    public final constructorBody constructorBody() throws RecognitionException, OMPParserException {
        constructorBody retval = new constructorBody();
        retval.setStart(input.LT(1));
        int constructorBody_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal246=null;
        Token char_literal249=null;
        explicitConstructorInvocation explicitConstructorInvocation247 = null;

        blockStatement blockStatement248 = null;


        OMPTree char_literal246_tree=null;
        OMPTree char_literal249_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:367:5: ( '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:367:9: '{' ( explicitConstructorInvocation )? ( blockStatement )* '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal246=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_constructorBody2529); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal246_tree = (OMPTree)adaptor.create(char_literal246);
            adaptor.addChild(root_0, char_literal246_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:367:13: ( explicitConstructorInvocation )?
            int alt81=2;
            switch ( input.LA(1) ) {
                case 39:
                    {
                    alt81=1;
                    }
                    break;
                case 68:
                    {
                    switch ( input.LA(2) ) {
                        case 28:
                            {
                            int LA81_48 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 47:
                            {
                            int LA81_49 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 65:
                            {
                            int LA81_50 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                    }

                    }
                    break;
                case 65:
                    {
                    switch ( input.LA(2) ) {
                        case 104:
                            {
                            int LA81_74 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 105:
                            {
                            int LA81_75 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 108:
                            {
                            int LA81_76 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 109:
                            {
                            int LA81_77 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 110:
                            {
                            int LA81_78 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 111:
                            {
                            int LA81_79 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 65:
                            {
                            int LA81_80 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 68:
                            {
                            int LA81_81 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 64:
                            {
                            int LA81_82 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case HexLiteral:
                        case OctalLiteral:
                        case DecimalLiteral:
                            {
                            int LA81_83 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case FloatingPointLiteral:
                            {
                            int LA81_84 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case CharacterLiteral:
                            {
                            int LA81_85 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case StringLiteral:
                            {
                            int LA81_86 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 70:
                        case 71:
                            {
                            int LA81_87 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 69:
                            {
                            int LA81_88 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 112:
                            {
                            int LA81_89 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case Identifier:
                            {
                            int LA81_90 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                            {
                            int LA81_91 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 46:
                            {
                            int LA81_92 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                    }

                    }
                    break;
                case 64:
                    {
                    int LA81_4 = input.LA(2);

                    if ( (LA81_4==65) ) {
                        int LA81_93 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    else if ( (LA81_4==28) ) {
                        int LA81_94 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA81_5 = input.LA(2);

                    if ( (LA81_5==28) ) {
                        int LA81_95 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA81_6 = input.LA(2);

                    if ( (LA81_6==28) ) {
                        int LA81_120 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA81_7 = input.LA(2);

                    if ( (LA81_7==28) ) {
                        int LA81_145 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA81_8 = input.LA(2);

                    if ( (LA81_8==28) ) {
                        int LA81_170 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA81_9 = input.LA(2);

                    if ( (LA81_9==28) ) {
                        int LA81_195 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case 69:
                    {
                    int LA81_10 = input.LA(2);

                    if ( (LA81_10==28) ) {
                        int LA81_220 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case 112:
                    {
                    switch ( input.LA(2) ) {
                        case 39:
                            {
                            int LA81_245 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case Identifier:
                            {
                            int LA81_246 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                            {
                            int LA81_247 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                    }

                    }
                    break;
                case Identifier:
                    {
                    switch ( input.LA(2) ) {
                        case 28:
                            {
                            int LA81_249 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 47:
                            {
                            int LA81_250 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                        case 65:
                            {
                            int LA81_251 = input.LA(3);

                            if ( (synpred113()) ) {
                                alt81=1;
                            }
                            }
                            break;
                    }

                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA81_13 = input.LA(2);

                    if ( (LA81_13==47) ) {
                        int LA81_276 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    else if ( (LA81_13==28) ) {
                        int LA81_278 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
                case 46:
                    {
                    int LA81_14 = input.LA(2);

                    if ( (LA81_14==28) ) {
                        int LA81_279 = input.LA(3);

                        if ( (synpred113()) ) {
                            alt81=1;
                        }
                    }
                    }
                    break;
            }

            switch (alt81) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: explicitConstructorInvocation
                    {
                    pushFollow(FOLLOW_explicitConstructorInvocation_in_constructorBody2531);
                    explicitConstructorInvocation247=explicitConstructorInvocation();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, explicitConstructorInvocation247.getTree());

                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:367:44: ( blockStatement )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( ((LA82_0>=Identifier && LA82_0<=ASSERT)||LA82_0==25||LA82_0==27||(LA82_0>=30 && LA82_0<=36)||LA82_0==43||(LA82_0>=45 && LA82_0<=46)||LA82_0==52||(LA82_0>=55 && LA82_0<=62)||(LA82_0>=64 && LA82_0<=65)||(LA82_0>=68 && LA82_0<=72)||LA82_0==75||(LA82_0>=77 && LA82_0<=80)||(LA82_0>=82 && LA82_0<=86)||(LA82_0>=104 && LA82_0<=105)||(LA82_0>=108 && LA82_0<=113)) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: blockStatement
            	    {
            	    pushFollow(FOLLOW_blockStatement_in_constructorBody2534);
            	    blockStatement248=blockStatement();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, blockStatement248.getTree());

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            char_literal249=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_constructorBody2537); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal249_tree = (OMPTree)adaptor.create(char_literal249);
            adaptor.addChild(root_0, char_literal249_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 64, constructorBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constructorBody

    public static class explicitConstructorInvocation extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start explicitConstructorInvocation
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:370:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );
    public final explicitConstructorInvocation explicitConstructorInvocation() throws RecognitionException, OMPParserException {
        explicitConstructorInvocation retval = new explicitConstructorInvocation();
        retval.setStart(input.LT(1));
        int explicitConstructorInvocation_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set251=null;
        Token char_literal253=null;
        Token char_literal255=null;
        Token string_literal257=null;
        Token char_literal259=null;
        nonWildcardTypeArguments nonWildcardTypeArguments250 = null;

        arguments arguments252 = null;

        primary primary254 = null;

        nonWildcardTypeArguments nonWildcardTypeArguments256 = null;

        arguments arguments258 = null;


        OMPTree set251_tree=null;
        OMPTree char_literal253_tree=null;
        OMPTree char_literal255_tree=null;
        OMPTree string_literal257_tree=null;
        OMPTree char_literal259_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:5: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' )
            int alt85=2;
            switch ( input.LA(1) ) {
            case 39:
                {
                alt85=1;
                }
                break;
            case 68:
                {
                int LA85_2 = input.LA(2);

                if ( (LA85_2==28||LA85_2==47) ) {
                    alt85=2;
                }
                else if ( (LA85_2==65) ) {
                    int LA85_17 = input.LA(3);

                    if ( (synpred117()) ) {
                        alt85=1;
                    }
                    else if ( (true) ) {
                        alt85=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("370:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );", 85, 17, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("370:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );", 85, 2, input);

                    throw nvae;
                }
                }
                break;
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 46:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 65:
            case 69:
            case 70:
            case 71:
            case 112:
                {
                alt85=2;
                }
                break;
            case 64:
                {
                int LA85_4 = input.LA(2);

                if ( (LA85_4==65) ) {
                    int LA85_18 = input.LA(3);

                    if ( (synpred117()) ) {
                        alt85=1;
                    }
                    else if ( (true) ) {
                        alt85=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("370:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );", 85, 18, input);

                        throw nvae;
                    }
                }
                else if ( (LA85_4==28) ) {
                    alt85=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("370:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );", 85, 4, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("370:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:9: ( nonWildcardTypeArguments )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==39) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:10: nonWildcardTypeArguments
                            {
                            pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation2557);
                            nonWildcardTypeArguments250=nonWildcardTypeArguments();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments250.getTree());

                            }
                            break;

                    }

                    set251=(Token)input.LT(1);
                    if ( input.LA(1)==64||input.LA(1)==68 ) {
                        input.consume();
                        if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set251));
                        errorRecovery=false;failed=false;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        MismatchedSetException mse =
                            new MismatchedSetException(null,input);
                        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_explicitConstructorInvocation2561);    throw mse;
                    }

                    pushFollow(FOLLOW_arguments_in_explicitConstructorInvocation2569);
                    arguments252=arguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arguments252.getTree());
                    char_literal253=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_explicitConstructorInvocation2571); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal253_tree = (OMPTree)adaptor.create(char_literal253);
                    adaptor.addChild(root_0, char_literal253_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:372:9: primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_primary_in_explicitConstructorInvocation2581);
                    primary254=primary();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, primary254.getTree());
                    char_literal255=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_explicitConstructorInvocation2583); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal255_tree = (OMPTree)adaptor.create(char_literal255);
                    adaptor.addChild(root_0, char_literal255_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:372:21: ( nonWildcardTypeArguments )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==39) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: nonWildcardTypeArguments
                            {
                            pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation2585);
                            nonWildcardTypeArguments256=nonWildcardTypeArguments();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments256.getTree());

                            }
                            break;

                    }

                    string_literal257=(Token)input.LT(1);
                    match(input,64,FOLLOW_64_in_explicitConstructorInvocation2588); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal257_tree = (OMPTree)adaptor.create(string_literal257);
                    adaptor.addChild(root_0, string_literal257_tree);
                    }
                    pushFollow(FOLLOW_arguments_in_explicitConstructorInvocation2590);
                    arguments258=arguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arguments258.getTree());
                    char_literal259=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_explicitConstructorInvocation2592); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal259_tree = (OMPTree)adaptor.create(char_literal259);
                    adaptor.addChild(root_0, char_literal259_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 65, explicitConstructorInvocation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end explicitConstructorInvocation

    public static class qualifiedName extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start qualifiedName
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:376:1: qualifiedName : Identifier ( '.' Identifier )* ;
    public final qualifiedName qualifiedName() throws RecognitionException, OMPParserException {
        qualifiedName retval = new qualifiedName();
        retval.setStart(input.LT(1));
        int qualifiedName_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier260=null;
        Token char_literal261=null;
        Token Identifier262=null;

        OMPTree Identifier260_tree=null;
        OMPTree char_literal261_tree=null;
        OMPTree Identifier262_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:377:5: ( Identifier ( '.' Identifier )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:377:9: Identifier ( '.' Identifier )*
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier260=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_qualifiedName2612); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier260_tree = (OMPTree)adaptor.create(Identifier260);
            adaptor.addChild(root_0, Identifier260_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:377:20: ( '.' Identifier )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==28) ) {
                    int LA86_2 = input.LA(2);

                    if ( (LA86_2==Identifier) ) {
                        alt86=1;
                    }


                }


                switch (alt86) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:377:21: '.' Identifier
            	    {
            	    char_literal261=(Token)input.LT(1);
            	    match(input,28,FOLLOW_28_in_qualifiedName2615); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal261_tree = (OMPTree)adaptor.create(char_literal261);
            	    adaptor.addChild(root_0, char_literal261_tree);
            	    }
            	    Identifier262=(Token)input.LT(1);
            	    match(input,Identifier,FOLLOW_Identifier_in_qualifiedName2617); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    Identifier262_tree = (OMPTree)adaptor.create(Identifier262);
            	    adaptor.addChild(root_0, Identifier262_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 66, qualifiedName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end qualifiedName

    public static class literal extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start literal
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:380:1: literal : ( integerLiteral | FloatingPointLiteral | CharacterLiteral | StringLiteral | booleanLiteral | 'null' );
    public final literal literal() throws RecognitionException, OMPParserException {
        literal retval = new literal();
        retval.setStart(input.LT(1));
        int literal_StartIndex = input.index();
        OMPTree root_0 = null;

        Token FloatingPointLiteral264=null;
        Token CharacterLiteral265=null;
        Token StringLiteral266=null;
        Token string_literal268=null;
        integerLiteral integerLiteral263 = null;

        booleanLiteral booleanLiteral267 = null;


        OMPTree FloatingPointLiteral264_tree=null;
        OMPTree CharacterLiteral265_tree=null;
        OMPTree StringLiteral266_tree=null;
        OMPTree string_literal268_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:381:5: ( integerLiteral | FloatingPointLiteral | CharacterLiteral | StringLiteral | booleanLiteral | 'null' )
            int alt87=6;
            switch ( input.LA(1) ) {
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
                {
                alt87=1;
                }
                break;
            case FloatingPointLiteral:
                {
                alt87=2;
                }
                break;
            case CharacterLiteral:
                {
                alt87=3;
                }
                break;
            case StringLiteral:
                {
                alt87=4;
                }
                break;
            case 70:
            case 71:
                {
                alt87=5;
                }
                break;
            case 69:
                {
                alt87=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("380:1: literal : ( integerLiteral | FloatingPointLiteral | CharacterLiteral | StringLiteral | booleanLiteral | 'null' );", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:381:9: integerLiteral
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_integerLiteral_in_literal2643);
                    integerLiteral263=integerLiteral();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, integerLiteral263.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:382:9: FloatingPointLiteral
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    FloatingPointLiteral264=(Token)input.LT(1);
                    match(input,FloatingPointLiteral,FOLLOW_FloatingPointLiteral_in_literal2653); if (failed) return retval;
                    if ( backtracking==0 ) {
                    FloatingPointLiteral264_tree = (OMPTree)adaptor.create(FloatingPointLiteral264);
                    adaptor.addChild(root_0, FloatingPointLiteral264_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:383:9: CharacterLiteral
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    CharacterLiteral265=(Token)input.LT(1);
                    match(input,CharacterLiteral,FOLLOW_CharacterLiteral_in_literal2663); if (failed) return retval;
                    if ( backtracking==0 ) {
                    CharacterLiteral265_tree = (OMPTree)adaptor.create(CharacterLiteral265);
                    adaptor.addChild(root_0, CharacterLiteral265_tree);
                    }

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:384:9: StringLiteral
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    StringLiteral266=(Token)input.LT(1);
                    match(input,StringLiteral,FOLLOW_StringLiteral_in_literal2673); if (failed) return retval;
                    if ( backtracking==0 ) {
                    StringLiteral266_tree = (OMPTree)adaptor.create(StringLiteral266);
                    adaptor.addChild(root_0, StringLiteral266_tree);
                    }

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:385:9: booleanLiteral
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_booleanLiteral_in_literal2683);
                    booleanLiteral267=booleanLiteral();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, booleanLiteral267.getTree());

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:386:9: 'null'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal268=(Token)input.LT(1);
                    match(input,69,FOLLOW_69_in_literal2693); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal268_tree = (OMPTree)adaptor.create(string_literal268);
                    adaptor.addChild(root_0, string_literal268_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 67, literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end literal

    public static class integerLiteral extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start integerLiteral
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:389:1: integerLiteral : ( HexLiteral | OctalLiteral | DecimalLiteral );
    public final integerLiteral integerLiteral() throws RecognitionException, OMPParserException {
        integerLiteral retval = new integerLiteral();
        retval.setStart(input.LT(1));
        int integerLiteral_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set269=null;

        OMPTree set269_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:390:5: ( HexLiteral | OctalLiteral | DecimalLiteral )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:
            {
            root_0 = (OMPTree)adaptor.nil();

            set269=(Token)input.LT(1);
            if ( (input.LA(1)>=HexLiteral && input.LA(1)<=DecimalLiteral) ) {
                input.consume();
                if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set269));
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_integerLiteral0);    throw mse;
            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 68, integerLiteral_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end integerLiteral

    public static class booleanLiteral extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start booleanLiteral
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:395:1: booleanLiteral : ( 'true' | 'false' );
    public final booleanLiteral booleanLiteral() throws RecognitionException, OMPParserException {
        booleanLiteral retval = new booleanLiteral();
        retval.setStart(input.LT(1));
        int booleanLiteral_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set270=null;

        OMPTree set270_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:396:5: ( 'true' | 'false' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:
            {
            root_0 = (OMPTree)adaptor.nil();

            set270=(Token)input.LT(1);
            if ( (input.LA(1)>=70 && input.LA(1)<=71) ) {
                input.consume();
                if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set270));
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_booleanLiteral0);    throw mse;
            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 69, booleanLiteral_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end booleanLiteral

    public static class annotations extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotations
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:402:1: annotations : ( annotation )+ ;
    public final annotations annotations() throws RecognitionException, OMPParserException {
        annotations retval = new annotations();
        retval.setStart(input.LT(1));
        int annotations_StartIndex = input.index();
        OMPTree root_0 = null;

        annotation annotation271 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:403:5: ( ( annotation )+ )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:403:9: ( annotation )+
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:403:9: ( annotation )+
            int cnt88=0;
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==72) ) {
                    int LA88_2 = input.LA(2);

                    if ( (LA88_2==Identifier) ) {
                        int LA88_16 = input.LA(3);

                        if ( (synpred128()) ) {
                            alt88=1;
                        }


                    }


                }


                switch (alt88) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations2782);
            	    annotation271=annotation();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, annotation271.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt88 >= 1 ) break loop88;
            	    if (backtracking>0) {failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(88, input);
                        throw eee;
                }
                cnt88++;
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 70, annotations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotations

    public static class annotation extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotation
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:406:1: annotation : '@' annotationName ( '(' ( elementValuePairs | elementValue )? ')' )? ;
    public final annotation annotation() throws RecognitionException, OMPParserException {
        annotation retval = new annotation();
        retval.setStart(input.LT(1));
        int annotation_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal272=null;
        Token char_literal274=null;
        Token char_literal277=null;
        annotationName annotationName273 = null;

        elementValuePairs elementValuePairs275 = null;

        elementValue elementValue276 = null;


        OMPTree char_literal272_tree=null;
        OMPTree char_literal274_tree=null;
        OMPTree char_literal277_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:5: ( '@' annotationName ( '(' ( elementValuePairs | elementValue )? ')' )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:9: '@' annotationName ( '(' ( elementValuePairs | elementValue )? ')' )?
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal272=(Token)input.LT(1);
            match(input,72,FOLLOW_72_in_annotation2802); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal272_tree = (OMPTree)adaptor.create(char_literal272);
            adaptor.addChild(root_0, char_literal272_tree);
            }
            pushFollow(FOLLOW_annotationName_in_annotation2804);
            annotationName273=annotationName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, annotationName273.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:28: ( '(' ( elementValuePairs | elementValue )? ')' )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==65) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:30: '(' ( elementValuePairs | elementValue )? ')'
                    {
                    char_literal274=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_annotation2808); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal274_tree = (OMPTree)adaptor.create(char_literal274);
                    adaptor.addChild(root_0, char_literal274_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:34: ( elementValuePairs | elementValue )?
                    int alt89=3;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==Identifier) ) {
                        int LA89_1 = input.LA(2);

                        if ( (LA89_1==50) ) {
                            alt89=1;
                        }
                        else if ( ((LA89_1>=28 && LA89_1<=29)||LA89_1==39||(LA89_1>=41 && LA89_1<=42)||LA89_1==47||LA89_1==63||(LA89_1>=65 && LA89_1<=66)||(LA89_1>=97 && LA89_1<=109)) ) {
                            alt89=2;
                        }
                    }
                    else if ( ((LA89_0>=FloatingPointLiteral && LA89_0<=DecimalLiteral)||LA89_0==43||LA89_0==46||(LA89_0>=55 && LA89_0<=62)||(LA89_0>=64 && LA89_0<=65)||(LA89_0>=68 && LA89_0<=72)||(LA89_0>=104 && LA89_0<=105)||(LA89_0>=108 && LA89_0<=112)) ) {
                        alt89=2;
                    }
                    switch (alt89) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:36: elementValuePairs
                            {
                            pushFollow(FOLLOW_elementValuePairs_in_annotation2812);
                            elementValuePairs275=elementValuePairs();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, elementValuePairs275.getTree());

                            }
                            break;
                        case 2 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:407:56: elementValue
                            {
                            pushFollow(FOLLOW_elementValue_in_annotation2816);
                            elementValue276=elementValue();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, elementValue276.getTree());

                            }
                            break;

                    }

                    char_literal277=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_annotation2821); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal277_tree = (OMPTree)adaptor.create(char_literal277);
                    adaptor.addChild(root_0, char_literal277_tree);
                    }

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 71, annotation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotation

    public static class annotationName extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationName
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:410:1: annotationName : Identifier ( '.' Identifier )* ;
    public final annotationName annotationName() throws RecognitionException, OMPParserException {
        annotationName retval = new annotationName();
        retval.setStart(input.LT(1));
        int annotationName_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier278=null;
        Token char_literal279=null;
        Token Identifier280=null;

        OMPTree Identifier278_tree=null;
        OMPTree char_literal279_tree=null;
        OMPTree Identifier280_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:411:5: ( Identifier ( '.' Identifier )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:411:7: Identifier ( '.' Identifier )*
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier278=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_annotationName2845); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier278_tree = (OMPTree)adaptor.create(Identifier278);
            adaptor.addChild(root_0, Identifier278_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:411:18: ( '.' Identifier )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==28) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:411:19: '.' Identifier
            	    {
            	    char_literal279=(Token)input.LT(1);
            	    match(input,28,FOLLOW_28_in_annotationName2848); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal279_tree = (OMPTree)adaptor.create(char_literal279);
            	    adaptor.addChild(root_0, char_literal279_tree);
            	    }
            	    Identifier280=(Token)input.LT(1);
            	    match(input,Identifier,FOLLOW_Identifier_in_annotationName2850); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    Identifier280_tree = (OMPTree)adaptor.create(Identifier280);
            	    adaptor.addChild(root_0, Identifier280_tree);
            	    }

            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 72, annotationName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationName

    public static class elementValuePairs extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start elementValuePairs
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:414:1: elementValuePairs : elementValuePair ( ',' elementValuePair )* ;
    public final elementValuePairs elementValuePairs() throws RecognitionException, OMPParserException {
        elementValuePairs retval = new elementValuePairs();
        retval.setStart(input.LT(1));
        int elementValuePairs_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal282=null;
        elementValuePair elementValuePair281 = null;

        elementValuePair elementValuePair283 = null;


        OMPTree char_literal282_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:415:5: ( elementValuePair ( ',' elementValuePair )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:415:9: elementValuePair ( ',' elementValuePair )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_elementValuePair_in_elementValuePairs2871);
            elementValuePair281=elementValuePair();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, elementValuePair281.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:415:26: ( ',' elementValuePair )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==40) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:415:27: ',' elementValuePair
            	    {
            	    char_literal282=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_elementValuePairs2874); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal282_tree = (OMPTree)adaptor.create(char_literal282);
            	    adaptor.addChild(root_0, char_literal282_tree);
            	    }
            	    pushFollow(FOLLOW_elementValuePair_in_elementValuePairs2876);
            	    elementValuePair283=elementValuePair();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, elementValuePair283.getTree());

            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 73, elementValuePairs_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end elementValuePairs

    public static class elementValuePair extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start elementValuePair
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:418:1: elementValuePair : Identifier '=' elementValue ;
    public final elementValuePair elementValuePair() throws RecognitionException, OMPParserException {
        elementValuePair retval = new elementValuePair();
        retval.setStart(input.LT(1));
        int elementValuePair_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier284=null;
        Token char_literal285=null;
        elementValue elementValue286 = null;


        OMPTree Identifier284_tree=null;
        OMPTree char_literal285_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:419:5: ( Identifier '=' elementValue )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:419:9: Identifier '=' elementValue
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier284=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_elementValuePair2897); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier284_tree = (OMPTree)adaptor.create(Identifier284);
            adaptor.addChild(root_0, Identifier284_tree);
            }
            char_literal285=(Token)input.LT(1);
            match(input,50,FOLLOW_50_in_elementValuePair2899); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal285_tree = (OMPTree)adaptor.create(char_literal285);
            adaptor.addChild(root_0, char_literal285_tree);
            }
            pushFollow(FOLLOW_elementValue_in_elementValuePair2901);
            elementValue286=elementValue();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, elementValue286.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 74, elementValuePair_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end elementValuePair

    public static class elementValue extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start elementValue
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:422:1: elementValue : ( conditionalExpression | annotation | elementValueArrayInitializer );
    public final elementValue elementValue() throws RecognitionException, OMPParserException {
        elementValue retval = new elementValue();
        retval.setStart(input.LT(1));
        int elementValue_StartIndex = input.index();
        OMPTree root_0 = null;

        conditionalExpression conditionalExpression287 = null;

        annotation annotation288 = null;

        elementValueArrayInitializer elementValueArrayInitializer289 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:423:5: ( conditionalExpression | annotation | elementValueArrayInitializer )
            int alt93=3;
            switch ( input.LA(1) ) {
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 46:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 104:
            case 105:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
                {
                alt93=1;
                }
                break;
            case 72:
                {
                alt93=2;
                }
                break;
            case 43:
                {
                alt93=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("422:1: elementValue : ( conditionalExpression | annotation | elementValueArrayInitializer );", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:423:9: conditionalExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_conditionalExpression_in_elementValue2924);
                    conditionalExpression287=conditionalExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, conditionalExpression287.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:424:9: annotation
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_elementValue2934);
                    annotation288=annotation();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotation288.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:425:9: elementValueArrayInitializer
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_elementValueArrayInitializer_in_elementValue2944);
                    elementValueArrayInitializer289=elementValueArrayInitializer();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, elementValueArrayInitializer289.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 75, elementValue_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end elementValue

    public static class elementValueArrayInitializer extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start elementValueArrayInitializer
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:428:1: elementValueArrayInitializer : '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' ;
    public final elementValueArrayInitializer elementValueArrayInitializer() throws RecognitionException, OMPParserException {
        elementValueArrayInitializer retval = new elementValueArrayInitializer();
        retval.setStart(input.LT(1));
        int elementValueArrayInitializer_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal290=null;
        Token char_literal292=null;
        Token char_literal294=null;
        Token char_literal295=null;
        elementValue elementValue291 = null;

        elementValue elementValue293 = null;


        OMPTree char_literal290_tree=null;
        OMPTree char_literal292_tree=null;
        OMPTree char_literal294_tree=null;
        OMPTree char_literal295_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:5: ( '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:9: '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal290=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_elementValueArrayInitializer2967); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal290_tree = (OMPTree)adaptor.create(char_literal290);
            adaptor.addChild(root_0, char_literal290_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:13: ( elementValue ( ',' elementValue )* )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==Identifier||(LA95_0>=FloatingPointLiteral && LA95_0<=DecimalLiteral)||LA95_0==43||LA95_0==46||(LA95_0>=55 && LA95_0<=62)||(LA95_0>=64 && LA95_0<=65)||(LA95_0>=68 && LA95_0<=72)||(LA95_0>=104 && LA95_0<=105)||(LA95_0>=108 && LA95_0<=112)) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:14: elementValue ( ',' elementValue )*
                    {
                    pushFollow(FOLLOW_elementValue_in_elementValueArrayInitializer2970);
                    elementValue291=elementValue();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, elementValue291.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:27: ( ',' elementValue )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==40) ) {
                            int LA94_1 = input.LA(2);

                            if ( (LA94_1==Identifier||(LA94_1>=FloatingPointLiteral && LA94_1<=DecimalLiteral)||LA94_1==43||LA94_1==46||(LA94_1>=55 && LA94_1<=62)||(LA94_1>=64 && LA94_1<=65)||(LA94_1>=68 && LA94_1<=72)||(LA94_1>=104 && LA94_1<=105)||(LA94_1>=108 && LA94_1<=112)) ) {
                                alt94=1;
                            }


                        }


                        switch (alt94) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:28: ',' elementValue
                    	    {
                    	    char_literal292=(Token)input.LT(1);
                    	    match(input,40,FOLLOW_40_in_elementValueArrayInitializer2973); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal292_tree = (OMPTree)adaptor.create(char_literal292);
                    	    adaptor.addChild(root_0, char_literal292_tree);
                    	    }
                    	    pushFollow(FOLLOW_elementValue_in_elementValueArrayInitializer2975);
                    	    elementValue293=elementValue();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, elementValue293.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);


                    }
                    break;

            }

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:49: ( ',' )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==40) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:429:50: ','
                    {
                    char_literal294=(Token)input.LT(1);
                    match(input,40,FOLLOW_40_in_elementValueArrayInitializer2982); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal294_tree = (OMPTree)adaptor.create(char_literal294);
                    adaptor.addChild(root_0, char_literal294_tree);
                    }

                    }
                    break;

            }

            char_literal295=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_elementValueArrayInitializer2986); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal295_tree = (OMPTree)adaptor.create(char_literal295);
            adaptor.addChild(root_0, char_literal295_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 76, elementValueArrayInitializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end elementValueArrayInitializer

    public static class annotationTypeDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationTypeDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:432:1: annotationTypeDeclaration : '@' 'interface' Identifier annotationTypeBody ;
    public final annotationTypeDeclaration annotationTypeDeclaration() throws RecognitionException, OMPParserException {
        annotationTypeDeclaration retval = new annotationTypeDeclaration();
        retval.setStart(input.LT(1));
        int annotationTypeDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal296=null;
        Token string_literal297=null;
        Token Identifier298=null;
        annotationTypeBody annotationTypeBody299 = null;


        OMPTree char_literal296_tree=null;
        OMPTree string_literal297_tree=null;
        OMPTree Identifier298_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:433:5: ( '@' 'interface' Identifier annotationTypeBody )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:433:9: '@' 'interface' Identifier annotationTypeBody
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal296=(Token)input.LT(1);
            match(input,72,FOLLOW_72_in_annotationTypeDeclaration3009); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal296_tree = (OMPTree)adaptor.create(char_literal296);
            adaptor.addChild(root_0, char_literal296_tree);
            }
            string_literal297=(Token)input.LT(1);
            match(input,45,FOLLOW_45_in_annotationTypeDeclaration3011); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal297_tree = (OMPTree)adaptor.create(string_literal297);
            adaptor.addChild(root_0, string_literal297_tree);
            }
            Identifier298=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_annotationTypeDeclaration3013); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier298_tree = (OMPTree)adaptor.create(Identifier298);
            adaptor.addChild(root_0, Identifier298_tree);
            }
            pushFollow(FOLLOW_annotationTypeBody_in_annotationTypeDeclaration3015);
            annotationTypeBody299=annotationTypeBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, annotationTypeBody299.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 77, annotationTypeDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationTypeDeclaration

    public static class annotationTypeBody extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationTypeBody
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:436:1: annotationTypeBody : '{' ( annotationTypeElementDeclaration )* '}' ;
    public final annotationTypeBody annotationTypeBody() throws RecognitionException, OMPParserException {
        annotationTypeBody retval = new annotationTypeBody();
        retval.setStart(input.LT(1));
        int annotationTypeBody_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal300=null;
        Token char_literal302=null;
        annotationTypeElementDeclaration annotationTypeElementDeclaration301 = null;


        OMPTree char_literal300_tree=null;
        OMPTree char_literal302_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:437:5: ( '{' ( annotationTypeElementDeclaration )* '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:437:9: '{' ( annotationTypeElementDeclaration )* '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal300=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_annotationTypeBody3038); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal300_tree = (OMPTree)adaptor.create(char_literal300);
            adaptor.addChild(root_0, char_literal300_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:437:13: ( annotationTypeElementDeclaration )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( ((LA97_0>=Identifier && LA97_0<=ENUM)||LA97_0==27||(LA97_0>=30 && LA97_0<=36)||LA97_0==45||(LA97_0>=51 && LA97_0<=62)||LA97_0==72) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:437:14: annotationTypeElementDeclaration
            	    {
            	    pushFollow(FOLLOW_annotationTypeElementDeclaration_in_annotationTypeBody3041);
            	    annotationTypeElementDeclaration301=annotationTypeElementDeclaration();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, annotationTypeElementDeclaration301.getTree());

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            char_literal302=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_annotationTypeBody3045); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal302_tree = (OMPTree)adaptor.create(char_literal302);
            adaptor.addChild(root_0, char_literal302_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 78, annotationTypeBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationTypeBody

    public static class annotationTypeElementDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationTypeElementDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:440:1: annotationTypeElementDeclaration : modifiers annotationTypeElementRest ;
    public final annotationTypeElementDeclaration annotationTypeElementDeclaration() throws RecognitionException, OMPParserException {
        annotationTypeElementDeclaration retval = new annotationTypeElementDeclaration();
        retval.setStart(input.LT(1));
        int annotationTypeElementDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        modifiers modifiers303 = null;

        annotationTypeElementRest annotationTypeElementRest304 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:441:5: ( modifiers annotationTypeElementRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:441:9: modifiers annotationTypeElementRest
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_modifiers_in_annotationTypeElementDeclaration3068);
            modifiers303=modifiers();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, modifiers303.getTree());
            pushFollow(FOLLOW_annotationTypeElementRest_in_annotationTypeElementDeclaration3070);
            annotationTypeElementRest304=annotationTypeElementRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, annotationTypeElementRest304.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 79, annotationTypeElementDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationTypeElementDeclaration

    public static class annotationTypeElementRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationTypeElementRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:444:1: annotationTypeElementRest : ( type annotationMethodOrConstantRest ';' | normalClassDeclaration ( ';' )? | normalInterfaceDeclaration ( ';' )? | enumDeclaration ( ';' )? | annotationTypeDeclaration ( ';' )? );
    public final annotationTypeElementRest annotationTypeElementRest() throws RecognitionException, OMPParserException {
        annotationTypeElementRest retval = new annotationTypeElementRest();
        retval.setStart(input.LT(1));
        int annotationTypeElementRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal307=null;
        Token char_literal309=null;
        Token char_literal311=null;
        Token char_literal313=null;
        Token char_literal315=null;
        type type305 = null;

        annotationMethodOrConstantRest annotationMethodOrConstantRest306 = null;

        normalClassDeclaration normalClassDeclaration308 = null;

        normalInterfaceDeclaration normalInterfaceDeclaration310 = null;

        enumDeclaration enumDeclaration312 = null;

        annotationTypeDeclaration annotationTypeDeclaration314 = null;


        OMPTree char_literal307_tree=null;
        OMPTree char_literal309_tree=null;
        OMPTree char_literal311_tree=null;
        OMPTree char_literal313_tree=null;
        OMPTree char_literal315_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:445:5: ( type annotationMethodOrConstantRest ';' | normalClassDeclaration ( ';' )? | normalInterfaceDeclaration ( ';' )? | enumDeclaration ( ';' )? | annotationTypeDeclaration ( ';' )? )
            int alt102=5;
            switch ( input.LA(1) ) {
            case Identifier:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                alt102=1;
                }
                break;
            case 36:
                {
                alt102=2;
                }
                break;
            case 45:
                {
                alt102=3;
                }
                break;
            case ENUM:
                {
                alt102=4;
                }
                break;
            case 72:
                {
                alt102=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("444:1: annotationTypeElementRest : ( type annotationMethodOrConstantRest ';' | normalClassDeclaration ( ';' )? | normalInterfaceDeclaration ( ';' )? | enumDeclaration ( ';' )? | annotationTypeDeclaration ( ';' )? );", 102, 0, input);

                throw nvae;
            }

            switch (alt102) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:445:9: type annotationMethodOrConstantRest ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_type_in_annotationTypeElementRest3093);
                    type305=type();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, type305.getTree());
                    pushFollow(FOLLOW_annotationMethodOrConstantRest_in_annotationTypeElementRest3095);
                    annotationMethodOrConstantRest306=annotationMethodOrConstantRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotationMethodOrConstantRest306.getTree());
                    char_literal307=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_annotationTypeElementRest3097); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal307_tree = (OMPTree)adaptor.create(char_literal307);
                    adaptor.addChild(root_0, char_literal307_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:446:9: normalClassDeclaration ( ';' )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_normalClassDeclaration_in_annotationTypeElementRest3107);
                    normalClassDeclaration308=normalClassDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, normalClassDeclaration308.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:446:32: ( ';' )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==25) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: ';'
                            {
                            char_literal309=(Token)input.LT(1);
                            match(input,25,FOLLOW_25_in_annotationTypeElementRest3109); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal309_tree = (OMPTree)adaptor.create(char_literal309);
                            adaptor.addChild(root_0, char_literal309_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:447:9: normalInterfaceDeclaration ( ';' )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_normalInterfaceDeclaration_in_annotationTypeElementRest3120);
                    normalInterfaceDeclaration310=normalInterfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, normalInterfaceDeclaration310.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:447:36: ( ';' )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==25) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: ';'
                            {
                            char_literal311=(Token)input.LT(1);
                            match(input,25,FOLLOW_25_in_annotationTypeElementRest3122); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal311_tree = (OMPTree)adaptor.create(char_literal311);
                            adaptor.addChild(root_0, char_literal311_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:448:9: enumDeclaration ( ';' )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_enumDeclaration_in_annotationTypeElementRest3133);
                    enumDeclaration312=enumDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, enumDeclaration312.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:448:25: ( ';' )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==25) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: ';'
                            {
                            char_literal313=(Token)input.LT(1);
                            match(input,25,FOLLOW_25_in_annotationTypeElementRest3135); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal313_tree = (OMPTree)adaptor.create(char_literal313);
                            adaptor.addChild(root_0, char_literal313_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:449:9: annotationTypeDeclaration ( ';' )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotationTypeDeclaration_in_annotationTypeElementRest3146);
                    annotationTypeDeclaration314=annotationTypeDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotationTypeDeclaration314.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:449:35: ( ';' )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==25) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: ';'
                            {
                            char_literal315=(Token)input.LT(1);
                            match(input,25,FOLLOW_25_in_annotationTypeElementRest3148); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal315_tree = (OMPTree)adaptor.create(char_literal315);
                            adaptor.addChild(root_0, char_literal315_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 80, annotationTypeElementRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationTypeElementRest

    public static class annotationMethodOrConstantRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationMethodOrConstantRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:452:1: annotationMethodOrConstantRest : ( annotationMethodRest | annotationConstantRest );
    public final annotationMethodOrConstantRest annotationMethodOrConstantRest() throws RecognitionException, OMPParserException {
        annotationMethodOrConstantRest retval = new annotationMethodOrConstantRest();
        retval.setStart(input.LT(1));
        int annotationMethodOrConstantRest_StartIndex = input.index();
        OMPTree root_0 = null;

        annotationMethodRest annotationMethodRest316 = null;

        annotationConstantRest annotationConstantRest317 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:453:5: ( annotationMethodRest | annotationConstantRest )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==Identifier) ) {
                int LA103_1 = input.LA(2);

                if ( (LA103_1==65) ) {
                    alt103=1;
                }
                else if ( (LA103_1==25||LA103_1==40||LA103_1==47||LA103_1==50) ) {
                    alt103=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("452:1: annotationMethodOrConstantRest : ( annotationMethodRest | annotationConstantRest );", 103, 1, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("452:1: annotationMethodOrConstantRest : ( annotationMethodRest | annotationConstantRest );", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:453:9: annotationMethodRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotationMethodRest_in_annotationMethodOrConstantRest3172);
                    annotationMethodRest316=annotationMethodRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotationMethodRest316.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:454:9: annotationConstantRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_annotationConstantRest_in_annotationMethodOrConstantRest3182);
                    annotationConstantRest317=annotationConstantRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, annotationConstantRest317.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 81, annotationMethodOrConstantRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationMethodOrConstantRest

    public static class annotationMethodRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationMethodRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:457:1: annotationMethodRest : Identifier '(' ')' ( defaultValue )? ;
    public final annotationMethodRest annotationMethodRest() throws RecognitionException, OMPParserException {
        annotationMethodRest retval = new annotationMethodRest();
        retval.setStart(input.LT(1));
        int annotationMethodRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier318=null;
        Token char_literal319=null;
        Token char_literal320=null;
        defaultValue defaultValue321 = null;


        OMPTree Identifier318_tree=null;
        OMPTree char_literal319_tree=null;
        OMPTree char_literal320_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:458:5: ( Identifier '(' ')' ( defaultValue )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:458:9: Identifier '(' ')' ( defaultValue )?
            {
            root_0 = (OMPTree)adaptor.nil();

            Identifier318=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_annotationMethodRest3205); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier318_tree = (OMPTree)adaptor.create(Identifier318);
            adaptor.addChild(root_0, Identifier318_tree);
            }
            char_literal319=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_annotationMethodRest3207); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal319_tree = (OMPTree)adaptor.create(char_literal319);
            adaptor.addChild(root_0, char_literal319_tree);
            }
            char_literal320=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_annotationMethodRest3209); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal320_tree = (OMPTree)adaptor.create(char_literal320);
            adaptor.addChild(root_0, char_literal320_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:458:28: ( defaultValue )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==73) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:458:29: defaultValue
                    {
                    pushFollow(FOLLOW_defaultValue_in_annotationMethodRest3212);
                    defaultValue321=defaultValue();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, defaultValue321.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 82, annotationMethodRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationMethodRest

    public static class annotationConstantRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start annotationConstantRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:461:1: annotationConstantRest : variableDeclarators ;
    public final annotationConstantRest annotationConstantRest() throws RecognitionException, OMPParserException {
        annotationConstantRest retval = new annotationConstantRest();
        retval.setStart(input.LT(1));
        int annotationConstantRest_StartIndex = input.index();
        OMPTree root_0 = null;

        variableDeclarators variableDeclarators322 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:462:5: ( variableDeclarators )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:462:9: variableDeclarators
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableDeclarators_in_annotationConstantRest3237);
            variableDeclarators322=variableDeclarators();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclarators322.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 83, annotationConstantRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end annotationConstantRest

    public static class defaultValue extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start defaultValue
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:465:1: defaultValue : 'default' elementValue ;
    public final defaultValue defaultValue() throws RecognitionException, OMPParserException {
        defaultValue retval = new defaultValue();
        retval.setStart(input.LT(1));
        int defaultValue_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal323=null;
        elementValue elementValue324 = null;


        OMPTree string_literal323_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:466:5: ( 'default' elementValue )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:466:9: 'default' elementValue
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal323=(Token)input.LT(1);
            match(input,73,FOLLOW_73_in_defaultValue3260); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal323_tree = (OMPTree)adaptor.create(string_literal323);
            adaptor.addChild(root_0, string_literal323_tree);
            }
            pushFollow(FOLLOW_elementValue_in_defaultValue3262);
            elementValue324=elementValue();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, elementValue324.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 84, defaultValue_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end defaultValue

    public static class block extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start block
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:471:1: block : '{' ( blockStatement )* '}' ;
    public final block block() throws RecognitionException, OMPParserException {
        block retval = new block();
        retval.setStart(input.LT(1));
        int block_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal325=null;
        Token char_literal327=null;
        blockStatement blockStatement326 = null;


        OMPTree char_literal325_tree=null;
        OMPTree char_literal327_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:472:5: ( '{' ( blockStatement )* '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:472:9: '{' ( blockStatement )* '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal325=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_block3283); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal325_tree = (OMPTree)adaptor.create(char_literal325);
            adaptor.addChild(root_0, char_literal325_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:472:13: ( blockStatement )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( ((LA105_0>=Identifier && LA105_0<=ASSERT)||LA105_0==25||LA105_0==27||(LA105_0>=30 && LA105_0<=36)||LA105_0==43||(LA105_0>=45 && LA105_0<=46)||LA105_0==52||(LA105_0>=55 && LA105_0<=62)||(LA105_0>=64 && LA105_0<=65)||(LA105_0>=68 && LA105_0<=72)||LA105_0==75||(LA105_0>=77 && LA105_0<=80)||(LA105_0>=82 && LA105_0<=86)||(LA105_0>=104 && LA105_0<=105)||(LA105_0>=108 && LA105_0<=113)) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: blockStatement
            	    {
            	    pushFollow(FOLLOW_blockStatement_in_block3285);
            	    blockStatement326=blockStatement();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, blockStatement326.getTree());

            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);

            char_literal327=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_block3288); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal327_tree = (OMPTree)adaptor.create(char_literal327);
            adaptor.addChild(root_0, char_literal327_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 85, block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end block

    public static class blockStatement extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start blockStatement
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );
    public final blockStatement blockStatement() throws RecognitionException, OMPParserException {
        blockStatement retval = new blockStatement();
        retval.setStart(input.LT(1));
        int blockStatement_StartIndex = input.index();
        OMPTree root_0 = null;

        localVariableDeclarationStatement localVariableDeclarationStatement328 = null;

        classOrInterfaceDeclaration classOrInterfaceDeclaration329 = null;

        statement statement330 = null;

        openmpDirective openmpDirective331 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:476:5: ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective )
            int alt106=4;
            switch ( input.LA(1) ) {
            case 34:
                {
                switch ( input.LA(2) ) {
                case Identifier:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    alt106=1;
                    }
                    break;
                case 34:
                    {
                    int LA106_48 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred152()) ) {
                        alt106=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 48, input);

                        throw nvae;
                    }
                    }
                    break;
                case 72:
                    {
                    int LA106_49 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred152()) ) {
                        alt106=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 49, input);

                        throw nvae;
                    }
                    }
                    break;
                case ENUM:
                case 27:
                case 30:
                case 31:
                case 32:
                case 33:
                case 35:
                case 36:
                case 45:
                    {
                    alt106=2;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 1, input);

                    throw nvae;
                }

                }
                break;
            case 72:
                {
                int LA106_2 = input.LA(2);

                if ( (LA106_2==45) ) {
                    alt106=2;
                }
                else if ( (LA106_2==Identifier) ) {
                    int LA106_60 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred152()) ) {
                        alt106=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 60, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 2, input);

                    throw nvae;
                }
                }
                break;
            case Identifier:
                {
                switch ( input.LA(2) ) {
                case 25:
                case 29:
                case 41:
                case 42:
                case 50:
                case 63:
                case 65:
                case 74:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 101:
                case 102:
                case 103:
                case 104:
                case 105:
                case 106:
                case 107:
                case 108:
                case 109:
                    {
                    alt106=3;
                    }
                    break;
                case 28:
                    {
                    int LA106_62 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred153()) ) {
                        alt106=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 62, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA106_63 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred153()) ) {
                        alt106=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 63, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA106_68 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred153()) ) {
                        alt106=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 68, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    alt106=1;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 3, input);

                    throw nvae;
                }

                }
                break;
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                switch ( input.LA(2) ) {
                case 47:
                    {
                    int LA106_89 = input.LA(3);

                    if ( (synpred151()) ) {
                        alt106=1;
                    }
                    else if ( (synpred153()) ) {
                        alt106=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 89, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    alt106=1;
                    }
                    break;
                case 28:
                    {
                    alt106=3;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 4, input);

                    throw nvae;
                }

                }
                break;
            case ENUM:
            case 27:
            case 30:
            case 31:
            case 32:
            case 33:
            case 35:
            case 36:
            case 45:
                {
                alt106=2;
                }
                break;
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case ASSERT:
            case 25:
            case 43:
            case 46:
            case 52:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 75:
            case 77:
            case 78:
            case 79:
            case 80:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 104:
            case 105:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
                {
                alt106=3;
                }
                break;
            case 113:
                {
                int LA106_45 = input.LA(2);

                if ( (LA106_45==77||LA106_45==114||LA106_45==117||LA106_45==122||LA106_45==124||(LA106_45>=126 && LA106_45<=128)||LA106_45==130) ) {
                    alt106=3;
                }
                else if ( (LA106_45==129) ) {
                    alt106=4;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 45, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("475:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement | openmpDirective );", 106, 0, input);

                throw nvae;
            }

            switch (alt106) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:476:9: localVariableDeclarationStatement
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_localVariableDeclarationStatement_in_blockStatement3311);
                    localVariableDeclarationStatement328=localVariableDeclarationStatement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, localVariableDeclarationStatement328.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:477:9: classOrInterfaceDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceDeclaration_in_blockStatement3321);
                    classOrInterfaceDeclaration329=classOrInterfaceDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceDeclaration329.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:478:9: statement
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_statement_in_blockStatement3331);
                    statement330=statement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statement330.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:479:8: openmpDirective
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_openmpDirective_in_blockStatement3340);
                    openmpDirective331=openmpDirective();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, openmpDirective331.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 86, blockStatement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end blockStatement

    public static class localVariableDeclarationStatement extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start localVariableDeclarationStatement
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:482:1: localVariableDeclarationStatement : localVariableDeclaration ';' ;
    public final localVariableDeclarationStatement localVariableDeclarationStatement() throws RecognitionException, OMPParserException {
        localVariableDeclarationStatement retval = new localVariableDeclarationStatement();
        retval.setStart(input.LT(1));
        int localVariableDeclarationStatement_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal333=null;
        localVariableDeclaration localVariableDeclaration332 = null;


        OMPTree char_literal333_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:483:5: ( localVariableDeclaration ';' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:483:10: localVariableDeclaration ';'
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_localVariableDeclaration_in_localVariableDeclarationStatement3364);
            localVariableDeclaration332=localVariableDeclaration();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, localVariableDeclaration332.getTree());
            char_literal333=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_localVariableDeclarationStatement3366); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal333_tree = (OMPTree)adaptor.create(char_literal333);
            adaptor.addChild(root_0, char_literal333_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 87, localVariableDeclarationStatement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end localVariableDeclarationStatement

    public static class localVariableDeclaration extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start localVariableDeclaration
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:486:1: localVariableDeclaration : variableModifiers type variableDeclarators ;
    public final localVariableDeclaration localVariableDeclaration() throws RecognitionException, OMPParserException {
        localVariableDeclaration retval = new localVariableDeclaration();
        retval.setStart(input.LT(1));
        int localVariableDeclaration_StartIndex = input.index();
        OMPTree root_0 = null;

        variableModifiers variableModifiers334 = null;

        type type335 = null;

        variableDeclarators variableDeclarators336 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:487:5: ( variableModifiers type variableDeclarators )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:487:9: variableModifiers type variableDeclarators
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableModifiers_in_localVariableDeclaration3385);
            variableModifiers334=variableModifiers();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableModifiers334.getTree());
            pushFollow(FOLLOW_type_in_localVariableDeclaration3387);
            type335=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type335.getTree());
            pushFollow(FOLLOW_variableDeclarators_in_localVariableDeclaration3389);
            variableDeclarators336=variableDeclarators();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclarators336.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 88, localVariableDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end localVariableDeclaration

    public static class variableModifiers extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableModifiers
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:490:1: variableModifiers : ( variableModifier )* ;
    public final variableModifiers variableModifiers() throws RecognitionException, OMPParserException {
        variableModifiers retval = new variableModifiers();
        retval.setStart(input.LT(1));
        int variableModifiers_StartIndex = input.index();
        OMPTree root_0 = null;

        variableModifier variableModifier337 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:491:5: ( ( variableModifier )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:491:9: ( variableModifier )*
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:491:9: ( variableModifier )*
            loop107:
            do {
                int alt107=2;
                int LA107_0 = input.LA(1);

                if ( (LA107_0==34||LA107_0==72) ) {
                    alt107=1;
                }


                switch (alt107) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: variableModifier
            	    {
            	    pushFollow(FOLLOW_variableModifier_in_variableModifiers3412);
            	    variableModifier337=variableModifier();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, variableModifier337.getTree());

            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 89, variableModifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableModifiers

    public static class statement extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start statement
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:494:1: statement : ( block | ASSERT expression ( ':' expression )? ';' | 'if' parExpression statement ( options {k=1; } : 'else' statement )? | 'for' '(' forControl ')' statement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | 'try' block ( catches 'finally' block | catches | 'finally' block ) | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( Identifier )? ';' | 'continue' ( Identifier )? ';' | ';' | statementExpression ';' | Identifier ':' statement | openmpConstruct );
    public final statement statement() throws RecognitionException, OMPParserException {
        statement retval = new statement();
        retval.setStart(input.LT(1));
        int statement_StartIndex = input.index();
        OMPTree root_0 = null;

        Token ASSERT339=null;
        Token char_literal341=null;
        Token char_literal343=null;
        Token string_literal344=null;
        Token string_literal347=null;
        Token string_literal349=null;
        Token char_literal350=null;
        Token char_literal352=null;
        Token string_literal354=null;
        Token string_literal357=null;
        Token string_literal359=null;
        Token char_literal361=null;
        Token string_literal362=null;
        Token string_literal365=null;
        Token string_literal368=null;
        Token string_literal370=null;
        Token char_literal372=null;
        Token char_literal374=null;
        Token string_literal375=null;
        Token string_literal378=null;
        Token char_literal380=null;
        Token string_literal381=null;
        Token char_literal383=null;
        Token string_literal384=null;
        Token Identifier385=null;
        Token char_literal386=null;
        Token string_literal387=null;
        Token Identifier388=null;
        Token char_literal389=null;
        Token char_literal390=null;
        Token char_literal392=null;
        Token Identifier393=null;
        Token char_literal394=null;
        block block338 = null;

        expression expression340 = null;

        expression expression342 = null;

        parExpression parExpression345 = null;

        statement statement346 = null;

        statement statement348 = null;

        forControl forControl351 = null;

        statement statement353 = null;

        parExpression parExpression355 = null;

        statement statement356 = null;

        statement statement358 = null;

        parExpression parExpression360 = null;

        block block363 = null;

        catches catches364 = null;

        block block366 = null;

        catches catches367 = null;

        block block369 = null;

        parExpression parExpression371 = null;

        switchBlockStatementGroups switchBlockStatementGroups373 = null;

        parExpression parExpression376 = null;

        block block377 = null;

        expression expression379 = null;

        expression expression382 = null;

        statementExpression statementExpression391 = null;

        statement statement395 = null;

        openmpConstruct openmpConstruct396 = null;


        OMPTree ASSERT339_tree=null;
        OMPTree char_literal341_tree=null;
        OMPTree char_literal343_tree=null;
        OMPTree string_literal344_tree=null;
        OMPTree string_literal347_tree=null;
        OMPTree string_literal349_tree=null;
        OMPTree char_literal350_tree=null;
        OMPTree char_literal352_tree=null;
        OMPTree string_literal354_tree=null;
        OMPTree string_literal357_tree=null;
        OMPTree string_literal359_tree=null;
        OMPTree char_literal361_tree=null;
        OMPTree string_literal362_tree=null;
        OMPTree string_literal365_tree=null;
        OMPTree string_literal368_tree=null;
        OMPTree string_literal370_tree=null;
        OMPTree char_literal372_tree=null;
        OMPTree char_literal374_tree=null;
        OMPTree string_literal375_tree=null;
        OMPTree string_literal378_tree=null;
        OMPTree char_literal380_tree=null;
        OMPTree string_literal381_tree=null;
        OMPTree char_literal383_tree=null;
        OMPTree string_literal384_tree=null;
        OMPTree Identifier385_tree=null;
        OMPTree char_literal386_tree=null;
        OMPTree string_literal387_tree=null;
        OMPTree Identifier388_tree=null;
        OMPTree char_literal389_tree=null;
        OMPTree char_literal390_tree=null;
        OMPTree char_literal392_tree=null;
        OMPTree Identifier393_tree=null;
        OMPTree char_literal394_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:495:5: ( block | ASSERT expression ( ':' expression )? ';' | 'if' parExpression statement ( options {k=1; } : 'else' statement )? | 'for' '(' forControl ')' statement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | 'try' block ( catches 'finally' block | catches | 'finally' block ) | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( Identifier )? ';' | 'continue' ( Identifier )? ';' | ';' | statementExpression ';' | Identifier ':' statement | openmpConstruct )
            int alt114=17;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt114=1;
                }
                break;
            case ASSERT:
                {
                alt114=2;
                }
                break;
            case 75:
                {
                alt114=3;
                }
                break;
            case 77:
                {
                alt114=4;
                }
                break;
            case 78:
                {
                alt114=5;
                }
                break;
            case 79:
                {
                alt114=6;
                }
                break;
            case 80:
                {
                alt114=7;
                }
                break;
            case 82:
                {
                alt114=8;
                }
                break;
            case 52:
                {
                alt114=9;
                }
                break;
            case 83:
                {
                alt114=10;
                }
                break;
            case 84:
                {
                alt114=11;
                }
                break;
            case 85:
                {
                alt114=12;
                }
                break;
            case 86:
                {
                alt114=13;
                }
                break;
            case 25:
                {
                alt114=14;
                }
                break;
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 46:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 104:
            case 105:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
                {
                alt114=15;
                }
                break;
            case Identifier:
                {
                int LA114_31 = input.LA(2);

                if ( (LA114_31==74) ) {
                    alt114=16;
                }
                else if ( (LA114_31==25||(LA114_31>=28 && LA114_31<=29)||LA114_31==39||(LA114_31>=41 && LA114_31<=42)||LA114_31==47||LA114_31==50||LA114_31==63||LA114_31==65||(LA114_31>=89 && LA114_31<=109)) ) {
                    alt114=15;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("494:1: statement : ( block | ASSERT expression ( ':' expression )? ';' | 'if' parExpression statement ( options {k=1; } : 'else' statement )? | 'for' '(' forControl ')' statement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | 'try' block ( catches 'finally' block | catches | 'finally' block ) | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( Identifier )? ';' | 'continue' ( Identifier )? ';' | ';' | statementExpression ';' | Identifier ':' statement | openmpConstruct );", 114, 31, input);

                    throw nvae;
                }
                }
                break;
            case 113:
                {
                alt114=17;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("494:1: statement : ( block | ASSERT expression ( ':' expression )? ';' | 'if' parExpression statement ( options {k=1; } : 'else' statement )? | 'for' '(' forControl ')' statement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | 'try' block ( catches 'finally' block | catches | 'finally' block ) | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( Identifier )? ';' | 'continue' ( Identifier )? ';' | ';' | statementExpression ';' | Identifier ':' statement | openmpConstruct );", 114, 0, input);

                throw nvae;
            }

            switch (alt114) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:495:7: block
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_block_in_statement3430);
                    block338=block();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, block338.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:496:9: ASSERT expression ( ':' expression )? ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    ASSERT339=(Token)input.LT(1);
                    match(input,ASSERT,FOLLOW_ASSERT_in_statement3440); if (failed) return retval;
                    if ( backtracking==0 ) {
                    ASSERT339_tree = (OMPTree)adaptor.create(ASSERT339);
                    adaptor.addChild(root_0, ASSERT339_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3442);
                    expression340=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression340.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:496:27: ( ':' expression )?
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==74) ) {
                        alt108=1;
                    }
                    switch (alt108) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:496:28: ':' expression
                            {
                            char_literal341=(Token)input.LT(1);
                            match(input,74,FOLLOW_74_in_statement3445); if (failed) return retval;
                            if ( backtracking==0 ) {
                            char_literal341_tree = (OMPTree)adaptor.create(char_literal341);
                            adaptor.addChild(root_0, char_literal341_tree);
                            }
                            pushFollow(FOLLOW_expression_in_statement3447);
                            expression342=expression();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, expression342.getTree());

                            }
                            break;

                    }

                    char_literal343=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3451); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal343_tree = (OMPTree)adaptor.create(char_literal343);
                    adaptor.addChild(root_0, char_literal343_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:497:9: 'if' parExpression statement ( options {k=1; } : 'else' statement )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal344=(Token)input.LT(1);
                    match(input,75,FOLLOW_75_in_statement3461); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal344_tree = (OMPTree)adaptor.create(string_literal344);
                    adaptor.addChild(root_0, string_literal344_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement3463);
                    parExpression345=parExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parExpression345.getTree());
                    pushFollow(FOLLOW_statement_in_statement3465);
                    statement346=statement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statement346.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:497:38: ( options {k=1; } : 'else' statement )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==76) ) {
                        int LA109_1 = input.LA(2);

                        if ( (synpred158()) ) {
                            alt109=1;
                        }
                    }
                    switch (alt109) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:497:54: 'else' statement
                            {
                            string_literal347=(Token)input.LT(1);
                            match(input,76,FOLLOW_76_in_statement3475); if (failed) return retval;
                            if ( backtracking==0 ) {
                            string_literal347_tree = (OMPTree)adaptor.create(string_literal347);
                            adaptor.addChild(root_0, string_literal347_tree);
                            }
                            pushFollow(FOLLOW_statement_in_statement3477);
                            statement348=statement();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, statement348.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:498:9: 'for' '(' forControl ')' statement
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal349=(Token)input.LT(1);
                    match(input,77,FOLLOW_77_in_statement3489); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal349_tree = (OMPTree)adaptor.create(string_literal349);
                    adaptor.addChild(root_0, string_literal349_tree);
                    }
                    char_literal350=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_statement3491); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal350_tree = (OMPTree)adaptor.create(char_literal350);
                    adaptor.addChild(root_0, char_literal350_tree);
                    }
                    pushFollow(FOLLOW_forControl_in_statement3493);
                    forControl351=forControl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, forControl351.getTree());
                    char_literal352=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_statement3495); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal352_tree = (OMPTree)adaptor.create(char_literal352);
                    adaptor.addChild(root_0, char_literal352_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3497);
                    statement353=statement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statement353.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:499:9: 'while' parExpression statement
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal354=(Token)input.LT(1);
                    match(input,78,FOLLOW_78_in_statement3507); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal354_tree = (OMPTree)adaptor.create(string_literal354);
                    adaptor.addChild(root_0, string_literal354_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement3509);
                    parExpression355=parExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parExpression355.getTree());
                    pushFollow(FOLLOW_statement_in_statement3511);
                    statement356=statement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statement356.getTree());

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:500:9: 'do' statement 'while' parExpression ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal357=(Token)input.LT(1);
                    match(input,79,FOLLOW_79_in_statement3521); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal357_tree = (OMPTree)adaptor.create(string_literal357);
                    adaptor.addChild(root_0, string_literal357_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3523);
                    statement358=statement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statement358.getTree());
                    string_literal359=(Token)input.LT(1);
                    match(input,78,FOLLOW_78_in_statement3525); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal359_tree = (OMPTree)adaptor.create(string_literal359);
                    adaptor.addChild(root_0, string_literal359_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement3527);
                    parExpression360=parExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parExpression360.getTree());
                    char_literal361=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3529); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal361_tree = (OMPTree)adaptor.create(char_literal361);
                    adaptor.addChild(root_0, char_literal361_tree);
                    }

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:501:9: 'try' block ( catches 'finally' block | catches | 'finally' block )
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal362=(Token)input.LT(1);
                    match(input,80,FOLLOW_80_in_statement3539); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal362_tree = (OMPTree)adaptor.create(string_literal362);
                    adaptor.addChild(root_0, string_literal362_tree);
                    }
                    pushFollow(FOLLOW_block_in_statement3541);
                    block363=block();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, block363.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:502:9: ( catches 'finally' block | catches | 'finally' block )
                    int alt110=3;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==87) ) {
                        int LA110_1 = input.LA(2);

                        if ( (LA110_1==65) ) {
                            int LA110_3 = input.LA(3);

                            if ( (synpred163()) ) {
                                alt110=1;
                            }
                            else if ( (synpred164()) ) {
                                alt110=2;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("502:9: ( catches 'finally' block | catches | 'finally' block )", 110, 3, input);

                                throw nvae;
                            }
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("502:9: ( catches 'finally' block | catches | 'finally' block )", 110, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA110_0==81) ) {
                        alt110=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("502:9: ( catches 'finally' block | catches | 'finally' block )", 110, 0, input);

                        throw nvae;
                    }
                    switch (alt110) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:502:11: catches 'finally' block
                            {
                            pushFollow(FOLLOW_catches_in_statement3553);
                            catches364=catches();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, catches364.getTree());
                            string_literal365=(Token)input.LT(1);
                            match(input,81,FOLLOW_81_in_statement3555); if (failed) return retval;
                            if ( backtracking==0 ) {
                            string_literal365_tree = (OMPTree)adaptor.create(string_literal365);
                            adaptor.addChild(root_0, string_literal365_tree);
                            }
                            pushFollow(FOLLOW_block_in_statement3557);
                            block366=block();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, block366.getTree());

                            }
                            break;
                        case 2 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:503:11: catches
                            {
                            pushFollow(FOLLOW_catches_in_statement3569);
                            catches367=catches();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, catches367.getTree());

                            }
                            break;
                        case 3 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:504:13: 'finally' block
                            {
                            string_literal368=(Token)input.LT(1);
                            match(input,81,FOLLOW_81_in_statement3583); if (failed) return retval;
                            if ( backtracking==0 ) {
                            string_literal368_tree = (OMPTree)adaptor.create(string_literal368);
                            adaptor.addChild(root_0, string_literal368_tree);
                            }
                            pushFollow(FOLLOW_block_in_statement3585);
                            block369=block();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, block369.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:506:9: 'switch' parExpression '{' switchBlockStatementGroups '}'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal370=(Token)input.LT(1);
                    match(input,82,FOLLOW_82_in_statement3605); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal370_tree = (OMPTree)adaptor.create(string_literal370);
                    adaptor.addChild(root_0, string_literal370_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement3607);
                    parExpression371=parExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parExpression371.getTree());
                    char_literal372=(Token)input.LT(1);
                    match(input,43,FOLLOW_43_in_statement3609); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal372_tree = (OMPTree)adaptor.create(char_literal372);
                    adaptor.addChild(root_0, char_literal372_tree);
                    }
                    pushFollow(FOLLOW_switchBlockStatementGroups_in_statement3611);
                    switchBlockStatementGroups373=switchBlockStatementGroups();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, switchBlockStatementGroups373.getTree());
                    char_literal374=(Token)input.LT(1);
                    match(input,44,FOLLOW_44_in_statement3613); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal374_tree = (OMPTree)adaptor.create(char_literal374);
                    adaptor.addChild(root_0, char_literal374_tree);
                    }

                    }
                    break;
                case 9 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:507:9: 'synchronized' parExpression block
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal375=(Token)input.LT(1);
                    match(input,52,FOLLOW_52_in_statement3623); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal375_tree = (OMPTree)adaptor.create(string_literal375);
                    adaptor.addChild(root_0, string_literal375_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement3625);
                    parExpression376=parExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parExpression376.getTree());
                    pushFollow(FOLLOW_block_in_statement3627);
                    block377=block();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, block377.getTree());

                    }
                    break;
                case 10 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:508:9: 'return' ( expression )? ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal378=(Token)input.LT(1);
                    match(input,83,FOLLOW_83_in_statement3637); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal378_tree = (OMPTree)adaptor.create(string_literal378);
                    adaptor.addChild(root_0, string_literal378_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:508:18: ( expression )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Identifier||(LA111_0>=FloatingPointLiteral && LA111_0<=DecimalLiteral)||LA111_0==46||(LA111_0>=55 && LA111_0<=62)||(LA111_0>=64 && LA111_0<=65)||(LA111_0>=68 && LA111_0<=71)||(LA111_0>=104 && LA111_0<=105)||(LA111_0>=108 && LA111_0<=112)) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: expression
                            {
                            pushFollow(FOLLOW_expression_in_statement3639);
                            expression379=expression();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, expression379.getTree());

                            }
                            break;

                    }

                    char_literal380=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3642); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal380_tree = (OMPTree)adaptor.create(char_literal380);
                    adaptor.addChild(root_0, char_literal380_tree);
                    }

                    }
                    break;
                case 11 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:509:9: 'throw' expression ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal381=(Token)input.LT(1);
                    match(input,84,FOLLOW_84_in_statement3652); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal381_tree = (OMPTree)adaptor.create(string_literal381);
                    adaptor.addChild(root_0, string_literal381_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement3654);
                    expression382=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression382.getTree());
                    char_literal383=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3656); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal383_tree = (OMPTree)adaptor.create(char_literal383);
                    adaptor.addChild(root_0, char_literal383_tree);
                    }

                    }
                    break;
                case 12 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:510:9: 'break' ( Identifier )? ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal384=(Token)input.LT(1);
                    match(input,85,FOLLOW_85_in_statement3666); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal384_tree = (OMPTree)adaptor.create(string_literal384);
                    adaptor.addChild(root_0, string_literal384_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:510:17: ( Identifier )?
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==Identifier) ) {
                        alt112=1;
                    }
                    switch (alt112) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: Identifier
                            {
                            Identifier385=(Token)input.LT(1);
                            match(input,Identifier,FOLLOW_Identifier_in_statement3668); if (failed) return retval;
                            if ( backtracking==0 ) {
                            Identifier385_tree = (OMPTree)adaptor.create(Identifier385);
                            adaptor.addChild(root_0, Identifier385_tree);
                            }

                            }
                            break;

                    }

                    char_literal386=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3671); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal386_tree = (OMPTree)adaptor.create(char_literal386);
                    adaptor.addChild(root_0, char_literal386_tree);
                    }

                    }
                    break;
                case 13 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:511:9: 'continue' ( Identifier )? ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal387=(Token)input.LT(1);
                    match(input,86,FOLLOW_86_in_statement3681); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal387_tree = (OMPTree)adaptor.create(string_literal387);
                    adaptor.addChild(root_0, string_literal387_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:511:20: ( Identifier )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==Identifier) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: Identifier
                            {
                            Identifier388=(Token)input.LT(1);
                            match(input,Identifier,FOLLOW_Identifier_in_statement3683); if (failed) return retval;
                            if ( backtracking==0 ) {
                            Identifier388_tree = (OMPTree)adaptor.create(Identifier388);
                            adaptor.addChild(root_0, Identifier388_tree);
                            }

                            }
                            break;

                    }

                    char_literal389=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3686); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal389_tree = (OMPTree)adaptor.create(char_literal389);
                    adaptor.addChild(root_0, char_literal389_tree);
                    }

                    }
                    break;
                case 14 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:512:9: ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal390=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3696); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal390_tree = (OMPTree)adaptor.create(char_literal390);
                    adaptor.addChild(root_0, char_literal390_tree);
                    }

                    }
                    break;
                case 15 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:513:9: statementExpression ';'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_statementExpression_in_statement3707);
                    statementExpression391=statementExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statementExpression391.getTree());
                    char_literal392=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_statement3709); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal392_tree = (OMPTree)adaptor.create(char_literal392);
                    adaptor.addChild(root_0, char_literal392_tree);
                    }

                    }
                    break;
                case 16 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:514:9: Identifier ':' statement
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    Identifier393=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_statement3719); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier393_tree = (OMPTree)adaptor.create(Identifier393);
                    adaptor.addChild(root_0, Identifier393_tree);
                    }
                    char_literal394=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_statement3721); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal394_tree = (OMPTree)adaptor.create(char_literal394);
                    adaptor.addChild(root_0, char_literal394_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement3723);
                    statement395=statement();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, statement395.getTree());

                    }
                    break;
                case 17 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:515:7: openmpConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_openmpConstruct_in_statement3731);
                    openmpConstruct396=openmpConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, openmpConstruct396.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 90, statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end statement

    public static class catches extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start catches
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:518:1: catches : catchClause ( catchClause )* ;
    public final catches catches() throws RecognitionException, OMPParserException {
        catches retval = new catches();
        retval.setStart(input.LT(1));
        int catches_StartIndex = input.index();
        OMPTree root_0 = null;

        catchClause catchClause397 = null;

        catchClause catchClause398 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:519:5: ( catchClause ( catchClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:519:9: catchClause ( catchClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_catchClause_in_catches3754);
            catchClause397=catchClause();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, catchClause397.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:519:21: ( catchClause )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==87) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:519:22: catchClause
            	    {
            	    pushFollow(FOLLOW_catchClause_in_catches3757);
            	    catchClause398=catchClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, catchClause398.getTree());

            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 91, catches_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end catches

    public static class catchClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start catchClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:522:1: catchClause : 'catch' '(' formalParameter ')' block ;
    public final catchClause catchClause() throws RecognitionException, OMPParserException {
        catchClause retval = new catchClause();
        retval.setStart(input.LT(1));
        int catchClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal399=null;
        Token char_literal400=null;
        Token char_literal402=null;
        formalParameter formalParameter401 = null;

        block block403 = null;


        OMPTree string_literal399_tree=null;
        OMPTree char_literal400_tree=null;
        OMPTree char_literal402_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:523:5: ( 'catch' '(' formalParameter ')' block )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:523:9: 'catch' '(' formalParameter ')' block
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal399=(Token)input.LT(1);
            match(input,87,FOLLOW_87_in_catchClause3782); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal399_tree = (OMPTree)adaptor.create(string_literal399);
            adaptor.addChild(root_0, string_literal399_tree);
            }
            char_literal400=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_catchClause3784); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal400_tree = (OMPTree)adaptor.create(char_literal400);
            adaptor.addChild(root_0, char_literal400_tree);
            }
            pushFollow(FOLLOW_formalParameter_in_catchClause3786);
            formalParameter401=formalParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, formalParameter401.getTree());
            char_literal402=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_catchClause3788); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal402_tree = (OMPTree)adaptor.create(char_literal402);
            adaptor.addChild(root_0, char_literal402_tree);
            }
            pushFollow(FOLLOW_block_in_catchClause3790);
            block403=block();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, block403.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 92, catchClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end catchClause

    public static class formalParameter extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start formalParameter
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:526:1: formalParameter : variableModifiers type variableDeclaratorId ;
    public final formalParameter formalParameter() throws RecognitionException, OMPParserException {
        formalParameter retval = new formalParameter();
        retval.setStart(input.LT(1));
        int formalParameter_StartIndex = input.index();
        OMPTree root_0 = null;

        variableModifiers variableModifiers404 = null;

        type type405 = null;

        variableDeclaratorId variableDeclaratorId406 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:527:5: ( variableModifiers type variableDeclaratorId )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:527:9: variableModifiers type variableDeclaratorId
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableModifiers_in_formalParameter3809);
            variableModifiers404=variableModifiers();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableModifiers404.getTree());
            pushFollow(FOLLOW_type_in_formalParameter3811);
            type405=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type405.getTree());
            pushFollow(FOLLOW_variableDeclaratorId_in_formalParameter3813);
            variableDeclaratorId406=variableDeclaratorId();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableDeclaratorId406.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 93, formalParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formalParameter

    public static class switchBlockStatementGroups extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start switchBlockStatementGroups
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:530:1: switchBlockStatementGroups : ( switchBlockStatementGroup )* ;
    public final switchBlockStatementGroups switchBlockStatementGroups() throws RecognitionException, OMPParserException {
        switchBlockStatementGroups retval = new switchBlockStatementGroups();
        retval.setStart(input.LT(1));
        int switchBlockStatementGroups_StartIndex = input.index();
        OMPTree root_0 = null;

        switchBlockStatementGroup switchBlockStatementGroup407 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:531:5: ( ( switchBlockStatementGroup )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:531:9: ( switchBlockStatementGroup )*
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:531:9: ( switchBlockStatementGroup )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==73||LA116_0==88) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:531:10: switchBlockStatementGroup
            	    {
            	    pushFollow(FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups3841);
            	    switchBlockStatementGroup407=switchBlockStatementGroup();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, switchBlockStatementGroup407.getTree());

            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 94, switchBlockStatementGroups_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end switchBlockStatementGroups

    public static class switchBlockStatementGroup extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start switchBlockStatementGroup
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:538:1: switchBlockStatementGroup : ( switchLabel )+ ( blockStatement )* ;
    public final switchBlockStatementGroup switchBlockStatementGroup() throws RecognitionException, OMPParserException {
        switchBlockStatementGroup retval = new switchBlockStatementGroup();
        retval.setStart(input.LT(1));
        int switchBlockStatementGroup_StartIndex = input.index();
        OMPTree root_0 = null;

        switchLabel switchLabel408 = null;

        blockStatement blockStatement409 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:539:5: ( ( switchLabel )+ ( blockStatement )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:539:9: ( switchLabel )+ ( blockStatement )*
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:539:9: ( switchLabel )+
            int cnt117=0;
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==88) ) {
                    int LA117_47 = input.LA(2);

                    if ( (synpred180()) ) {
                        alt117=1;
                    }


                }
                else if ( (LA117_0==73) ) {
                    int LA117_48 = input.LA(2);

                    if ( (synpred180()) ) {
                        alt117=1;
                    }


                }


                switch (alt117) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: switchLabel
            	    {
            	    pushFollow(FOLLOW_switchLabel_in_switchBlockStatementGroup3868);
            	    switchLabel408=switchLabel();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, switchLabel408.getTree());

            	    }
            	    break;

            	default :
            	    if ( cnt117 >= 1 ) break loop117;
            	    if (backtracking>0) {failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(117, input);
                        throw eee;
                }
                cnt117++;
            } while (true);

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:539:22: ( blockStatement )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( ((LA118_0>=Identifier && LA118_0<=ASSERT)||LA118_0==25||LA118_0==27||(LA118_0>=30 && LA118_0<=36)||LA118_0==43||(LA118_0>=45 && LA118_0<=46)||LA118_0==52||(LA118_0>=55 && LA118_0<=62)||(LA118_0>=64 && LA118_0<=65)||(LA118_0>=68 && LA118_0<=72)||LA118_0==75||(LA118_0>=77 && LA118_0<=80)||(LA118_0>=82 && LA118_0<=86)||(LA118_0>=104 && LA118_0<=105)||(LA118_0>=108 && LA118_0<=113)) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: blockStatement
            	    {
            	    pushFollow(FOLLOW_blockStatement_in_switchBlockStatementGroup3871);
            	    blockStatement409=blockStatement();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, blockStatement409.getTree());

            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 95, switchBlockStatementGroup_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end switchBlockStatementGroup

    public static class switchLabel extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start switchLabel
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:542:1: switchLabel : ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' );
    public final switchLabel switchLabel() throws RecognitionException, OMPParserException {
        switchLabel retval = new switchLabel();
        retval.setStart(input.LT(1));
        int switchLabel_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal410=null;
        Token char_literal412=null;
        Token string_literal413=null;
        Token char_literal415=null;
        Token string_literal416=null;
        Token char_literal417=null;
        constantExpression constantExpression411 = null;

        enumConstantName enumConstantName414 = null;


        OMPTree string_literal410_tree=null;
        OMPTree char_literal412_tree=null;
        OMPTree string_literal413_tree=null;
        OMPTree char_literal415_tree=null;
        OMPTree string_literal416_tree=null;
        OMPTree char_literal417_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:543:5: ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' )
            int alt119=3;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==88) ) {
                int LA119_1 = input.LA(2);

                if ( ((LA119_1>=FloatingPointLiteral && LA119_1<=DecimalLiteral)||LA119_1==46||(LA119_1>=55 && LA119_1<=62)||(LA119_1>=64 && LA119_1<=65)||(LA119_1>=68 && LA119_1<=71)||(LA119_1>=104 && LA119_1<=105)||(LA119_1>=108 && LA119_1<=112)) ) {
                    alt119=1;
                }
                else if ( (LA119_1==Identifier) ) {
                    int LA119_19 = input.LA(3);

                    if ( (synpred182()) ) {
                        alt119=1;
                    }
                    else if ( (synpred183()) ) {
                        alt119=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("542:1: switchLabel : ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' );", 119, 19, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("542:1: switchLabel : ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' );", 119, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA119_0==73) ) {
                alt119=3;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("542:1: switchLabel : ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' );", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:543:9: 'case' constantExpression ':'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal410=(Token)input.LT(1);
                    match(input,88,FOLLOW_88_in_switchLabel3895); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal410_tree = (OMPTree)adaptor.create(string_literal410);
                    adaptor.addChild(root_0, string_literal410_tree);
                    }
                    pushFollow(FOLLOW_constantExpression_in_switchLabel3897);
                    constantExpression411=constantExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, constantExpression411.getTree());
                    char_literal412=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_switchLabel3899); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal412_tree = (OMPTree)adaptor.create(char_literal412);
                    adaptor.addChild(root_0, char_literal412_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:544:9: 'case' enumConstantName ':'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal413=(Token)input.LT(1);
                    match(input,88,FOLLOW_88_in_switchLabel3909); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal413_tree = (OMPTree)adaptor.create(string_literal413);
                    adaptor.addChild(root_0, string_literal413_tree);
                    }
                    pushFollow(FOLLOW_enumConstantName_in_switchLabel3911);
                    enumConstantName414=enumConstantName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, enumConstantName414.getTree());
                    char_literal415=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_switchLabel3913); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal415_tree = (OMPTree)adaptor.create(char_literal415);
                    adaptor.addChild(root_0, char_literal415_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:545:9: 'default' ':'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal416=(Token)input.LT(1);
                    match(input,73,FOLLOW_73_in_switchLabel3923); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal416_tree = (OMPTree)adaptor.create(string_literal416);
                    adaptor.addChild(root_0, string_literal416_tree);
                    }
                    char_literal417=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_switchLabel3925); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal417_tree = (OMPTree)adaptor.create(char_literal417);
                    adaptor.addChild(root_0, char_literal417_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 96, switchLabel_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end switchLabel

    public static class forControl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start forControl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );
    public final forControl forControl() throws RecognitionException, OMPParserException {
        forControl retval = new forControl();
        retval.setStart(input.LT(1));
        int forControl_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal420=null;
        Token char_literal422=null;
        enhancedForControl enhancedForControl418 = null;

        forInit forInit419 = null;

        expression expression421 = null;

        forUpdate forUpdate423 = null;


        OMPTree char_literal420_tree=null;
        OMPTree char_literal422_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:550:5: ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? )
            int alt123=2;
            switch ( input.LA(1) ) {
            case 34:
                {
                switch ( input.LA(2) ) {
                case Identifier:
                    {
                    switch ( input.LA(3) ) {
                    case 39:
                        {
                        int LA123_59 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 59, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 28:
                        {
                        int LA123_60 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 60, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 47:
                        {
                        int LA123_61 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 61, input);

                            throw nvae;
                        }
                        }
                        break;
                    case Identifier:
                        {
                        int LA123_62 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 62, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 23, input);

                        throw nvae;
                    }

                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA123_24 = input.LA(3);

                    if ( (LA123_24==47) ) {
                        int LA123_63 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 63, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA123_24==Identifier) ) {
                        int LA123_64 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 64, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 24, input);

                        throw nvae;
                    }
                    }
                    break;
                case 34:
                    {
                    switch ( input.LA(3) ) {
                    case Identifier:
                        {
                        int LA123_65 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 65, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        int LA123_66 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 66, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 34:
                        {
                        int LA123_67 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 67, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 72:
                        {
                        int LA123_68 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 68, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 25, input);

                        throw nvae;
                    }

                    }
                    break;
                case 72:
                    {
                    int LA123_26 = input.LA(3);

                    if ( (LA123_26==Identifier) ) {
                        int LA123_69 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 69, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 26, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 1, input);

                    throw nvae;
                }

                }
                break;
            case 72:
                {
                int LA123_2 = input.LA(2);

                if ( (LA123_2==Identifier) ) {
                    switch ( input.LA(3) ) {
                    case 28:
                        {
                        int LA123_70 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 70, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 65:
                        {
                        int LA123_71 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 71, input);

                            throw nvae;
                        }
                        }
                        break;
                    case Identifier:
                        {
                        int LA123_72 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 72, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        int LA123_73 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 73, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 34:
                        {
                        int LA123_74 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 74, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 72:
                        {
                        int LA123_75 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 75, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 27, input);

                        throw nvae;
                    }

                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 2, input);

                    throw nvae;
                }
                }
                break;
            case Identifier:
                {
                switch ( input.LA(2) ) {
                case 39:
                    {
                    switch ( input.LA(3) ) {
                    case FloatingPointLiteral:
                    case CharacterLiteral:
                    case StringLiteral:
                    case HexLiteral:
                    case OctalLiteral:
                    case DecimalLiteral:
                    case 39:
                    case 46:
                    case 50:
                    case 64:
                    case 65:
                    case 68:
                    case 69:
                    case 70:
                    case 71:
                    case 104:
                    case 105:
                    case 108:
                    case 109:
                    case 110:
                    case 111:
                    case 112:
                        {
                        alt123=2;
                        }
                        break;
                    case Identifier:
                        {
                        int LA123_94 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 94, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        int LA123_95 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 95, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 63:
                        {
                        int LA123_97 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 97, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 28, input);

                        throw nvae;
                    }

                    }
                    break;
                case 28:
                    {
                    int LA123_29 = input.LA(3);

                    if ( (LA123_29==Identifier) ) {
                        int LA123_98 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 98, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA123_29==36||LA123_29==39||LA123_29==64||LA123_29==68||LA123_29==112) ) {
                        alt123=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 29, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA123_30 = input.LA(3);

                    if ( (LA123_30==48) ) {
                        int LA123_104 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 104, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA123_30==Identifier||(LA123_30>=FloatingPointLiteral && LA123_30<=DecimalLiteral)||LA123_30==46||(LA123_30>=55 && LA123_30<=62)||(LA123_30>=64 && LA123_30<=65)||(LA123_30>=68 && LA123_30<=71)||(LA123_30>=104 && LA123_30<=105)||(LA123_30>=108 && LA123_30<=112)) ) {
                        alt123=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 30, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA123_31 = input.LA(3);

                    if ( (LA123_31==74) ) {
                        alt123=1;
                    }
                    else if ( (LA123_31==25||LA123_31==40||LA123_31==47||LA123_31==50) ) {
                        alt123=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 31, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                case 29:
                case 40:
                case 41:
                case 42:
                case 50:
                case 63:
                case 65:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 101:
                case 102:
                case 103:
                case 104:
                case 105:
                case 106:
                case 107:
                case 108:
                case 109:
                    {
                    alt123=2;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 3, input);

                    throw nvae;
                }

                }
                break;
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                switch ( input.LA(2) ) {
                case 47:
                    {
                    int LA123_56 = input.LA(3);

                    if ( (LA123_56==48) ) {
                        int LA123_129 = input.LA(4);

                        if ( (synpred184()) ) {
                            alt123=1;
                        }
                        else if ( (true) ) {
                            alt123=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 129, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 56, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA123_57 = input.LA(3);

                    if ( (LA123_57==74) ) {
                        alt123=1;
                    }
                    else if ( (LA123_57==25||LA123_57==40||LA123_57==47||LA123_57==50) ) {
                        alt123=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 57, input);

                        throw nvae;
                    }
                    }
                    break;
                case 28:
                    {
                    alt123=2;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 4, input);

                    throw nvae;
                }

                }
                break;
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 25:
            case 46:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 104:
            case 105:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
                {
                alt123=2;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("548:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );", 123, 0, input);

                throw nvae;
            }

            switch (alt123) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:550:9: enhancedForControl
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_enhancedForControl_in_forControl3956);
                    enhancedForControl418=enhancedForControl();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, enhancedForControl418.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:551:9: ( forInit )? ';' ( expression )? ';' ( forUpdate )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:551:9: ( forInit )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==Identifier||(LA120_0>=FloatingPointLiteral && LA120_0<=DecimalLiteral)||LA120_0==34||LA120_0==46||(LA120_0>=55 && LA120_0<=62)||(LA120_0>=64 && LA120_0<=65)||(LA120_0>=68 && LA120_0<=72)||(LA120_0>=104 && LA120_0<=105)||(LA120_0>=108 && LA120_0<=112)) ) {
                        alt120=1;
                    }
                    switch (alt120) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: forInit
                            {
                            pushFollow(FOLLOW_forInit_in_forControl3966);
                            forInit419=forInit();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, forInit419.getTree());

                            }
                            break;

                    }

                    char_literal420=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_forControl3969); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal420_tree = (OMPTree)adaptor.create(char_literal420);
                    adaptor.addChild(root_0, char_literal420_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:551:22: ( expression )?
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==Identifier||(LA121_0>=FloatingPointLiteral && LA121_0<=DecimalLiteral)||LA121_0==46||(LA121_0>=55 && LA121_0<=62)||(LA121_0>=64 && LA121_0<=65)||(LA121_0>=68 && LA121_0<=71)||(LA121_0>=104 && LA121_0<=105)||(LA121_0>=108 && LA121_0<=112)) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: expression
                            {
                            pushFollow(FOLLOW_expression_in_forControl3971);
                            expression421=expression();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, expression421.getTree());

                            }
                            break;

                    }

                    char_literal422=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_forControl3974); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal422_tree = (OMPTree)adaptor.create(char_literal422);
                    adaptor.addChild(root_0, char_literal422_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:551:38: ( forUpdate )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==Identifier||(LA122_0>=FloatingPointLiteral && LA122_0<=DecimalLiteral)||LA122_0==46||(LA122_0>=55 && LA122_0<=62)||(LA122_0>=64 && LA122_0<=65)||(LA122_0>=68 && LA122_0<=71)||(LA122_0>=104 && LA122_0<=105)||(LA122_0>=108 && LA122_0<=112)) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: forUpdate
                            {
                            pushFollow(FOLLOW_forUpdate_in_forControl3976);
                            forUpdate423=forUpdate();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, forUpdate423.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 97, forControl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end forControl

    public static class forInit extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start forInit
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:554:1: forInit : ( localVariableDeclaration | expressionList );
    public final forInit forInit() throws RecognitionException, OMPParserException {
        forInit retval = new forInit();
        retval.setStart(input.LT(1));
        int forInit_StartIndex = input.index();
        OMPTree root_0 = null;

        localVariableDeclaration localVariableDeclaration424 = null;

        expressionList expressionList425 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:555:5: ( localVariableDeclaration | expressionList )
            int alt124=2;
            switch ( input.LA(1) ) {
            case 34:
            case 72:
                {
                alt124=1;
                }
                break;
            case Identifier:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA124_22 = input.LA(3);

                    if ( (synpred188()) ) {
                        alt124=1;
                    }
                    else if ( (true) ) {
                        alt124=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 22, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA124_23 = input.LA(3);

                    if ( (synpred188()) ) {
                        alt124=1;
                    }
                    else if ( (true) ) {
                        alt124=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 23, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case 25:
                case 29:
                case 40:
                case 41:
                case 42:
                case 50:
                case 63:
                case 65:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 101:
                case 102:
                case 103:
                case 104:
                case 105:
                case 106:
                case 107:
                case 108:
                case 109:
                    {
                    alt124=2;
                    }
                    break;
                case 39:
                    {
                    int LA124_28 = input.LA(3);

                    if ( (synpred188()) ) {
                        alt124=1;
                    }
                    else if ( (true) ) {
                        alt124=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 28, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    alt124=1;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 3, input);

                    throw nvae;
                }

                }
                break;
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                switch ( input.LA(2) ) {
                case 47:
                    {
                    int LA124_51 = input.LA(3);

                    if ( (synpred188()) ) {
                        alt124=1;
                    }
                    else if ( (true) ) {
                        alt124=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 51, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    alt124=1;
                    }
                    break;
                case 28:
                    {
                    alt124=2;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 4, input);

                    throw nvae;
                }

                }
                break;
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 46:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 104:
            case 105:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
                {
                alt124=2;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("554:1: forInit : ( localVariableDeclaration | expressionList );", 124, 0, input);

                throw nvae;
            }

            switch (alt124) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:555:9: localVariableDeclaration
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_localVariableDeclaration_in_forInit3996);
                    localVariableDeclaration424=localVariableDeclaration();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, localVariableDeclaration424.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:556:9: expressionList
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_expressionList_in_forInit4006);
                    expressionList425=expressionList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expressionList425.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 98, forInit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end forInit

    public static class enhancedForControl extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start enhancedForControl
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:559:1: enhancedForControl : variableModifiers type Identifier ':' expression ;
    public final enhancedForControl enhancedForControl() throws RecognitionException, OMPParserException {
        enhancedForControl retval = new enhancedForControl();
        retval.setStart(input.LT(1));
        int enhancedForControl_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier428=null;
        Token char_literal429=null;
        variableModifiers variableModifiers426 = null;

        type type427 = null;

        expression expression430 = null;


        OMPTree Identifier428_tree=null;
        OMPTree char_literal429_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:560:5: ( variableModifiers type Identifier ':' expression )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:560:9: variableModifiers type Identifier ':' expression
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_variableModifiers_in_enhancedForControl4029);
            variableModifiers426=variableModifiers();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableModifiers426.getTree());
            pushFollow(FOLLOW_type_in_enhancedForControl4031);
            type427=type();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, type427.getTree());
            Identifier428=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_enhancedForControl4033); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier428_tree = (OMPTree)adaptor.create(Identifier428);
            adaptor.addChild(root_0, Identifier428_tree);
            }
            char_literal429=(Token)input.LT(1);
            match(input,74,FOLLOW_74_in_enhancedForControl4035); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal429_tree = (OMPTree)adaptor.create(char_literal429);
            adaptor.addChild(root_0, char_literal429_tree);
            }
            pushFollow(FOLLOW_expression_in_enhancedForControl4037);
            expression430=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expression430.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 99, enhancedForControl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end enhancedForControl

    public static class forUpdate extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start forUpdate
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:563:1: forUpdate : expressionList ;
    public final forUpdate forUpdate() throws RecognitionException, OMPParserException {
        forUpdate retval = new forUpdate();
        retval.setStart(input.LT(1));
        int forUpdate_StartIndex = input.index();
        OMPTree root_0 = null;

        expressionList expressionList431 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:564:5: ( expressionList )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:564:9: expressionList
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_expressionList_in_forUpdate4056);
            expressionList431=expressionList();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expressionList431.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 100, forUpdate_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end forUpdate

    public static class parExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:569:1: parExpression : '(' expression ')' ;
    public final parExpression parExpression() throws RecognitionException, OMPParserException {
        parExpression retval = new parExpression();
        retval.setStart(input.LT(1));
        int parExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal432=null;
        Token char_literal434=null;
        expression expression433 = null;


        OMPTree char_literal432_tree=null;
        OMPTree char_literal434_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:570:5: ( '(' expression ')' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:570:9: '(' expression ')'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal432=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_parExpression4077); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal432_tree = (OMPTree)adaptor.create(char_literal432);
            adaptor.addChild(root_0, char_literal432_tree);
            }
            pushFollow(FOLLOW_expression_in_parExpression4079);
            expression433=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expression433.getTree());
            char_literal434=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_parExpression4081); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal434_tree = (OMPTree)adaptor.create(char_literal434);
            adaptor.addChild(root_0, char_literal434_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 101, parExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parExpression

    public static class expressionList extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start expressionList
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:573:1: expressionList : expression ( ',' expression )* ;
    public final expressionList expressionList() throws RecognitionException, OMPParserException {
        expressionList retval = new expressionList();
        retval.setStart(input.LT(1));
        int expressionList_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal436=null;
        expression expression435 = null;

        expression expression437 = null;


        OMPTree char_literal436_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:574:5: ( expression ( ',' expression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:574:9: expression ( ',' expression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_expressionList4104);
            expression435=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expression435.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:574:20: ( ',' expression )*
            loop125:
            do {
                int alt125=2;
                int LA125_0 = input.LA(1);

                if ( (LA125_0==40) ) {
                    alt125=1;
                }


                switch (alt125) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:574:21: ',' expression
            	    {
            	    char_literal436=(Token)input.LT(1);
            	    match(input,40,FOLLOW_40_in_expressionList4107); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal436_tree = (OMPTree)adaptor.create(char_literal436);
            	    adaptor.addChild(root_0, char_literal436_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expressionList4109);
            	    expression437=expression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, expression437.getTree());

            	    }
            	    break;

            	default :
            	    break loop125;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 102, expressionList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end expressionList

    public static class statementExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start statementExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:577:1: statementExpression : expression ;
    public final statementExpression statementExpression() throws RecognitionException, OMPParserException {
        statementExpression retval = new statementExpression();
        retval.setStart(input.LT(1));
        int statementExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        expression expression438 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:578:5: ( expression )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:578:9: expression
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_statementExpression4130);
            expression438=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expression438.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 103, statementExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end statementExpression

    public static class constantExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start constantExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:581:1: constantExpression : expression ;
    public final constantExpression constantExpression() throws RecognitionException, OMPParserException {
        constantExpression retval = new constantExpression();
        retval.setStart(input.LT(1));
        int constantExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        expression expression439 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:582:5: ( expression )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:582:9: expression
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_expression_in_constantExpression4153);
            expression439=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expression439.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 104, constantExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constantExpression

    public static class expression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start expression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:585:1: expression : conditionalExpression ( assignmentOperator expression )? ;
    public final expression expression() throws RecognitionException, OMPParserException {
        expression retval = new expression();
        retval.setStart(input.LT(1));
        int expression_StartIndex = input.index();
        OMPTree root_0 = null;

        conditionalExpression conditionalExpression440 = null;

        assignmentOperator assignmentOperator441 = null;

        expression expression442 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:586:5: ( conditionalExpression ( assignmentOperator expression )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:586:9: conditionalExpression ( assignmentOperator expression )?
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_conditionalExpression_in_expression4176);
            conditionalExpression440=conditionalExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, conditionalExpression440.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:586:31: ( assignmentOperator expression )?
            int alt126=2;
            switch ( input.LA(1) ) {
                case 50:
                    {
                    int LA126_1 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA126_2 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA126_3 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA126_4 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA126_5 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA126_6 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA126_7 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA126_8 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA126_9 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA126_10 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA126_11 = input.LA(2);

                    if ( (synpred190()) ) {
                        alt126=1;
                    }
                    }
                    break;
            }

            switch (alt126) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:586:32: assignmentOperator expression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_expression4179);
                    assignmentOperator441=assignmentOperator();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, assignmentOperator441.getTree());
                    pushFollow(FOLLOW_expression_in_expression4181);
                    expression442=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression442.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 105, expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end expression

    public static class assignmentOperator extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start assignmentOperator
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:589:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);
    public final assignmentOperator assignmentOperator() throws RecognitionException, OMPParserException {
        assignmentOperator retval = new assignmentOperator();
        retval.setStart(input.LT(1));
        int assignmentOperator_StartIndex = input.index();
        OMPTree root_0 = null;

        Token t1=null;
        Token t2=null;
        Token t3=null;
        Token t4=null;
        Token char_literal443=null;
        Token string_literal444=null;
        Token string_literal445=null;
        Token string_literal446=null;
        Token string_literal447=null;
        Token string_literal448=null;
        Token string_literal449=null;
        Token string_literal450=null;
        Token string_literal451=null;

        OMPTree t1_tree=null;
        OMPTree t2_tree=null;
        OMPTree t3_tree=null;
        OMPTree t4_tree=null;
        OMPTree char_literal443_tree=null;
        OMPTree string_literal444_tree=null;
        OMPTree string_literal445_tree=null;
        OMPTree string_literal446_tree=null;
        OMPTree string_literal447_tree=null;
        OMPTree string_literal448_tree=null;
        OMPTree string_literal449_tree=null;
        OMPTree string_literal450_tree=null;
        OMPTree string_literal451_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:590:5: ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?)
            int alt127=12;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==50) ) {
                alt127=1;
            }
            else if ( (LA127_0==89) ) {
                alt127=2;
            }
            else if ( (LA127_0==90) ) {
                alt127=3;
            }
            else if ( (LA127_0==91) ) {
                alt127=4;
            }
            else if ( (LA127_0==92) ) {
                alt127=5;
            }
            else if ( (LA127_0==93) ) {
                alt127=6;
            }
            else if ( (LA127_0==94) ) {
                alt127=7;
            }
            else if ( (LA127_0==95) ) {
                alt127=8;
            }
            else if ( (LA127_0==96) ) {
                alt127=9;
            }
            else if ( (LA127_0==39) && (synpred200())) {
                alt127=10;
            }
            else if ( (LA127_0==41) ) {
                int LA127_11 = input.LA(2);

                if ( (LA127_11==41) ) {
                    int LA127_12 = input.LA(3);

                    if ( (synpred201()) ) {
                        alt127=11;
                    }
                    else if ( (synpred202()) ) {
                        alt127=12;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("589:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);", 127, 12, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("589:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);", 127, 11, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("589:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);", 127, 0, input);

                throw nvae;
            }
            switch (alt127) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:590:9: '='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal443=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_assignmentOperator4206); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal443_tree = (OMPTree)adaptor.create(char_literal443);
                    adaptor.addChild(root_0, char_literal443_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:591:9: '+='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal444=(Token)input.LT(1);
                    match(input,89,FOLLOW_89_in_assignmentOperator4216); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal444_tree = (OMPTree)adaptor.create(string_literal444);
                    adaptor.addChild(root_0, string_literal444_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:592:9: '-='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal445=(Token)input.LT(1);
                    match(input,90,FOLLOW_90_in_assignmentOperator4226); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal445_tree = (OMPTree)adaptor.create(string_literal445);
                    adaptor.addChild(root_0, string_literal445_tree);
                    }

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:593:9: '*='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal446=(Token)input.LT(1);
                    match(input,91,FOLLOW_91_in_assignmentOperator4236); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal446_tree = (OMPTree)adaptor.create(string_literal446);
                    adaptor.addChild(root_0, string_literal446_tree);
                    }

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:594:9: '/='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal447=(Token)input.LT(1);
                    match(input,92,FOLLOW_92_in_assignmentOperator4246); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal447_tree = (OMPTree)adaptor.create(string_literal447);
                    adaptor.addChild(root_0, string_literal447_tree);
                    }

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:595:9: '&='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal448=(Token)input.LT(1);
                    match(input,93,FOLLOW_93_in_assignmentOperator4256); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal448_tree = (OMPTree)adaptor.create(string_literal448);
                    adaptor.addChild(root_0, string_literal448_tree);
                    }

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:596:9: '|='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal449=(Token)input.LT(1);
                    match(input,94,FOLLOW_94_in_assignmentOperator4266); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal449_tree = (OMPTree)adaptor.create(string_literal449);
                    adaptor.addChild(root_0, string_literal449_tree);
                    }

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:597:9: '^='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal450=(Token)input.LT(1);
                    match(input,95,FOLLOW_95_in_assignmentOperator4276); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal450_tree = (OMPTree)adaptor.create(string_literal450);
                    adaptor.addChild(root_0, string_literal450_tree);
                    }

                    }
                    break;
                case 9 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:598:9: '%='
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal451=(Token)input.LT(1);
                    match(input,96,FOLLOW_96_in_assignmentOperator4286); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal451_tree = (OMPTree)adaptor.create(string_literal451);
                    adaptor.addChild(root_0, string_literal451_tree);
                    }

                    }
                    break;
                case 10 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:599:9: ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,39,FOLLOW_39_in_assignmentOperator4307); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,39,FOLLOW_39_in_assignmentOperator4311); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_assignmentOperator4315); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t3_tree = (OMPTree)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() &&
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() && 
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "assignmentOperator", " $t1.getLine() == $t2.getLine() &&\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() && \n          $t2.getLine() == $t3.getLine() && \n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 11 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:604:9: ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_assignmentOperator4349); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_assignmentOperator4353); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_assignmentOperator4357); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t3_tree = (OMPTree)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    t4=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_assignmentOperator4361); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t4_tree = (OMPTree)adaptor.create(t4);
                    adaptor.addChild(root_0, t4_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() &&
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() &&
                              t3.getLine() == t4.getLine() && 
                              t3.getCharPositionInLine() + 1 == t4.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "assignmentOperator", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() &&\n          $t2.getLine() == $t3.getLine() && \n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() &&\n          $t3.getLine() == $t4.getLine() && \n          $t3.getCharPositionInLine() + 1 == $t4.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 12 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:611:9: ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_assignmentOperator4392); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_assignmentOperator4396); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_assignmentOperator4400); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t3_tree = (OMPTree)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() && 
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "assignmentOperator", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() && \n          $t2.getLine() == $t3.getLine() && \n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() ");
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 106, assignmentOperator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end assignmentOperator

    public static class conditionalExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start conditionalExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:618:1: conditionalExpression : conditionalOrExpression ( '?' expression ':' expression )? ;
    public final conditionalExpression conditionalExpression() throws RecognitionException, OMPParserException {
        conditionalExpression retval = new conditionalExpression();
        retval.setStart(input.LT(1));
        int conditionalExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal453=null;
        Token char_literal455=null;
        conditionalOrExpression conditionalOrExpression452 = null;

        expression expression454 = null;

        expression expression456 = null;


        OMPTree char_literal453_tree=null;
        OMPTree char_literal455_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:619:5: ( conditionalOrExpression ( '?' expression ':' expression )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:619:9: conditionalOrExpression ( '?' expression ':' expression )?
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_conditionalOrExpression_in_conditionalExpression4429);
            conditionalOrExpression452=conditionalOrExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, conditionalOrExpression452.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:619:33: ( '?' expression ':' expression )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==63) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:619:35: '?' expression ':' expression
                    {
                    char_literal453=(Token)input.LT(1);
                    match(input,63,FOLLOW_63_in_conditionalExpression4433); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal453_tree = (OMPTree)adaptor.create(char_literal453);
                    adaptor.addChild(root_0, char_literal453_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditionalExpression4435);
                    expression454=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression454.getTree());
                    char_literal455=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_conditionalExpression4437); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal455_tree = (OMPTree)adaptor.create(char_literal455);
                    adaptor.addChild(root_0, char_literal455_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditionalExpression4439);
                    expression456=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression456.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 107, conditionalExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end conditionalExpression

    public static class conditionalOrExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start conditionalOrExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:622:1: conditionalOrExpression : conditionalAndExpression ( '||' conditionalAndExpression )* ;
    public final conditionalOrExpression conditionalOrExpression() throws RecognitionException, OMPParserException {
        conditionalOrExpression retval = new conditionalOrExpression();
        retval.setStart(input.LT(1));
        int conditionalOrExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal458=null;
        conditionalAndExpression conditionalAndExpression457 = null;

        conditionalAndExpression conditionalAndExpression459 = null;


        OMPTree string_literal458_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:623:5: ( conditionalAndExpression ( '||' conditionalAndExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:623:9: conditionalAndExpression ( '||' conditionalAndExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_conditionalAndExpression_in_conditionalOrExpression4461);
            conditionalAndExpression457=conditionalAndExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, conditionalAndExpression457.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:623:34: ( '||' conditionalAndExpression )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==97) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:623:36: '||' conditionalAndExpression
            	    {
            	    string_literal458=(Token)input.LT(1);
            	    match(input,97,FOLLOW_97_in_conditionalOrExpression4465); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    string_literal458_tree = (OMPTree)adaptor.create(string_literal458);
            	    adaptor.addChild(root_0, string_literal458_tree);
            	    }
            	    pushFollow(FOLLOW_conditionalAndExpression_in_conditionalOrExpression4467);
            	    conditionalAndExpression459=conditionalAndExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, conditionalAndExpression459.getTree());

            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 108, conditionalOrExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end conditionalOrExpression

    public static class conditionalAndExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start conditionalAndExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:626:1: conditionalAndExpression : inclusiveOrExpression ( '&&' inclusiveOrExpression )* ;
    public final conditionalAndExpression conditionalAndExpression() throws RecognitionException, OMPParserException {
        conditionalAndExpression retval = new conditionalAndExpression();
        retval.setStart(input.LT(1));
        int conditionalAndExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal461=null;
        inclusiveOrExpression inclusiveOrExpression460 = null;

        inclusiveOrExpression inclusiveOrExpression462 = null;


        OMPTree string_literal461_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 109) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:627:5: ( inclusiveOrExpression ( '&&' inclusiveOrExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:627:9: inclusiveOrExpression ( '&&' inclusiveOrExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression4489);
            inclusiveOrExpression460=inclusiveOrExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, inclusiveOrExpression460.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:627:31: ( '&&' inclusiveOrExpression )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==98) ) {
                    alt130=1;
                }


                switch (alt130) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:627:33: '&&' inclusiveOrExpression
            	    {
            	    string_literal461=(Token)input.LT(1);
            	    match(input,98,FOLLOW_98_in_conditionalAndExpression4493); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    string_literal461_tree = (OMPTree)adaptor.create(string_literal461);
            	    adaptor.addChild(root_0, string_literal461_tree);
            	    }
            	    pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression4495);
            	    inclusiveOrExpression462=inclusiveOrExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, inclusiveOrExpression462.getTree());

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 109, conditionalAndExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end conditionalAndExpression

    public static class inclusiveOrExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start inclusiveOrExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:630:1: inclusiveOrExpression : exclusiveOrExpression ( '|' exclusiveOrExpression )* ;
    public final inclusiveOrExpression inclusiveOrExpression() throws RecognitionException, OMPParserException {
        inclusiveOrExpression retval = new inclusiveOrExpression();
        retval.setStart(input.LT(1));
        int inclusiveOrExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal464=null;
        exclusiveOrExpression exclusiveOrExpression463 = null;

        exclusiveOrExpression exclusiveOrExpression465 = null;


        OMPTree char_literal464_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:631:5: ( exclusiveOrExpression ( '|' exclusiveOrExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:631:9: exclusiveOrExpression ( '|' exclusiveOrExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression4517);
            exclusiveOrExpression463=exclusiveOrExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, exclusiveOrExpression463.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:631:31: ( '|' exclusiveOrExpression )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==99) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:631:33: '|' exclusiveOrExpression
            	    {
            	    char_literal464=(Token)input.LT(1);
            	    match(input,99,FOLLOW_99_in_inclusiveOrExpression4521); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal464_tree = (OMPTree)adaptor.create(char_literal464);
            	    adaptor.addChild(root_0, char_literal464_tree);
            	    }
            	    pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression4523);
            	    exclusiveOrExpression465=exclusiveOrExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, exclusiveOrExpression465.getTree());

            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 110, inclusiveOrExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end inclusiveOrExpression

    public static class exclusiveOrExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start exclusiveOrExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:634:1: exclusiveOrExpression : andExpression ( '^' andExpression )* ;
    public final exclusiveOrExpression exclusiveOrExpression() throws RecognitionException, OMPParserException {
        exclusiveOrExpression retval = new exclusiveOrExpression();
        retval.setStart(input.LT(1));
        int exclusiveOrExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal467=null;
        andExpression andExpression466 = null;

        andExpression andExpression468 = null;


        OMPTree char_literal467_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:635:5: ( andExpression ( '^' andExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:635:9: andExpression ( '^' andExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression4545);
            andExpression466=andExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, andExpression466.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:635:23: ( '^' andExpression )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==100) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:635:25: '^' andExpression
            	    {
            	    char_literal467=(Token)input.LT(1);
            	    match(input,100,FOLLOW_100_in_exclusiveOrExpression4549); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal467_tree = (OMPTree)adaptor.create(char_literal467);
            	    adaptor.addChild(root_0, char_literal467_tree);
            	    }
            	    pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression4551);
            	    andExpression468=andExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, andExpression468.getTree());

            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 111, exclusiveOrExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end exclusiveOrExpression

    public static class andExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start andExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:638:1: andExpression : equalityExpression ( '&' equalityExpression )* ;
    public final andExpression andExpression() throws RecognitionException, OMPParserException {
        andExpression retval = new andExpression();
        retval.setStart(input.LT(1));
        int andExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal470=null;
        equalityExpression equalityExpression469 = null;

        equalityExpression equalityExpression471 = null;


        OMPTree char_literal470_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:639:5: ( equalityExpression ( '&' equalityExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:639:9: equalityExpression ( '&' equalityExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_equalityExpression_in_andExpression4573);
            equalityExpression469=equalityExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, equalityExpression469.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:639:28: ( '&' equalityExpression )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==42) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:639:30: '&' equalityExpression
            	    {
            	    char_literal470=(Token)input.LT(1);
            	    match(input,42,FOLLOW_42_in_andExpression4577); if (failed) return retval;
            	    if ( backtracking==0 ) {
            	    char_literal470_tree = (OMPTree)adaptor.create(char_literal470);
            	    adaptor.addChild(root_0, char_literal470_tree);
            	    }
            	    pushFollow(FOLLOW_equalityExpression_in_andExpression4579);
            	    equalityExpression471=equalityExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, equalityExpression471.getTree());

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 112, andExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end andExpression

    public static class equalityExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start equalityExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:642:1: equalityExpression : instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* ;
    public final equalityExpression equalityExpression() throws RecognitionException, OMPParserException {
        equalityExpression retval = new equalityExpression();
        retval.setStart(input.LT(1));
        int equalityExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set473=null;
        instanceOfExpression instanceOfExpression472 = null;

        instanceOfExpression instanceOfExpression474 = null;


        OMPTree set473_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:643:5: ( instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:643:9: instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression4601);
            instanceOfExpression472=instanceOfExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, instanceOfExpression472.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:643:30: ( ( '==' | '!=' ) instanceOfExpression )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( ((LA134_0>=101 && LA134_0<=102)) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:643:32: ( '==' | '!=' ) instanceOfExpression
            	    {
            	    set473=(Token)input.LT(1);
            	    if ( (input.LA(1)>=101 && input.LA(1)<=102) ) {
            	        input.consume();
            	        if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set473));
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_equalityExpression4605);    throw mse;
            	    }

            	    pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression4613);
            	    instanceOfExpression474=instanceOfExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, instanceOfExpression474.getTree());

            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 113, equalityExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end equalityExpression

    public static class instanceOfExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start instanceOfExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:646:1: instanceOfExpression : relationalExpression ( 'instanceof' type )? ;
    public final instanceOfExpression instanceOfExpression() throws RecognitionException, OMPParserException {
        instanceOfExpression retval = new instanceOfExpression();
        retval.setStart(input.LT(1));
        int instanceOfExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal476=null;
        relationalExpression relationalExpression475 = null;

        type type477 = null;


        OMPTree string_literal476_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:647:5: ( relationalExpression ( 'instanceof' type )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:647:9: relationalExpression ( 'instanceof' type )?
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_relationalExpression_in_instanceOfExpression4635);
            relationalExpression475=relationalExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, relationalExpression475.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:647:30: ( 'instanceof' type )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==103) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:647:31: 'instanceof' type
                    {
                    string_literal476=(Token)input.LT(1);
                    match(input,103,FOLLOW_103_in_instanceOfExpression4638); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal476_tree = (OMPTree)adaptor.create(string_literal476);
                    adaptor.addChild(root_0, string_literal476_tree);
                    }
                    pushFollow(FOLLOW_type_in_instanceOfExpression4640);
                    type477=type();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, type477.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 114, instanceOfExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end instanceOfExpression

    public static class relationalExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start relationalExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:650:1: relationalExpression : shiftExpression ( relationalOp shiftExpression )* ;
    public final relationalExpression relationalExpression() throws RecognitionException, OMPParserException {
        relationalExpression retval = new relationalExpression();
        retval.setStart(input.LT(1));
        int relationalExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        shiftExpression shiftExpression478 = null;

        relationalOp relationalOp479 = null;

        shiftExpression shiftExpression480 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:651:5: ( shiftExpression ( relationalOp shiftExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:651:9: shiftExpression ( relationalOp shiftExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_shiftExpression_in_relationalExpression4661);
            shiftExpression478=shiftExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, shiftExpression478.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:651:25: ( relationalOp shiftExpression )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==39) ) {
                    int LA136_23 = input.LA(2);

                    if ( (LA136_23==Identifier||(LA136_23>=FloatingPointLiteral && LA136_23<=DecimalLiteral)||LA136_23==46||LA136_23==50||(LA136_23>=55 && LA136_23<=62)||(LA136_23>=64 && LA136_23<=65)||(LA136_23>=68 && LA136_23<=71)||(LA136_23>=104 && LA136_23<=105)||(LA136_23>=108 && LA136_23<=112)) ) {
                        alt136=1;
                    }


                }
                else if ( (LA136_0==41) ) {
                    int LA136_24 = input.LA(2);

                    if ( (LA136_24==Identifier||(LA136_24>=FloatingPointLiteral && LA136_24<=DecimalLiteral)||LA136_24==46||LA136_24==50||(LA136_24>=55 && LA136_24<=62)||(LA136_24>=64 && LA136_24<=65)||(LA136_24>=68 && LA136_24<=71)||(LA136_24>=104 && LA136_24<=105)||(LA136_24>=108 && LA136_24<=112)) ) {
                        alt136=1;
                    }


                }


                switch (alt136) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:651:27: relationalOp shiftExpression
            	    {
            	    pushFollow(FOLLOW_relationalOp_in_relationalExpression4665);
            	    relationalOp479=relationalOp();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, relationalOp479.getTree());
            	    pushFollow(FOLLOW_shiftExpression_in_relationalExpression4667);
            	    shiftExpression480=shiftExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, shiftExpression480.getTree());

            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 115, relationalExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end relationalExpression

    public static class relationalOp extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start relationalOp
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:654:1: relationalOp : ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' );
    public final relationalOp relationalOp() throws RecognitionException, OMPParserException {
        relationalOp retval = new relationalOp();
        retval.setStart(input.LT(1));
        int relationalOp_StartIndex = input.index();
        OMPTree root_0 = null;

        Token t1=null;
        Token t2=null;
        Token char_literal481=null;
        Token char_literal482=null;

        OMPTree t1_tree=null;
        OMPTree t2_tree=null;
        OMPTree char_literal481_tree=null;
        OMPTree char_literal482_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:655:5: ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' )
            int alt137=4;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==39) ) {
                int LA137_1 = input.LA(2);

                if ( (LA137_1==50) && (synpred213())) {
                    alt137=1;
                }
                else if ( (LA137_1==Identifier||(LA137_1>=FloatingPointLiteral && LA137_1<=DecimalLiteral)||LA137_1==46||(LA137_1>=55 && LA137_1<=62)||(LA137_1>=64 && LA137_1<=65)||(LA137_1>=68 && LA137_1<=71)||(LA137_1>=104 && LA137_1<=105)||(LA137_1>=108 && LA137_1<=112)) ) {
                    alt137=3;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("654:1: relationalOp : ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' );", 137, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA137_0==41) ) {
                int LA137_2 = input.LA(2);

                if ( (LA137_2==50) && (synpred214())) {
                    alt137=2;
                }
                else if ( (LA137_2==Identifier||(LA137_2>=FloatingPointLiteral && LA137_2<=DecimalLiteral)||LA137_2==46||(LA137_2>=55 && LA137_2<=62)||(LA137_2>=64 && LA137_2<=65)||(LA137_2>=68 && LA137_2<=71)||(LA137_2>=104 && LA137_2<=105)||(LA137_2>=108 && LA137_2<=112)) ) {
                    alt137=4;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("654:1: relationalOp : ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' );", 137, 2, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("654:1: relationalOp : ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' );", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:655:9: ( '<' '=' )=>t1= '<' t2= '=' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,39,FOLLOW_39_in_relationalOp4702); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_relationalOp4706); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "relationalOp", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:658:9: ( '>' '=' )=>t1= '>' t2= '=' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_relationalOp4736); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,50,FOLLOW_50_in_relationalOp4740); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "relationalOp", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:661:9: '<'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal481=(Token)input.LT(1);
                    match(input,39,FOLLOW_39_in_relationalOp4761); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal481_tree = (OMPTree)adaptor.create(char_literal481);
                    adaptor.addChild(root_0, char_literal481_tree);
                    }

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:662:9: '>'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal482=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_relationalOp4772); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal482_tree = (OMPTree)adaptor.create(char_literal482);
                    adaptor.addChild(root_0, char_literal482_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 116, relationalOp_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end relationalOp

    public static class shiftExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start shiftExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:665:1: shiftExpression : additiveExpression ( shiftOp additiveExpression )* ;
    public final shiftExpression shiftExpression() throws RecognitionException, OMPParserException {
        shiftExpression retval = new shiftExpression();
        retval.setStart(input.LT(1));
        int shiftExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        additiveExpression additiveExpression483 = null;

        shiftOp shiftOp484 = null;

        additiveExpression additiveExpression485 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:666:5: ( additiveExpression ( shiftOp additiveExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:666:9: additiveExpression ( shiftOp additiveExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_additiveExpression_in_shiftExpression4792);
            additiveExpression483=additiveExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, additiveExpression483.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:666:28: ( shiftOp additiveExpression )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==39) ) {
                    int LA138_1 = input.LA(2);

                    if ( (LA138_1==39) ) {
                        int LA138_74 = input.LA(3);

                        if ( (synpred216()) ) {
                            alt138=1;
                        }


                    }


                }
                else if ( (LA138_0==41) ) {
                    int LA138_2 = input.LA(2);

                    if ( (LA138_2==41) ) {
                        int LA138_95 = input.LA(3);

                        if ( (synpred216()) ) {
                            alt138=1;
                        }


                    }


                }


                switch (alt138) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:666:30: shiftOp additiveExpression
            	    {
            	    pushFollow(FOLLOW_shiftOp_in_shiftExpression4796);
            	    shiftOp484=shiftOp();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, shiftOp484.getTree());
            	    pushFollow(FOLLOW_additiveExpression_in_shiftExpression4798);
            	    additiveExpression485=additiveExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, additiveExpression485.getTree());

            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 117, shiftExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end shiftExpression

    public static class shiftOp extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start shiftOp
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:669:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?);
    public final shiftOp shiftOp() throws RecognitionException, OMPParserException {
        shiftOp retval = new shiftOp();
        retval.setStart(input.LT(1));
        int shiftOp_StartIndex = input.index();
        OMPTree root_0 = null;

        Token t1=null;
        Token t2=null;
        Token t3=null;

        OMPTree t1_tree=null;
        OMPTree t2_tree=null;
        OMPTree t3_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:670:5: ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?)
            int alt139=3;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==39) && (synpred217())) {
                alt139=1;
            }
            else if ( (LA139_0==41) ) {
                int LA139_2 = input.LA(2);

                if ( (LA139_2==41) ) {
                    int LA139_3 = input.LA(3);

                    if ( (synpred218()) ) {
                        alt139=2;
                    }
                    else if ( (synpred219()) ) {
                        alt139=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("669:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?);", 139, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("669:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?);", 139, 2, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("669:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?);", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:670:9: ( '<' '<' )=>t1= '<' t2= '<' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,39,FOLLOW_39_in_shiftOp4829); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,39,FOLLOW_39_in_shiftOp4833); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "shiftOp", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:673:9: ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_shiftOp4865); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_shiftOp4869); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_shiftOp4873); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t3_tree = (OMPTree)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() &&
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "shiftOp", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() &&\n          $t2.getLine() == $t3.getLine() && \n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:678:9: ( '>' '>' )=>t1= '>' t2= '>' {...}?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    t1=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_shiftOp4903); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t1_tree = (OMPTree)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)input.LT(1);
                    match(input,41,FOLLOW_41_in_shiftOp4907); if (failed) return retval;
                    if ( backtracking==0 ) {
                    t2_tree = (OMPTree)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() ) ) {
                        if (backtracking>0) {failed=true; return retval;}
                        throw new FailedPredicateException(input, "shiftOp", " $t1.getLine() == $t2.getLine() && \n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 118, shiftOp_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end shiftOp

    public static class additiveExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start additiveExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:684:1: additiveExpression : multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* ;
    public final additiveExpression additiveExpression() throws RecognitionException, OMPParserException {
        additiveExpression retval = new additiveExpression();
        retval.setStart(input.LT(1));
        int additiveExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set487=null;
        multiplicativeExpression multiplicativeExpression486 = null;

        multiplicativeExpression multiplicativeExpression488 = null;


        OMPTree set487_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:685:5: ( multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:685:9: multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_multiplicativeExpression_in_additiveExpression4937);
            multiplicativeExpression486=multiplicativeExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, multiplicativeExpression486.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:685:34: ( ( '+' | '-' ) multiplicativeExpression )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==104) ) {
                    switch ( input.LA(2) ) {
                    case 104:
                        {
                        int LA140_74 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 105:
                        {
                        int LA140_75 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 108:
                        {
                        int LA140_76 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 109:
                        {
                        int LA140_77 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 110:
                        {
                        int LA140_78 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 111:
                        {
                        int LA140_79 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 65:
                        {
                        int LA140_80 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 68:
                        {
                        int LA140_81 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 64:
                        {
                        int LA140_82 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case HexLiteral:
                    case OctalLiteral:
                    case DecimalLiteral:
                        {
                        int LA140_83 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case FloatingPointLiteral:
                        {
                        int LA140_84 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case CharacterLiteral:
                        {
                        int LA140_85 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case StringLiteral:
                        {
                        int LA140_86 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 70:
                    case 71:
                        {
                        int LA140_87 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 69:
                        {
                        int LA140_88 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 112:
                        {
                        int LA140_89 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case Identifier:
                        {
                        int LA140_90 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        int LA140_91 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 46:
                        {
                        int LA140_92 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;

                    }

                }
                else if ( (LA140_0==105) ) {
                    switch ( input.LA(2) ) {
                    case 104:
                        {
                        int LA140_93 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 105:
                        {
                        int LA140_94 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 108:
                        {
                        int LA140_95 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 109:
                        {
                        int LA140_96 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 110:
                        {
                        int LA140_97 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 111:
                        {
                        int LA140_98 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 65:
                        {
                        int LA140_99 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 68:
                        {
                        int LA140_100 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 64:
                        {
                        int LA140_101 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case HexLiteral:
                    case OctalLiteral:
                    case DecimalLiteral:
                        {
                        int LA140_102 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case FloatingPointLiteral:
                        {
                        int LA140_103 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case CharacterLiteral:
                        {
                        int LA140_104 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case StringLiteral:
                        {
                        int LA140_105 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 70:
                    case 71:
                        {
                        int LA140_106 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 69:
                        {
                        int LA140_107 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 112:
                        {
                        int LA140_108 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case Identifier:
                        {
                        int LA140_109 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        int LA140_110 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;
                    case 46:
                        {
                        int LA140_111 = input.LA(3);

                        if ( (synpred221()) ) {
                            alt140=1;
                        }


                        }
                        break;

                    }

                }


                switch (alt140) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:685:36: ( '+' | '-' ) multiplicativeExpression
            	    {
            	    set487=(Token)input.LT(1);
            	    if ( (input.LA(1)>=104 && input.LA(1)<=105) ) {
            	        input.consume();
            	        if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set487));
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_additiveExpression4941);    throw mse;
            	    }

            	    pushFollow(FOLLOW_multiplicativeExpression_in_additiveExpression4949);
            	    multiplicativeExpression488=multiplicativeExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, multiplicativeExpression488.getTree());

            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 119, additiveExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end additiveExpression

    public static class multiplicativeExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start multiplicativeExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:688:1: multiplicativeExpression : unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* ;
    public final multiplicativeExpression multiplicativeExpression() throws RecognitionException, OMPParserException {
        multiplicativeExpression retval = new multiplicativeExpression();
        retval.setStart(input.LT(1));
        int multiplicativeExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set490=null;
        unaryExpression unaryExpression489 = null;

        unaryExpression unaryExpression491 = null;


        OMPTree set490_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:689:5: ( unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:689:9: unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )*
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression4971);
            unaryExpression489=unaryExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression489.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:689:25: ( ( '*' | '/' | '%' ) unaryExpression )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==29||(LA141_0>=106 && LA141_0<=107)) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:689:27: ( '*' | '/' | '%' ) unaryExpression
            	    {
            	    set490=(Token)input.LT(1);
            	    if ( input.LA(1)==29||(input.LA(1)>=106 && input.LA(1)<=107) ) {
            	        input.consume();
            	        if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set490));
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_multiplicativeExpression4975);    throw mse;
            	    }

            	    pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression4989);
            	    unaryExpression491=unaryExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression491.getTree());

            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 120, multiplicativeExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end multiplicativeExpression

    public static class unaryExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start unaryExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:692:1: unaryExpression : ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus );
    public final unaryExpression unaryExpression() throws RecognitionException, OMPParserException {
        unaryExpression retval = new unaryExpression();
        retval.setStart(input.LT(1));
        int unaryExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal492=null;
        Token char_literal494=null;
        Token string_literal496=null;
        Token string_literal498=null;
        unaryExpression unaryExpression493 = null;

        unaryExpression unaryExpression495 = null;

        unaryExpression unaryExpression497 = null;

        unaryExpression unaryExpression499 = null;

        unaryExpressionNotPlusMinus unaryExpressionNotPlusMinus500 = null;


        OMPTree char_literal492_tree=null;
        OMPTree char_literal494_tree=null;
        OMPTree string_literal496_tree=null;
        OMPTree string_literal498_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:693:5: ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus )
            int alt142=5;
            switch ( input.LA(1) ) {
            case 104:
                {
                alt142=1;
                }
                break;
            case 105:
                {
                alt142=2;
                }
                break;
            case 108:
                {
                alt142=3;
                }
                break;
            case 109:
                {
                alt142=4;
                }
                break;
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 46:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 110:
            case 111:
            case 112:
                {
                alt142=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("692:1: unaryExpression : ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus );", 142, 0, input);

                throw nvae;
            }

            switch (alt142) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:693:9: '+' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal492=(Token)input.LT(1);
                    match(input,104,FOLLOW_104_in_unaryExpression5015); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal492_tree = (OMPTree)adaptor.create(char_literal492);
                    adaptor.addChild(root_0, char_literal492_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression5017);
                    unaryExpression493=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression493.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:694:9: '-' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal494=(Token)input.LT(1);
                    match(input,105,FOLLOW_105_in_unaryExpression5027); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal494_tree = (OMPTree)adaptor.create(char_literal494);
                    adaptor.addChild(root_0, char_literal494_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression5029);
                    unaryExpression495=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression495.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:695:9: '++' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal496=(Token)input.LT(1);
                    match(input,108,FOLLOW_108_in_unaryExpression5039); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal496_tree = (OMPTree)adaptor.create(string_literal496);
                    adaptor.addChild(root_0, string_literal496_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression5041);
                    unaryExpression497=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression497.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:696:9: '--' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal498=(Token)input.LT(1);
                    match(input,109,FOLLOW_109_in_unaryExpression5051); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal498_tree = (OMPTree)adaptor.create(string_literal498);
                    adaptor.addChild(root_0, string_literal498_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression5053);
                    unaryExpression499=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression499.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:697:9: unaryExpressionNotPlusMinus
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression5063);
                    unaryExpressionNotPlusMinus500=unaryExpressionNotPlusMinus();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpressionNotPlusMinus500.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 121, unaryExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end unaryExpression

    public static class unaryExpressionNotPlusMinus extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start unaryExpressionNotPlusMinus
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );
    public final unaryExpressionNotPlusMinus unaryExpressionNotPlusMinus() throws RecognitionException, OMPParserException {
        unaryExpressionNotPlusMinus retval = new unaryExpressionNotPlusMinus();
        retval.setStart(input.LT(1));
        int unaryExpressionNotPlusMinus_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal501=null;
        Token char_literal503=null;
        Token set508=null;
        unaryExpression unaryExpression502 = null;

        unaryExpression unaryExpression504 = null;

        castExpression castExpression505 = null;

        primary primary506 = null;

        selector selector507 = null;


        OMPTree char_literal501_tree=null;
        OMPTree char_literal503_tree=null;
        OMPTree set508_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:701:5: ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? )
            int alt145=4;
            switch ( input.LA(1) ) {
            case 110:
                {
                alt145=1;
                }
                break;
            case 111:
                {
                alt145=2;
                }
                break;
            case 65:
                {
                switch ( input.LA(2) ) {
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA145_16 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 16, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                    {
                    int LA145_17 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 17, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA145_18 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 18, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA145_19 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 19, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA145_20 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 20, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA145_21 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 21, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA145_22 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 22, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA145_23 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 23, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA145_24 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 24, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA145_25 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 25, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA145_26 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 26, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA145_27 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 27, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA145_28 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 28, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA145_29 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 29, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA145_30 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 30, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA145_31 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 31, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA145_32 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 32, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA145_33 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 33, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA145_34 = input.LA(3);

                    if ( (synpred231()) ) {
                        alt145=3;
                    }
                    else if ( (true) ) {
                        alt145=4;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 34, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 3, input);

                    throw nvae;
                }

                }
                break;
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 46:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 64:
            case 68:
            case 69:
            case 70:
            case 71:
            case 112:
                {
                alt145=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("700:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );", 145, 0, input);

                throw nvae;
            }

            switch (alt145) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:701:9: '~' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal501=(Token)input.LT(1);
                    match(input,110,FOLLOW_110_in_unaryExpressionNotPlusMinus5082); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal501_tree = (OMPTree)adaptor.create(char_literal501);
                    adaptor.addChild(root_0, char_literal501_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus5084);
                    unaryExpression502=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression502.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:702:9: '!' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal503=(Token)input.LT(1);
                    match(input,111,FOLLOW_111_in_unaryExpressionNotPlusMinus5094); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal503_tree = (OMPTree)adaptor.create(char_literal503);
                    adaptor.addChild(root_0, char_literal503_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus5096);
                    unaryExpression504=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression504.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:703:9: castExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_castExpression_in_unaryExpressionNotPlusMinus5106);
                    castExpression505=castExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, castExpression505.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:704:9: primary ( selector )* ( '++' | '--' )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_primary_in_unaryExpressionNotPlusMinus5116);
                    primary506=primary();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, primary506.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:704:17: ( selector )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==28||LA143_0==47) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: selector
                    	    {
                    	    pushFollow(FOLLOW_selector_in_unaryExpressionNotPlusMinus5118);
                    	    selector507=selector();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, selector507.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:704:27: ( '++' | '--' )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==108) ) {
                        switch ( input.LA(2) ) {
                            case 104:
                                {
                                alt144=1;
                                }
                                break;
                            case 105:
                                {
                                alt144=1;
                                }
                                break;
                            case 108:
                                {
                                alt144=1;
                                }
                                break;
                            case 109:
                                {
                                alt144=1;
                                }
                                break;
                            case 110:
                                {
                                alt144=1;
                                }
                                break;
                            case 111:
                                {
                                alt144=1;
                                }
                                break;
                            case 65:
                                {
                                alt144=1;
                                }
                                break;
                            case 68:
                                {
                                alt144=1;
                                }
                                break;
                            case 64:
                                {
                                alt144=1;
                                }
                                break;
                            case HexLiteral:
                            case OctalLiteral:
                            case DecimalLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case FloatingPointLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case CharacterLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case StringLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case 70:
                            case 71:
                                {
                                alt144=1;
                                }
                                break;
                            case 69:
                                {
                                alt144=1;
                                }
                                break;
                            case 112:
                                {
                                alt144=1;
                                }
                                break;
                            case EOF:
                            case Identifier:
                            case ENUM:
                            case ASSERT:
                            case 25:
                            case 27:
                            case 29:
                            case 30:
                            case 31:
                            case 32:
                            case 33:
                            case 34:
                            case 35:
                            case 36:
                            case 39:
                            case 40:
                            case 41:
                            case 42:
                            case 43:
                            case 44:
                            case 45:
                            case 48:
                            case 50:
                            case 52:
                            case 63:
                            case 66:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 82:
                            case 83:
                            case 84:
                            case 85:
                            case 86:
                            case 88:
                            case 89:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 95:
                            case 96:
                            case 97:
                            case 98:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 103:
                            case 106:
                            case 107:
                            case 113:
                                {
                                alt144=1;
                                }
                                break;
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                                {
                                alt144=1;
                                }
                                break;
                            case 46:
                                {
                                alt144=1;
                                }
                                break;
                        }

                    }
                    else if ( (LA144_0==109) ) {
                        switch ( input.LA(2) ) {
                            case 104:
                                {
                                alt144=1;
                                }
                                break;
                            case 105:
                                {
                                alt144=1;
                                }
                                break;
                            case 108:
                                {
                                alt144=1;
                                }
                                break;
                            case 109:
                                {
                                alt144=1;
                                }
                                break;
                            case 110:
                                {
                                alt144=1;
                                }
                                break;
                            case 111:
                                {
                                alt144=1;
                                }
                                break;
                            case 65:
                                {
                                alt144=1;
                                }
                                break;
                            case 68:
                                {
                                alt144=1;
                                }
                                break;
                            case 64:
                                {
                                alt144=1;
                                }
                                break;
                            case HexLiteral:
                            case OctalLiteral:
                            case DecimalLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case FloatingPointLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case CharacterLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case StringLiteral:
                                {
                                alt144=1;
                                }
                                break;
                            case 70:
                            case 71:
                                {
                                alt144=1;
                                }
                                break;
                            case 69:
                                {
                                alt144=1;
                                }
                                break;
                            case 112:
                                {
                                alt144=1;
                                }
                                break;
                            case EOF:
                            case Identifier:
                            case ENUM:
                            case ASSERT:
                            case 25:
                            case 27:
                            case 29:
                            case 30:
                            case 31:
                            case 32:
                            case 33:
                            case 34:
                            case 35:
                            case 36:
                            case 39:
                            case 40:
                            case 41:
                            case 42:
                            case 43:
                            case 44:
                            case 45:
                            case 48:
                            case 50:
                            case 52:
                            case 63:
                            case 66:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 82:
                            case 83:
                            case 84:
                            case 85:
                            case 86:
                            case 88:
                            case 89:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 95:
                            case 96:
                            case 97:
                            case 98:
                            case 99:
                            case 100:
                            case 101:
                            case 102:
                            case 103:
                            case 106:
                            case 107:
                            case 113:
                                {
                                alt144=1;
                                }
                                break;
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                                {
                                alt144=1;
                                }
                                break;
                            case 46:
                                {
                                alt144=1;
                                }
                                break;
                        }

                    }
                    switch (alt144) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:
                            {
                            set508=(Token)input.LT(1);
                            if ( (input.LA(1)>=108 && input.LA(1)<=109) ) {
                                input.consume();
                                if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set508));
                                errorRecovery=false;failed=false;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                MismatchedSetException mse =
                                    new MismatchedSetException(null,input);
                                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_unaryExpressionNotPlusMinus5121);    throw mse;
                            }


                            }
                            break;

                    }


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 122, unaryExpressionNotPlusMinus_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end unaryExpressionNotPlusMinus

    public static class castExpression extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start castExpression
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:707:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus );
    public final castExpression castExpression() throws RecognitionException, OMPParserException {
        castExpression retval = new castExpression();
        retval.setStart(input.LT(1));
        int castExpression_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal509=null;
        Token char_literal511=null;
        Token char_literal513=null;
        Token char_literal516=null;
        primitiveType primitiveType510 = null;

        unaryExpression unaryExpression512 = null;

        type type514 = null;

        expression expression515 = null;

        unaryExpressionNotPlusMinus unaryExpressionNotPlusMinus517 = null;


        OMPTree char_literal509_tree=null;
        OMPTree char_literal511_tree=null;
        OMPTree char_literal513_tree=null;
        OMPTree char_literal516_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:708:5: ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==65) ) {
                int LA147_1 = input.LA(2);

                if ( (LA147_1==Identifier||(LA147_1>=FloatingPointLiteral && LA147_1<=DecimalLiteral)||LA147_1==46||(LA147_1>=64 && LA147_1<=65)||(LA147_1>=68 && LA147_1<=71)||(LA147_1>=104 && LA147_1<=105)||(LA147_1>=108 && LA147_1<=112)) ) {
                    alt147=2;
                }
                else if ( ((LA147_1>=55 && LA147_1<=62)) ) {
                    int LA147_3 = input.LA(3);

                    if ( (synpred235()) ) {
                        alt147=1;
                    }
                    else if ( (true) ) {
                        alt147=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("707:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus );", 147, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("707:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus );", 147, 1, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("707:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus );", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:708:8: '(' primitiveType ')' unaryExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal509=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_castExpression5144); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal509_tree = (OMPTree)adaptor.create(char_literal509);
                    adaptor.addChild(root_0, char_literal509_tree);
                    }
                    pushFollow(FOLLOW_primitiveType_in_castExpression5146);
                    primitiveType510=primitiveType();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, primitiveType510.getTree());
                    char_literal511=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_castExpression5148); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal511_tree = (OMPTree)adaptor.create(char_literal511);
                    adaptor.addChild(root_0, char_literal511_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_castExpression5150);
                    unaryExpression512=unaryExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpression512.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:709:8: '(' ( type | expression ) ')' unaryExpressionNotPlusMinus
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal513=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_castExpression5159); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal513_tree = (OMPTree)adaptor.create(char_literal513);
                    adaptor.addChild(root_0, char_literal513_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:709:12: ( type | expression )
                    int alt146=2;
                    switch ( input.LA(1) ) {
                    case Identifier:
                        {
                        int LA146_1 = input.LA(2);

                        if ( (synpred236()) ) {
                            alt146=1;
                        }
                        else if ( (true) ) {
                            alt146=2;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("709:12: ( type | expression )", 146, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        switch ( input.LA(2) ) {
                        case 47:
                            {
                            int LA146_47 = input.LA(3);

                            if ( (synpred236()) ) {
                                alt146=1;
                            }
                            else if ( (true) ) {
                                alt146=2;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("709:12: ( type | expression )", 146, 47, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 28:
                            {
                            alt146=2;
                            }
                            break;
                        case 66:
                            {
                            alt146=1;
                            }
                            break;
                        default:
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("709:12: ( type | expression )", 146, 2, input);

                            throw nvae;
                        }

                        }
                        break;
                    case FloatingPointLiteral:
                    case CharacterLiteral:
                    case StringLiteral:
                    case HexLiteral:
                    case OctalLiteral:
                    case DecimalLiteral:
                    case 46:
                    case 64:
                    case 65:
                    case 68:
                    case 69:
                    case 70:
                    case 71:
                    case 104:
                    case 105:
                    case 108:
                    case 109:
                    case 110:
                    case 111:
                    case 112:
                        {
                        alt146=2;
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("709:12: ( type | expression )", 146, 0, input);

                        throw nvae;
                    }

                    switch (alt146) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:709:13: type
                            {
                            pushFollow(FOLLOW_type_in_castExpression5162);
                            type514=type();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, type514.getTree());

                            }
                            break;
                        case 2 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:709:20: expression
                            {
                            pushFollow(FOLLOW_expression_in_castExpression5166);
                            expression515=expression();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, expression515.getTree());

                            }
                            break;

                    }

                    char_literal516=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_castExpression5169); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal516_tree = (OMPTree)adaptor.create(char_literal516);
                    adaptor.addChild(root_0, char_literal516_tree);
                    }
                    pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_castExpression5171);
                    unaryExpressionNotPlusMinus517=unaryExpressionNotPlusMinus();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, unaryExpressionNotPlusMinus517.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 123, castExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end castExpression

    public static class primary extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start primary
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:712:1: primary : ( parExpression | 'this' ( '.' Identifier )* ( identifierSuffix )? | 'super' superSuffix | literal | 'new' creator | Identifier ( '.' Identifier )* ( identifierSuffix )? | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' );
    public final primary primary() throws RecognitionException, OMPParserException {
        primary retval = new primary();
        retval.setStart(input.LT(1));
        int primary_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal519=null;
        Token char_literal520=null;
        Token Identifier521=null;
        Token string_literal523=null;
        Token string_literal526=null;
        Token Identifier528=null;
        Token char_literal529=null;
        Token Identifier530=null;
        Token char_literal533=null;
        Token char_literal534=null;
        Token char_literal535=null;
        Token string_literal536=null;
        Token string_literal537=null;
        Token char_literal538=null;
        Token string_literal539=null;
        parExpression parExpression518 = null;

        identifierSuffix identifierSuffix522 = null;

        superSuffix superSuffix524 = null;

        literal literal525 = null;

        creator creator527 = null;

        identifierSuffix identifierSuffix531 = null;

        primitiveType primitiveType532 = null;


        OMPTree string_literal519_tree=null;
        OMPTree char_literal520_tree=null;
        OMPTree Identifier521_tree=null;
        OMPTree string_literal523_tree=null;
        OMPTree string_literal526_tree=null;
        OMPTree Identifier528_tree=null;
        OMPTree char_literal529_tree=null;
        OMPTree Identifier530_tree=null;
        OMPTree char_literal533_tree=null;
        OMPTree char_literal534_tree=null;
        OMPTree char_literal535_tree=null;
        OMPTree string_literal536_tree=null;
        OMPTree string_literal537_tree=null;
        OMPTree char_literal538_tree=null;
        OMPTree string_literal539_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:713:5: ( parExpression | 'this' ( '.' Identifier )* ( identifierSuffix )? | 'super' superSuffix | literal | 'new' creator | Identifier ( '.' Identifier )* ( identifierSuffix )? | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' )
            int alt153=8;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt153=1;
                }
                break;
            case 68:
                {
                alt153=2;
                }
                break;
            case 64:
                {
                alt153=3;
                }
                break;
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case 69:
            case 70:
            case 71:
                {
                alt153=4;
                }
                break;
            case 112:
                {
                alt153=5;
                }
                break;
            case Identifier:
                {
                alt153=6;
                }
                break;
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                alt153=7;
                }
                break;
            case 46:
                {
                alt153=8;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("712:1: primary : ( parExpression | 'this' ( '.' Identifier )* ( identifierSuffix )? | 'super' superSuffix | literal | 'new' creator | Identifier ( '.' Identifier )* ( identifierSuffix )? | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' );", 153, 0, input);

                throw nvae;
            }

            switch (alt153) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:713:9: parExpression
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_parExpression_in_primary5190);
                    parExpression518=parExpression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parExpression518.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:9: 'this' ( '.' Identifier )* ( identifierSuffix )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal519=(Token)input.LT(1);
                    match(input,68,FOLLOW_68_in_primary5200); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal519_tree = (OMPTree)adaptor.create(string_literal519);
                    adaptor.addChild(root_0, string_literal519_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:16: ( '.' Identifier )*
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==28) ) {
                            int LA148_3 = input.LA(2);

                            if ( (LA148_3==Identifier) ) {
                                int LA148_77 = input.LA(3);

                                if ( (synpred238()) ) {
                                    alt148=1;
                                }


                            }


                        }


                        switch (alt148) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:17: '.' Identifier
                    	    {
                    	    char_literal520=(Token)input.LT(1);
                    	    match(input,28,FOLLOW_28_in_primary5203); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal520_tree = (OMPTree)adaptor.create(char_literal520);
                    	    adaptor.addChild(root_0, char_literal520_tree);
                    	    }
                    	    Identifier521=(Token)input.LT(1);
                    	    match(input,Identifier,FOLLOW_Identifier_in_primary5205); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    Identifier521_tree = (OMPTree)adaptor.create(Identifier521);
                    	    adaptor.addChild(root_0, Identifier521_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop148;
                        }
                    } while (true);

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:34: ( identifierSuffix )?
                    int alt149=2;
                    switch ( input.LA(1) ) {
                        case 47:
                            {
                            switch ( input.LA(2) ) {
                                case 48:
                                    {
                                    alt149=1;
                                    }
                                    break;
                                case 104:
                                    {
                                    int LA149_78 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 105:
                                    {
                                    int LA149_79 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 108:
                                    {
                                    int LA149_80 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 109:
                                    {
                                    int LA149_81 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 110:
                                    {
                                    int LA149_82 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 111:
                                    {
                                    int LA149_83 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 65:
                                    {
                                    int LA149_84 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 68:
                                    {
                                    int LA149_85 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 64:
                                    {
                                    int LA149_86 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case HexLiteral:
                                case OctalLiteral:
                                case DecimalLiteral:
                                    {
                                    int LA149_87 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case FloatingPointLiteral:
                                    {
                                    int LA149_88 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case CharacterLiteral:
                                    {
                                    int LA149_89 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case StringLiteral:
                                    {
                                    int LA149_90 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 70:
                                case 71:
                                    {
                                    int LA149_91 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 69:
                                    {
                                    int LA149_92 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 112:
                                    {
                                    int LA149_93 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case Identifier:
                                    {
                                    int LA149_94 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 55:
                                case 56:
                                case 57:
                                case 58:
                                case 59:
                                case 60:
                                case 61:
                                case 62:
                                    {
                                    int LA149_95 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 46:
                                    {
                                    int LA149_96 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                            }

                            }
                            break;
                        case 65:
                            {
                            switch ( input.LA(2) ) {
                                case 104:
                                    {
                                    int LA149_97 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 105:
                                    {
                                    int LA149_98 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 108:
                                    {
                                    int LA149_99 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 109:
                                    {
                                    int LA149_100 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 110:
                                    {
                                    int LA149_101 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 111:
                                    {
                                    int LA149_102 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 65:
                                    {
                                    int LA149_103 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 68:
                                    {
                                    int LA149_104 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 64:
                                    {
                                    int LA149_105 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case HexLiteral:
                                case OctalLiteral:
                                case DecimalLiteral:
                                    {
                                    int LA149_106 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case FloatingPointLiteral:
                                    {
                                    int LA149_107 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case CharacterLiteral:
                                    {
                                    int LA149_108 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case StringLiteral:
                                    {
                                    int LA149_109 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 70:
                                case 71:
                                    {
                                    int LA149_110 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 69:
                                    {
                                    int LA149_111 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 112:
                                    {
                                    int LA149_112 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case Identifier:
                                    {
                                    int LA149_113 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 55:
                                case 56:
                                case 57:
                                case 58:
                                case 59:
                                case 60:
                                case 61:
                                case 62:
                                    {
                                    int LA149_114 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 46:
                                    {
                                    int LA149_115 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 66:
                                    {
                                    alt149=1;
                                    }
                                    break;
                            }

                            }
                            break;
                        case 28:
                            {
                            switch ( input.LA(2) ) {
                                case 68:
                                    {
                                    int LA149_118 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 64:
                                    {
                                    int LA149_119 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 112:
                                    {
                                    int LA149_120 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                                case 36:
                                    {
                                    alt149=1;
                                    }
                                    break;
                                case 39:
                                    {
                                    int LA149_122 = input.LA(3);

                                    if ( (synpred239()) ) {
                                        alt149=1;
                                    }
                                    }
                                    break;
                            }

                            }
                            break;
                    }

                    switch (alt149) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:35: identifierSuffix
                            {
                            pushFollow(FOLLOW_identifierSuffix_in_primary5210);
                            identifierSuffix522=identifierSuffix();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, identifierSuffix522.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:715:9: 'super' superSuffix
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal523=(Token)input.LT(1);
                    match(input,64,FOLLOW_64_in_primary5222); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal523_tree = (OMPTree)adaptor.create(string_literal523);
                    adaptor.addChild(root_0, string_literal523_tree);
                    }
                    pushFollow(FOLLOW_superSuffix_in_primary5224);
                    superSuffix524=superSuffix();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, superSuffix524.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:716:9: literal
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_literal_in_primary5234);
                    literal525=literal();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, literal525.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:717:9: 'new' creator
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal526=(Token)input.LT(1);
                    match(input,112,FOLLOW_112_in_primary5244); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal526_tree = (OMPTree)adaptor.create(string_literal526);
                    adaptor.addChild(root_0, string_literal526_tree);
                    }
                    pushFollow(FOLLOW_creator_in_primary5246);
                    creator527=creator();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, creator527.getTree());

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:9: Identifier ( '.' Identifier )* ( identifierSuffix )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    Identifier528=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_primary5256); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier528_tree = (OMPTree)adaptor.create(Identifier528);
                    adaptor.addChild(root_0, Identifier528_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:20: ( '.' Identifier )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==28) ) {
                            int LA150_3 = input.LA(2);

                            if ( (LA150_3==Identifier) ) {
                                int LA150_79 = input.LA(3);

                                if ( (synpred244()) ) {
                                    alt150=1;
                                }


                            }


                        }


                        switch (alt150) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:21: '.' Identifier
                    	    {
                    	    char_literal529=(Token)input.LT(1);
                    	    match(input,28,FOLLOW_28_in_primary5259); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal529_tree = (OMPTree)adaptor.create(char_literal529);
                    	    adaptor.addChild(root_0, char_literal529_tree);
                    	    }
                    	    Identifier530=(Token)input.LT(1);
                    	    match(input,Identifier,FOLLOW_Identifier_in_primary5261); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    Identifier530_tree = (OMPTree)adaptor.create(Identifier530);
                    	    adaptor.addChild(root_0, Identifier530_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:38: ( identifierSuffix )?
                    int alt151=2;
                    switch ( input.LA(1) ) {
                        case 47:
                            {
                            switch ( input.LA(2) ) {
                                case 48:
                                    {
                                    alt151=1;
                                    }
                                    break;
                                case 104:
                                    {
                                    int LA151_78 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 105:
                                    {
                                    int LA151_79 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 108:
                                    {
                                    int LA151_80 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 109:
                                    {
                                    int LA151_81 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 110:
                                    {
                                    int LA151_82 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 111:
                                    {
                                    int LA151_83 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 65:
                                    {
                                    int LA151_84 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 68:
                                    {
                                    int LA151_85 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 64:
                                    {
                                    int LA151_86 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case HexLiteral:
                                case OctalLiteral:
                                case DecimalLiteral:
                                    {
                                    int LA151_87 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case FloatingPointLiteral:
                                    {
                                    int LA151_88 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case CharacterLiteral:
                                    {
                                    int LA151_89 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case StringLiteral:
                                    {
                                    int LA151_90 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 70:
                                case 71:
                                    {
                                    int LA151_91 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 69:
                                    {
                                    int LA151_92 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 112:
                                    {
                                    int LA151_93 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case Identifier:
                                    {
                                    int LA151_94 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 55:
                                case 56:
                                case 57:
                                case 58:
                                case 59:
                                case 60:
                                case 61:
                                case 62:
                                    {
                                    int LA151_95 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 46:
                                    {
                                    int LA151_96 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                            }

                            }
                            break;
                        case 65:
                            {
                            switch ( input.LA(2) ) {
                                case 104:
                                    {
                                    int LA151_97 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 105:
                                    {
                                    int LA151_98 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 108:
                                    {
                                    int LA151_99 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 109:
                                    {
                                    int LA151_100 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 110:
                                    {
                                    int LA151_101 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 111:
                                    {
                                    int LA151_102 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 65:
                                    {
                                    int LA151_103 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 68:
                                    {
                                    int LA151_104 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 64:
                                    {
                                    int LA151_105 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case HexLiteral:
                                case OctalLiteral:
                                case DecimalLiteral:
                                    {
                                    int LA151_106 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case FloatingPointLiteral:
                                    {
                                    int LA151_107 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case CharacterLiteral:
                                    {
                                    int LA151_108 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case StringLiteral:
                                    {
                                    int LA151_109 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 70:
                                case 71:
                                    {
                                    int LA151_110 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 69:
                                    {
                                    int LA151_111 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 112:
                                    {
                                    int LA151_112 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case Identifier:
                                    {
                                    int LA151_113 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 55:
                                case 56:
                                case 57:
                                case 58:
                                case 59:
                                case 60:
                                case 61:
                                case 62:
                                    {
                                    int LA151_114 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 46:
                                    {
                                    int LA151_115 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 66:
                                    {
                                    alt151=1;
                                    }
                                    break;
                            }

                            }
                            break;
                        case 28:
                            {
                            switch ( input.LA(2) ) {
                                case 64:
                                    {
                                    int LA151_117 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 112:
                                    {
                                    int LA151_118 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 68:
                                    {
                                    int LA151_120 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                                case 36:
                                    {
                                    alt151=1;
                                    }
                                    break;
                                case 39:
                                    {
                                    int LA151_122 = input.LA(3);

                                    if ( (synpred245()) ) {
                                        alt151=1;
                                    }
                                    }
                                    break;
                            }

                            }
                            break;
                    }

                    switch (alt151) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:39: identifierSuffix
                            {
                            pushFollow(FOLLOW_identifierSuffix_in_primary5266);
                            identifierSuffix531=identifierSuffix();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, identifierSuffix531.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:719:9: primitiveType ( '[' ']' )* '.' 'class'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_primitiveType_in_primary5278);
                    primitiveType532=primitiveType();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, primitiveType532.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:719:23: ( '[' ']' )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==47) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:719:24: '[' ']'
                    	    {
                    	    char_literal533=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_primary5281); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal533_tree = (OMPTree)adaptor.create(char_literal533);
                    	    adaptor.addChild(root_0, char_literal533_tree);
                    	    }
                    	    char_literal534=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_primary5283); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal534_tree = (OMPTree)adaptor.create(char_literal534);
                    	    adaptor.addChild(root_0, char_literal534_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);

                    char_literal535=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_primary5287); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal535_tree = (OMPTree)adaptor.create(char_literal535);
                    adaptor.addChild(root_0, char_literal535_tree);
                    }
                    string_literal536=(Token)input.LT(1);
                    match(input,36,FOLLOW_36_in_primary5289); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal536_tree = (OMPTree)adaptor.create(string_literal536);
                    adaptor.addChild(root_0, string_literal536_tree);
                    }

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:720:9: 'void' '.' 'class'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal537=(Token)input.LT(1);
                    match(input,46,FOLLOW_46_in_primary5299); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal537_tree = (OMPTree)adaptor.create(string_literal537);
                    adaptor.addChild(root_0, string_literal537_tree);
                    }
                    char_literal538=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_primary5301); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal538_tree = (OMPTree)adaptor.create(char_literal538);
                    adaptor.addChild(root_0, char_literal538_tree);
                    }
                    string_literal539=(Token)input.LT(1);
                    match(input,36,FOLLOW_36_in_primary5303); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal539_tree = (OMPTree)adaptor.create(string_literal539);
                    adaptor.addChild(root_0, string_literal539_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 124, primary_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end primary

    public static class identifierSuffix extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start identifierSuffix
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:723:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator );
    public final identifierSuffix identifierSuffix() throws RecognitionException, OMPParserException {
        identifierSuffix retval = new identifierSuffix();
        retval.setStart(input.LT(1));
        int identifierSuffix_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal540=null;
        Token char_literal541=null;
        Token char_literal542=null;
        Token string_literal543=null;
        Token char_literal544=null;
        Token char_literal546=null;
        Token char_literal548=null;
        Token string_literal549=null;
        Token char_literal550=null;
        Token char_literal552=null;
        Token string_literal553=null;
        Token char_literal554=null;
        Token string_literal555=null;
        Token char_literal557=null;
        Token string_literal558=null;
        expression expression545 = null;

        arguments arguments547 = null;

        explicitGenericInvocation explicitGenericInvocation551 = null;

        arguments arguments556 = null;

        innerCreator innerCreator559 = null;


        OMPTree char_literal540_tree=null;
        OMPTree char_literal541_tree=null;
        OMPTree char_literal542_tree=null;
        OMPTree string_literal543_tree=null;
        OMPTree char_literal544_tree=null;
        OMPTree char_literal546_tree=null;
        OMPTree char_literal548_tree=null;
        OMPTree string_literal549_tree=null;
        OMPTree char_literal550_tree=null;
        OMPTree char_literal552_tree=null;
        OMPTree string_literal553_tree=null;
        OMPTree char_literal554_tree=null;
        OMPTree string_literal555_tree=null;
        OMPTree char_literal557_tree=null;
        OMPTree string_literal558_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:724:5: ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator )
            int alt156=8;
            switch ( input.LA(1) ) {
            case 47:
                {
                int LA156_1 = input.LA(2);

                if ( (LA156_1==48) ) {
                    alt156=1;
                }
                else if ( (LA156_1==Identifier||(LA156_1>=FloatingPointLiteral && LA156_1<=DecimalLiteral)||LA156_1==46||(LA156_1>=55 && LA156_1<=62)||(LA156_1>=64 && LA156_1<=65)||(LA156_1>=68 && LA156_1<=71)||(LA156_1>=104 && LA156_1<=105)||(LA156_1>=108 && LA156_1<=112)) ) {
                    alt156=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("723:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator );", 156, 1, input);

                    throw nvae;
                }
                }
                break;
            case 65:
                {
                alt156=3;
                }
                break;
            case 28:
                {
                switch ( input.LA(2) ) {
                case 36:
                    {
                    alt156=4;
                    }
                    break;
                case 68:
                    {
                    alt156=6;
                    }
                    break;
                case 64:
                    {
                    alt156=7;
                    }
                    break;
                case 112:
                    {
                    alt156=8;
                    }
                    break;
                case 39:
                    {
                    alt156=5;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("723:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator );", 156, 3, input);

                    throw nvae;
                }

                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("723:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator );", 156, 0, input);

                throw nvae;
            }

            switch (alt156) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:724:9: ( '[' ']' )+ '.' 'class'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:724:9: ( '[' ']' )+
                    int cnt154=0;
                    loop154:
                    do {
                        int alt154=2;
                        int LA154_0 = input.LA(1);

                        if ( (LA154_0==47) ) {
                            alt154=1;
                        }


                        switch (alt154) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:724:10: '[' ']'
                    	    {
                    	    char_literal540=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_identifierSuffix5323); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal540_tree = (OMPTree)adaptor.create(char_literal540);
                    	    adaptor.addChild(root_0, char_literal540_tree);
                    	    }
                    	    char_literal541=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_identifierSuffix5325); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal541_tree = (OMPTree)adaptor.create(char_literal541);
                    	    adaptor.addChild(root_0, char_literal541_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt154 >= 1 ) break loop154;
                    	    if (backtracking>0) {failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(154, input);
                                throw eee;
                        }
                        cnt154++;
                    } while (true);

                    char_literal542=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_identifierSuffix5329); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal542_tree = (OMPTree)adaptor.create(char_literal542);
                    adaptor.addChild(root_0, char_literal542_tree);
                    }
                    string_literal543=(Token)input.LT(1);
                    match(input,36,FOLLOW_36_in_identifierSuffix5331); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal543_tree = (OMPTree)adaptor.create(string_literal543);
                    adaptor.addChild(root_0, string_literal543_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:725:9: ( '[' expression ']' )+
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:725:9: ( '[' expression ']' )+
                    int cnt155=0;
                    loop155:
                    do {
                        int alt155=2;
                        int LA155_0 = input.LA(1);

                        if ( (LA155_0==47) ) {
                            switch ( input.LA(2) ) {
                            case 104:
                                {
                                int LA155_77 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 105:
                                {
                                int LA155_78 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 108:
                                {
                                int LA155_79 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 109:
                                {
                                int LA155_80 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 110:
                                {
                                int LA155_81 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 111:
                                {
                                int LA155_82 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 65:
                                {
                                int LA155_83 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 68:
                                {
                                int LA155_84 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 64:
                                {
                                int LA155_85 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case HexLiteral:
                            case OctalLiteral:
                            case DecimalLiteral:
                                {
                                int LA155_86 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case FloatingPointLiteral:
                                {
                                int LA155_87 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case CharacterLiteral:
                                {
                                int LA155_88 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case StringLiteral:
                                {
                                int LA155_89 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 70:
                            case 71:
                                {
                                int LA155_90 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 69:
                                {
                                int LA155_91 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 112:
                                {
                                int LA155_92 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case Identifier:
                                {
                                int LA155_93 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                                {
                                int LA155_94 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;
                            case 46:
                                {
                                int LA155_95 = input.LA(3);

                                if ( (synpred251()) ) {
                                    alt155=1;
                                }


                                }
                                break;

                            }

                        }


                        switch (alt155) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:725:10: '[' expression ']'
                    	    {
                    	    char_literal544=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_identifierSuffix5342); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal544_tree = (OMPTree)adaptor.create(char_literal544);
                    	    adaptor.addChild(root_0, char_literal544_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_identifierSuffix5344);
                    	    expression545=expression();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, expression545.getTree());
                    	    char_literal546=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_identifierSuffix5346); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal546_tree = (OMPTree)adaptor.create(char_literal546);
                    	    adaptor.addChild(root_0, char_literal546_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt155 >= 1 ) break loop155;
                    	    if (backtracking>0) {failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(155, input);
                                throw eee;
                        }
                        cnt155++;
                    } while (true);


                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:726:9: arguments
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_arguments_in_identifierSuffix5359);
                    arguments547=arguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arguments547.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:727:9: '.' 'class'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal548=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_identifierSuffix5369); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal548_tree = (OMPTree)adaptor.create(char_literal548);
                    adaptor.addChild(root_0, char_literal548_tree);
                    }
                    string_literal549=(Token)input.LT(1);
                    match(input,36,FOLLOW_36_in_identifierSuffix5371); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal549_tree = (OMPTree)adaptor.create(string_literal549);
                    adaptor.addChild(root_0, string_literal549_tree);
                    }

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:728:9: '.' explicitGenericInvocation
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal550=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_identifierSuffix5381); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal550_tree = (OMPTree)adaptor.create(char_literal550);
                    adaptor.addChild(root_0, char_literal550_tree);
                    }
                    pushFollow(FOLLOW_explicitGenericInvocation_in_identifierSuffix5383);
                    explicitGenericInvocation551=explicitGenericInvocation();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, explicitGenericInvocation551.getTree());

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:729:9: '.' 'this'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal552=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_identifierSuffix5393); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal552_tree = (OMPTree)adaptor.create(char_literal552);
                    adaptor.addChild(root_0, char_literal552_tree);
                    }
                    string_literal553=(Token)input.LT(1);
                    match(input,68,FOLLOW_68_in_identifierSuffix5395); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal553_tree = (OMPTree)adaptor.create(string_literal553);
                    adaptor.addChild(root_0, string_literal553_tree);
                    }

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:730:9: '.' 'super' arguments
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal554=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_identifierSuffix5405); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal554_tree = (OMPTree)adaptor.create(char_literal554);
                    adaptor.addChild(root_0, char_literal554_tree);
                    }
                    string_literal555=(Token)input.LT(1);
                    match(input,64,FOLLOW_64_in_identifierSuffix5407); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal555_tree = (OMPTree)adaptor.create(string_literal555);
                    adaptor.addChild(root_0, string_literal555_tree);
                    }
                    pushFollow(FOLLOW_arguments_in_identifierSuffix5409);
                    arguments556=arguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arguments556.getTree());

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:731:9: '.' 'new' innerCreator
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal557=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_identifierSuffix5419); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal557_tree = (OMPTree)adaptor.create(char_literal557);
                    adaptor.addChild(root_0, char_literal557_tree);
                    }
                    string_literal558=(Token)input.LT(1);
                    match(input,112,FOLLOW_112_in_identifierSuffix5421); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal558_tree = (OMPTree)adaptor.create(string_literal558);
                    adaptor.addChild(root_0, string_literal558_tree);
                    }
                    pushFollow(FOLLOW_innerCreator_in_identifierSuffix5423);
                    innerCreator559=innerCreator();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, innerCreator559.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 125, identifierSuffix_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end identifierSuffix

    public static class creator extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start creator
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:734:1: creator : ( nonWildcardTypeArguments createdName classCreatorRest | createdName ( arrayCreatorRest | classCreatorRest ) );
    public final creator creator() throws RecognitionException, OMPParserException {
        creator retval = new creator();
        retval.setStart(input.LT(1));
        int creator_StartIndex = input.index();
        OMPTree root_0 = null;

        nonWildcardTypeArguments nonWildcardTypeArguments560 = null;

        createdName createdName561 = null;

        classCreatorRest classCreatorRest562 = null;

        createdName createdName563 = null;

        arrayCreatorRest arrayCreatorRest564 = null;

        classCreatorRest classCreatorRest565 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:735:5: ( nonWildcardTypeArguments createdName classCreatorRest | createdName ( arrayCreatorRest | classCreatorRest ) )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==39) ) {
                alt158=1;
            }
            else if ( (LA158_0==Identifier||(LA158_0>=55 && LA158_0<=62)) ) {
                alt158=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("734:1: creator : ( nonWildcardTypeArguments createdName classCreatorRest | createdName ( arrayCreatorRest | classCreatorRest ) );", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:735:9: nonWildcardTypeArguments createdName classCreatorRest
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_nonWildcardTypeArguments_in_creator5442);
                    nonWildcardTypeArguments560=nonWildcardTypeArguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments560.getTree());
                    pushFollow(FOLLOW_createdName_in_creator5444);
                    createdName561=createdName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, createdName561.getTree());
                    pushFollow(FOLLOW_classCreatorRest_in_creator5446);
                    classCreatorRest562=classCreatorRest();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classCreatorRest562.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:736:9: createdName ( arrayCreatorRest | classCreatorRest )
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_createdName_in_creator5456);
                    createdName563=createdName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, createdName563.getTree());
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:736:21: ( arrayCreatorRest | classCreatorRest )
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==47) ) {
                        alt157=1;
                    }
                    else if ( (LA157_0==65) ) {
                        alt157=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("736:21: ( arrayCreatorRest | classCreatorRest )", 157, 0, input);

                        throw nvae;
                    }
                    switch (alt157) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:736:22: arrayCreatorRest
                            {
                            pushFollow(FOLLOW_arrayCreatorRest_in_creator5459);
                            arrayCreatorRest564=arrayCreatorRest();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, arrayCreatorRest564.getTree());

                            }
                            break;
                        case 2 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:736:41: classCreatorRest
                            {
                            pushFollow(FOLLOW_classCreatorRest_in_creator5463);
                            classCreatorRest565=classCreatorRest();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, classCreatorRest565.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 126, creator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end creator

    public static class createdName extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start createdName
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:739:1: createdName : ( classOrInterfaceType | primitiveType );
    public final createdName createdName() throws RecognitionException, OMPParserException {
        createdName retval = new createdName();
        retval.setStart(input.LT(1));
        int createdName_StartIndex = input.index();
        OMPTree root_0 = null;

        classOrInterfaceType classOrInterfaceType566 = null;

        primitiveType primitiveType567 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:740:5: ( classOrInterfaceType | primitiveType )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==Identifier) ) {
                alt159=1;
            }
            else if ( ((LA159_0>=55 && LA159_0<=62)) ) {
                alt159=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("739:1: createdName : ( classOrInterfaceType | primitiveType );", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:740:9: classOrInterfaceType
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceType_in_createdName5483);
                    classOrInterfaceType566=classOrInterfaceType();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classOrInterfaceType566.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:741:9: primitiveType
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_primitiveType_in_createdName5493);
                    primitiveType567=primitiveType();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, primitiveType567.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 127, createdName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createdName

    public static class innerCreator extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start innerCreator
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:744:1: innerCreator : ( nonWildcardTypeArguments )? Identifier classCreatorRest ;
    public final innerCreator innerCreator() throws RecognitionException, OMPParserException {
        innerCreator retval = new innerCreator();
        retval.setStart(input.LT(1));
        int innerCreator_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier569=null;
        nonWildcardTypeArguments nonWildcardTypeArguments568 = null;

        classCreatorRest classCreatorRest570 = null;


        OMPTree Identifier569_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:745:5: ( ( nonWildcardTypeArguments )? Identifier classCreatorRest )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:745:9: ( nonWildcardTypeArguments )? Identifier classCreatorRest
            {
            root_0 = (OMPTree)adaptor.nil();

            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:745:9: ( nonWildcardTypeArguments )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==39) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:745:10: nonWildcardTypeArguments
                    {
                    pushFollow(FOLLOW_nonWildcardTypeArguments_in_innerCreator5517);
                    nonWildcardTypeArguments568=nonWildcardTypeArguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments568.getTree());

                    }
                    break;

            }

            Identifier569=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_innerCreator5521); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier569_tree = (OMPTree)adaptor.create(Identifier569);
            adaptor.addChild(root_0, Identifier569_tree);
            }
            pushFollow(FOLLOW_classCreatorRest_in_innerCreator5523);
            classCreatorRest570=classCreatorRest();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, classCreatorRest570.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 128, innerCreator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end innerCreator

    public static class arrayCreatorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start arrayCreatorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:748:1: arrayCreatorRest : '[' ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* ) ;
    public final arrayCreatorRest arrayCreatorRest() throws RecognitionException, OMPParserException {
        arrayCreatorRest retval = new arrayCreatorRest();
        retval.setStart(input.LT(1));
        int arrayCreatorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal571=null;
        Token char_literal572=null;
        Token char_literal573=null;
        Token char_literal574=null;
        Token char_literal577=null;
        Token char_literal578=null;
        Token char_literal580=null;
        Token char_literal581=null;
        Token char_literal582=null;
        arrayInitializer arrayInitializer575 = null;

        expression expression576 = null;

        expression expression579 = null;


        OMPTree char_literal571_tree=null;
        OMPTree char_literal572_tree=null;
        OMPTree char_literal573_tree=null;
        OMPTree char_literal574_tree=null;
        OMPTree char_literal577_tree=null;
        OMPTree char_literal578_tree=null;
        OMPTree char_literal580_tree=null;
        OMPTree char_literal581_tree=null;
        OMPTree char_literal582_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:749:5: ( '[' ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* ) )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:749:9: '[' ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* )
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal571=(Token)input.LT(1);
            match(input,47,FOLLOW_47_in_arrayCreatorRest5542); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal571_tree = (OMPTree)adaptor.create(char_literal571);
            adaptor.addChild(root_0, char_literal571_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:750:9: ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==48) ) {
                alt164=1;
            }
            else if ( (LA164_0==Identifier||(LA164_0>=FloatingPointLiteral && LA164_0<=DecimalLiteral)||LA164_0==46||(LA164_0>=55 && LA164_0<=62)||(LA164_0>=64 && LA164_0<=65)||(LA164_0>=68 && LA164_0<=71)||(LA164_0>=104 && LA164_0<=105)||(LA164_0>=108 && LA164_0<=112)) ) {
                alt164=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("750:9: ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* )", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:750:13: ']' ( '[' ']' )* arrayInitializer
                    {
                    char_literal572=(Token)input.LT(1);
                    match(input,48,FOLLOW_48_in_arrayCreatorRest5556); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal572_tree = (OMPTree)adaptor.create(char_literal572);
                    adaptor.addChild(root_0, char_literal572_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:750:17: ( '[' ']' )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==47) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:750:18: '[' ']'
                    	    {
                    	    char_literal573=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_arrayCreatorRest5559); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal573_tree = (OMPTree)adaptor.create(char_literal573);
                    	    adaptor.addChild(root_0, char_literal573_tree);
                    	    }
                    	    char_literal574=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_arrayCreatorRest5561); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal574_tree = (OMPTree)adaptor.create(char_literal574);
                    	    adaptor.addChild(root_0, char_literal574_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);

                    pushFollow(FOLLOW_arrayInitializer_in_arrayCreatorRest5565);
                    arrayInitializer575=arrayInitializer();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arrayInitializer575.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:13: expression ']' ( '[' expression ']' )* ( '[' ']' )*
                    {
                    pushFollow(FOLLOW_expression_in_arrayCreatorRest5579);
                    expression576=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression576.getTree());
                    char_literal577=(Token)input.LT(1);
                    match(input,48,FOLLOW_48_in_arrayCreatorRest5581); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal577_tree = (OMPTree)adaptor.create(char_literal577);
                    adaptor.addChild(root_0, char_literal577_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:28: ( '[' expression ']' )*
                    loop162:
                    do {
                        int alt162=2;
                        int LA162_0 = input.LA(1);

                        if ( (LA162_0==47) ) {
                            switch ( input.LA(2) ) {
                            case 104:
                                {
                                int LA162_78 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 105:
                                {
                                int LA162_79 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 108:
                                {
                                int LA162_80 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 109:
                                {
                                int LA162_81 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 110:
                                {
                                int LA162_82 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 111:
                                {
                                int LA162_83 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 65:
                                {
                                int LA162_84 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 68:
                                {
                                int LA162_85 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 64:
                                {
                                int LA162_86 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case HexLiteral:
                            case OctalLiteral:
                            case DecimalLiteral:
                                {
                                int LA162_87 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case FloatingPointLiteral:
                                {
                                int LA162_88 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case CharacterLiteral:
                                {
                                int LA162_89 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case StringLiteral:
                                {
                                int LA162_90 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 70:
                            case 71:
                                {
                                int LA162_91 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 69:
                                {
                                int LA162_92 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 112:
                                {
                                int LA162_93 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case Identifier:
                                {
                                int LA162_94 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                                {
                                int LA162_95 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;
                            case 46:
                                {
                                int LA162_96 = input.LA(3);

                                if ( (synpred264()) ) {
                                    alt162=1;
                                }


                                }
                                break;

                            }

                        }


                        switch (alt162) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:29: '[' expression ']'
                    	    {
                    	    char_literal578=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_arrayCreatorRest5584); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal578_tree = (OMPTree)adaptor.create(char_literal578);
                    	    adaptor.addChild(root_0, char_literal578_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_arrayCreatorRest5586);
                    	    expression579=expression();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, expression579.getTree());
                    	    char_literal580=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_arrayCreatorRest5588); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal580_tree = (OMPTree)adaptor.create(char_literal580);
                    	    adaptor.addChild(root_0, char_literal580_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop162;
                        }
                    } while (true);

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:50: ( '[' ']' )*
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==47) ) {
                            int LA163_2 = input.LA(2);

                            if ( (LA163_2==48) ) {
                                alt163=1;
                            }


                        }


                        switch (alt163) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:51: '[' ']'
                    	    {
                    	    char_literal581=(Token)input.LT(1);
                    	    match(input,47,FOLLOW_47_in_arrayCreatorRest5593); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal581_tree = (OMPTree)adaptor.create(char_literal581);
                    	    adaptor.addChild(root_0, char_literal581_tree);
                    	    }
                    	    char_literal582=(Token)input.LT(1);
                    	    match(input,48,FOLLOW_48_in_arrayCreatorRest5595); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	    char_literal582_tree = (OMPTree)adaptor.create(char_literal582);
                    	    adaptor.addChild(root_0, char_literal582_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop163;
                        }
                    } while (true);


                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 129, arrayCreatorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end arrayCreatorRest

    public static class classCreatorRest extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start classCreatorRest
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:755:1: classCreatorRest : arguments ( classBody )? ;
    public final classCreatorRest classCreatorRest() throws RecognitionException, OMPParserException {
        classCreatorRest retval = new classCreatorRest();
        retval.setStart(input.LT(1));
        int classCreatorRest_StartIndex = input.index();
        OMPTree root_0 = null;

        arguments arguments583 = null;

        classBody classBody584 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 130) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:756:5: ( arguments ( classBody )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:756:9: arguments ( classBody )?
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_arguments_in_classCreatorRest5626);
            arguments583=arguments();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, arguments583.getTree());
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:756:19: ( classBody )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==43) ) {
                switch ( input.LA(2) ) {
                    case 34:
                        {
                        int LA165_77 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 72:
                        {
                        int LA165_78 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case Identifier:
                        {
                        int LA165_79 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                        {
                        int LA165_80 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 30:
                        {
                        int LA165_81 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 31:
                        {
                        int LA165_82 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 32:
                        {
                        int LA165_83 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 33:
                        {
                        int LA165_84 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 27:
                        {
                        int LA165_85 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 35:
                        {
                        int LA165_86 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 36:
                        {
                        int LA165_87 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case ENUM:
                        {
                        int LA165_88 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 45:
                        {
                        int LA165_89 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 43:
                        {
                        int LA165_90 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 52:
                        {
                        int LA165_98 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 25:
                        {
                        int LA165_103 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 46:
                        {
                        int LA165_120 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 44:
                        {
                        int LA165_122 = input.LA(3);

                        if ( (synpred266()) ) {
                            alt165=1;
                        }
                        }
                        break;
                    case 39:
                    case 51:
                    case 53:
                    case 54:
                        {
                        alt165=1;
                        }
                        break;
                }

            }
            switch (alt165) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: classBody
                    {
                    pushFollow(FOLLOW_classBody_in_classCreatorRest5628);
                    classBody584=classBody();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, classBody584.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 130, classCreatorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end classCreatorRest

    public static class explicitGenericInvocation extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start explicitGenericInvocation
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:759:1: explicitGenericInvocation : nonWildcardTypeArguments Identifier arguments ;
    public final explicitGenericInvocation explicitGenericInvocation() throws RecognitionException, OMPParserException {
        explicitGenericInvocation retval = new explicitGenericInvocation();
        retval.setStart(input.LT(1));
        int explicitGenericInvocation_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier586=null;
        nonWildcardTypeArguments nonWildcardTypeArguments585 = null;

        arguments arguments587 = null;


        OMPTree Identifier586_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:760:5: ( nonWildcardTypeArguments Identifier arguments )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:760:9: nonWildcardTypeArguments Identifier arguments
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitGenericInvocation5652);
            nonWildcardTypeArguments585=nonWildcardTypeArguments();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments585.getTree());
            Identifier586=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_explicitGenericInvocation5654); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier586_tree = (OMPTree)adaptor.create(Identifier586);
            adaptor.addChild(root_0, Identifier586_tree);
            }
            pushFollow(FOLLOW_arguments_in_explicitGenericInvocation5656);
            arguments587=arguments();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, arguments587.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 131, explicitGenericInvocation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end explicitGenericInvocation

    public static class nonWildcardTypeArguments extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start nonWildcardTypeArguments
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:763:1: nonWildcardTypeArguments : '<' typeList '>' ;
    public final nonWildcardTypeArguments nonWildcardTypeArguments() throws RecognitionException, OMPParserException {
        nonWildcardTypeArguments retval = new nonWildcardTypeArguments();
        retval.setStart(input.LT(1));
        int nonWildcardTypeArguments_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal588=null;
        Token char_literal590=null;
        typeList typeList589 = null;


        OMPTree char_literal588_tree=null;
        OMPTree char_literal590_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:764:5: ( '<' typeList '>' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:764:9: '<' typeList '>'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal588=(Token)input.LT(1);
            match(input,39,FOLLOW_39_in_nonWildcardTypeArguments5679); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal588_tree = (OMPTree)adaptor.create(char_literal588);
            adaptor.addChild(root_0, char_literal588_tree);
            }
            pushFollow(FOLLOW_typeList_in_nonWildcardTypeArguments5681);
            typeList589=typeList();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, typeList589.getTree());
            char_literal590=(Token)input.LT(1);
            match(input,41,FOLLOW_41_in_nonWildcardTypeArguments5683); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal590_tree = (OMPTree)adaptor.create(char_literal590);
            adaptor.addChild(root_0, char_literal590_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 132, nonWildcardTypeArguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end nonWildcardTypeArguments

    public static class selector extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start selector
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:767:1: selector : ( '.' Identifier ( arguments )? | '.' 'this' | '.' 'super' superSuffix | '.' 'new' innerCreator | '[' expression ']' );
    public final selector selector() throws RecognitionException, OMPParserException {
        selector retval = new selector();
        retval.setStart(input.LT(1));
        int selector_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal591=null;
        Token Identifier592=null;
        Token char_literal594=null;
        Token string_literal595=null;
        Token char_literal596=null;
        Token string_literal597=null;
        Token char_literal599=null;
        Token string_literal600=null;
        Token char_literal602=null;
        Token char_literal604=null;
        arguments arguments593 = null;

        superSuffix superSuffix598 = null;

        innerCreator innerCreator601 = null;

        expression expression603 = null;


        OMPTree char_literal591_tree=null;
        OMPTree Identifier592_tree=null;
        OMPTree char_literal594_tree=null;
        OMPTree string_literal595_tree=null;
        OMPTree char_literal596_tree=null;
        OMPTree string_literal597_tree=null;
        OMPTree char_literal599_tree=null;
        OMPTree string_literal600_tree=null;
        OMPTree char_literal602_tree=null;
        OMPTree char_literal604_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:768:5: ( '.' Identifier ( arguments )? | '.' 'this' | '.' 'super' superSuffix | '.' 'new' innerCreator | '[' expression ']' )
            int alt167=5;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==28) ) {
                switch ( input.LA(2) ) {
                case 112:
                    {
                    alt167=4;
                    }
                    break;
                case 68:
                    {
                    alt167=2;
                    }
                    break;
                case Identifier:
                    {
                    alt167=1;
                    }
                    break;
                case 64:
                    {
                    alt167=3;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("767:1: selector : ( '.' Identifier ( arguments )? | '.' 'this' | '.' 'super' superSuffix | '.' 'new' innerCreator | '[' expression ']' );", 167, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA167_0==47) ) {
                alt167=5;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("767:1: selector : ( '.' Identifier ( arguments )? | '.' 'this' | '.' 'super' superSuffix | '.' 'new' innerCreator | '[' expression ']' );", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:768:9: '.' Identifier ( arguments )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal591=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_selector5706); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal591_tree = (OMPTree)adaptor.create(char_literal591);
                    adaptor.addChild(root_0, char_literal591_tree);
                    }
                    Identifier592=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_selector5708); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier592_tree = (OMPTree)adaptor.create(Identifier592);
                    adaptor.addChild(root_0, Identifier592_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:768:24: ( arguments )?
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( (LA166_0==65) ) {
                        switch ( input.LA(2) ) {
                            case 104:
                                {
                                int LA166_77 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 105:
                                {
                                int LA166_78 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 108:
                                {
                                int LA166_79 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 109:
                                {
                                int LA166_80 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 110:
                                {
                                int LA166_81 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 111:
                                {
                                int LA166_82 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 65:
                                {
                                int LA166_83 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 68:
                                {
                                int LA166_84 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 64:
                                {
                                int LA166_85 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case HexLiteral:
                            case OctalLiteral:
                            case DecimalLiteral:
                                {
                                int LA166_86 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case FloatingPointLiteral:
                                {
                                int LA166_87 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case CharacterLiteral:
                                {
                                int LA166_88 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case StringLiteral:
                                {
                                int LA166_89 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 70:
                            case 71:
                                {
                                int LA166_90 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 69:
                                {
                                int LA166_91 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 112:
                                {
                                int LA166_92 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case Identifier:
                                {
                                int LA166_93 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                                {
                                int LA166_94 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 46:
                                {
                                int LA166_95 = input.LA(3);

                                if ( (synpred267()) ) {
                                    alt166=1;
                                }
                                }
                                break;
                            case 66:
                                {
                                alt166=1;
                                }
                                break;
                        }

                    }
                    switch (alt166) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:768:25: arguments
                            {
                            pushFollow(FOLLOW_arguments_in_selector5711);
                            arguments593=arguments();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, arguments593.getTree());

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:769:9: '.' 'this'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal594=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_selector5723); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal594_tree = (OMPTree)adaptor.create(char_literal594);
                    adaptor.addChild(root_0, char_literal594_tree);
                    }
                    string_literal595=(Token)input.LT(1);
                    match(input,68,FOLLOW_68_in_selector5725); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal595_tree = (OMPTree)adaptor.create(string_literal595);
                    adaptor.addChild(root_0, string_literal595_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:770:9: '.' 'super' superSuffix
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal596=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_selector5735); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal596_tree = (OMPTree)adaptor.create(char_literal596);
                    adaptor.addChild(root_0, char_literal596_tree);
                    }
                    string_literal597=(Token)input.LT(1);
                    match(input,64,FOLLOW_64_in_selector5737); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal597_tree = (OMPTree)adaptor.create(string_literal597);
                    adaptor.addChild(root_0, string_literal597_tree);
                    }
                    pushFollow(FOLLOW_superSuffix_in_selector5739);
                    superSuffix598=superSuffix();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, superSuffix598.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:771:9: '.' 'new' innerCreator
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal599=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_selector5749); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal599_tree = (OMPTree)adaptor.create(char_literal599);
                    adaptor.addChild(root_0, char_literal599_tree);
                    }
                    string_literal600=(Token)input.LT(1);
                    match(input,112,FOLLOW_112_in_selector5751); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal600_tree = (OMPTree)adaptor.create(string_literal600);
                    adaptor.addChild(root_0, string_literal600_tree);
                    }
                    pushFollow(FOLLOW_innerCreator_in_selector5753);
                    innerCreator601=innerCreator();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, innerCreator601.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:772:9: '[' expression ']'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal602=(Token)input.LT(1);
                    match(input,47,FOLLOW_47_in_selector5763); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal602_tree = (OMPTree)adaptor.create(char_literal602);
                    adaptor.addChild(root_0, char_literal602_tree);
                    }
                    pushFollow(FOLLOW_expression_in_selector5765);
                    expression603=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression603.getTree());
                    char_literal604=(Token)input.LT(1);
                    match(input,48,FOLLOW_48_in_selector5767); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal604_tree = (OMPTree)adaptor.create(char_literal604);
                    adaptor.addChild(root_0, char_literal604_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 133, selector_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selector

    public static class superSuffix extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start superSuffix
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:775:1: superSuffix : ( arguments | '.' Identifier ( arguments )? );
    public final superSuffix superSuffix() throws RecognitionException, OMPParserException {
        superSuffix retval = new superSuffix();
        retval.setStart(input.LT(1));
        int superSuffix_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal606=null;
        Token Identifier607=null;
        arguments arguments605 = null;

        arguments arguments608 = null;


        OMPTree char_literal606_tree=null;
        OMPTree Identifier607_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:776:5: ( arguments | '.' Identifier ( arguments )? )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==65) ) {
                alt169=1;
            }
            else if ( (LA169_0==28) ) {
                alt169=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("775:1: superSuffix : ( arguments | '.' Identifier ( arguments )? );", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:776:9: arguments
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_arguments_in_superSuffix5790);
                    arguments605=arguments();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, arguments605.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:777:9: '.' Identifier ( arguments )?
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    char_literal606=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_superSuffix5800); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal606_tree = (OMPTree)adaptor.create(char_literal606);
                    adaptor.addChild(root_0, char_literal606_tree);
                    }
                    Identifier607=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_superSuffix5802); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier607_tree = (OMPTree)adaptor.create(Identifier607);
                    adaptor.addChild(root_0, Identifier607_tree);
                    }
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:777:24: ( arguments )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==65) ) {
                        switch ( input.LA(2) ) {
                            case 104:
                                {
                                int LA168_77 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 105:
                                {
                                int LA168_78 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 108:
                                {
                                int LA168_79 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 109:
                                {
                                int LA168_80 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 110:
                                {
                                int LA168_81 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 111:
                                {
                                int LA168_82 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 65:
                                {
                                int LA168_83 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 68:
                                {
                                int LA168_84 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 64:
                                {
                                int LA168_85 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case HexLiteral:
                            case OctalLiteral:
                            case DecimalLiteral:
                                {
                                int LA168_86 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case FloatingPointLiteral:
                                {
                                int LA168_87 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case CharacterLiteral:
                                {
                                int LA168_88 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case StringLiteral:
                                {
                                int LA168_89 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 70:
                            case 71:
                                {
                                int LA168_90 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 69:
                                {
                                int LA168_91 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 112:
                                {
                                int LA168_92 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case Identifier:
                                {
                                int LA168_93 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                                {
                                int LA168_94 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 46:
                                {
                                int LA168_95 = input.LA(3);

                                if ( (synpred273()) ) {
                                    alt168=1;
                                }
                                }
                                break;
                            case 66:
                                {
                                alt168=1;
                                }
                                break;
                        }

                    }
                    switch (alt168) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:777:25: arguments
                            {
                            pushFollow(FOLLOW_arguments_in_superSuffix5805);
                            arguments608=arguments();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, arguments608.getTree());

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 134, superSuffix_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end superSuffix

    public static class arguments extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start arguments
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:780:1: arguments : '(' ( expressionList )? ')' ;
    public final arguments arguments() throws RecognitionException, OMPParserException {
        arguments retval = new arguments();
        retval.setStart(input.LT(1));
        int arguments_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal609=null;
        Token char_literal611=null;
        expressionList expressionList610 = null;


        OMPTree char_literal609_tree=null;
        OMPTree char_literal611_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 135) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:781:5: ( '(' ( expressionList )? ')' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:781:9: '(' ( expressionList )? ')'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal609=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_arguments5826); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal609_tree = (OMPTree)adaptor.create(char_literal609);
            adaptor.addChild(root_0, char_literal609_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:781:13: ( expressionList )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==Identifier||(LA170_0>=FloatingPointLiteral && LA170_0<=DecimalLiteral)||LA170_0==46||(LA170_0>=55 && LA170_0<=62)||(LA170_0>=64 && LA170_0<=65)||(LA170_0>=68 && LA170_0<=71)||(LA170_0>=104 && LA170_0<=105)||(LA170_0>=108 && LA170_0<=112)) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: expressionList
                    {
                    pushFollow(FOLLOW_expressionList_in_arguments5828);
                    expressionList610=expressionList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expressionList610.getTree());

                    }
                    break;

            }

            char_literal611=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_arguments5831); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal611_tree = (OMPTree)adaptor.create(char_literal611);
            adaptor.addChild(root_0, char_literal611_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 135, arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end arguments

    public static class openmpConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start openmpConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:786:1: openmpConstruct : ( parallelConstruct | forConstruct | sectionsConstruct | singleConstruct | parallelForConstruct | parallelSectionsConstruct | taskConstruct | masterConstruct | criticalConstruct | atomicConstruct | orderedConstruct );
    public final openmpConstruct openmpConstruct() throws RecognitionException, OMPParserException {
        openmpConstruct retval = new openmpConstruct();
        retval.setStart(input.LT(1));
        int openmpConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        parallelConstruct parallelConstruct612 = null;

        forConstruct forConstruct613 = null;

        sectionsConstruct sectionsConstruct614 = null;

        singleConstruct singleConstruct615 = null;

        parallelForConstruct parallelForConstruct616 = null;

        parallelSectionsConstruct parallelSectionsConstruct617 = null;

        taskConstruct taskConstruct618 = null;

        masterConstruct masterConstruct619 = null;

        criticalConstruct criticalConstruct620 = null;

        atomicConstruct atomicConstruct621 = null;

        orderedConstruct orderedConstruct622 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 136) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:787:2: ( parallelConstruct | forConstruct | sectionsConstruct | singleConstruct | parallelForConstruct | parallelSectionsConstruct | taskConstruct | masterConstruct | criticalConstruct | atomicConstruct | orderedConstruct )
            int alt171=11;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==113) ) {
                switch ( input.LA(2) ) {
                case 127:
                    {
                    alt171=8;
                    }
                    break;
                case 114:
                    {
                    int LA171_3 = input.LA(3);

                    if ( (synpred275()) ) {
                        alt171=1;
                    }
                    else if ( (synpred279()) ) {
                        alt171=5;
                    }
                    else if ( (synpred280()) ) {
                        alt171=6;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("786:1: openmpConstruct : ( parallelConstruct | forConstruct | sectionsConstruct | singleConstruct | parallelForConstruct | parallelSectionsConstruct | taskConstruct | masterConstruct | criticalConstruct | atomicConstruct | orderedConstruct );", 171, 3, input);

                        throw nvae;
                    }
                    }
                    break;
                case 124:
                    {
                    alt171=7;
                    }
                    break;
                case 130:
                    {
                    alt171=10;
                    }
                    break;
                case 122:
                    {
                    alt171=3;
                    }
                    break;
                case 77:
                    {
                    alt171=2;
                    }
                    break;
                case 126:
                    {
                    alt171=4;
                    }
                    break;
                case 128:
                    {
                    alt171=9;
                    }
                    break;
                case 117:
                    {
                    alt171=11;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("786:1: openmpConstruct : ( parallelConstruct | forConstruct | sectionsConstruct | singleConstruct | parallelForConstruct | parallelSectionsConstruct | taskConstruct | masterConstruct | criticalConstruct | atomicConstruct | orderedConstruct );", 171, 1, input);

                    throw nvae;
                }

            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("786:1: openmpConstruct : ( parallelConstruct | forConstruct | sectionsConstruct | singleConstruct | parallelForConstruct | parallelSectionsConstruct | taskConstruct | masterConstruct | criticalConstruct | atomicConstruct | orderedConstruct );", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:787:4: parallelConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_parallelConstruct_in_openmpConstruct5847);
                    parallelConstruct612=parallelConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parallelConstruct612.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:788:4: forConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_forConstruct_in_openmpConstruct5852);
                    forConstruct613=forConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, forConstruct613.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:789:4: sectionsConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_sectionsConstruct_in_openmpConstruct5858);
                    sectionsConstruct614=sectionsConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, sectionsConstruct614.getTree());

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:790:4: singleConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_singleConstruct_in_openmpConstruct5864);
                    singleConstruct615=singleConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, singleConstruct615.getTree());

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:791:4: parallelForConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_parallelForConstruct_in_openmpConstruct5870);
                    parallelForConstruct616=parallelForConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parallelForConstruct616.getTree());

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:792:4: parallelSectionsConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_parallelSectionsConstruct_in_openmpConstruct5876);
                    parallelSectionsConstruct617=parallelSectionsConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, parallelSectionsConstruct617.getTree());

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:793:4: taskConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_taskConstruct_in_openmpConstruct5882);
                    taskConstruct618=taskConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, taskConstruct618.getTree());

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:794:4: masterConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_masterConstruct_in_openmpConstruct5887);
                    masterConstruct619=masterConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, masterConstruct619.getTree());

                    }
                    break;
                case 9 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:795:4: criticalConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_criticalConstruct_in_openmpConstruct5893);
                    criticalConstruct620=criticalConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, criticalConstruct620.getTree());

                    }
                    break;
                case 10 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:796:4: atomicConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_atomicConstruct_in_openmpConstruct5899);
                    atomicConstruct621=atomicConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, atomicConstruct621.getTree());

                    }
                    break;
                case 11 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:797:4: orderedConstruct
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_orderedConstruct_in_openmpConstruct5905);
                    orderedConstruct622=orderedConstruct();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, orderedConstruct622.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 136, openmpConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end openmpConstruct

    public static class openmpDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start openmpDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:800:1: openmpDirective : ( barrierDirective | taskwaitDirective );
    public final openmpDirective openmpDirective() throws RecognitionException, OMPParserException {
        openmpDirective retval = new openmpDirective();
        retval.setStart(input.LT(1));
        int openmpDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        barrierDirective barrierDirective623 = null;

        taskwaitDirective taskwaitDirective624 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 137) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:801:2: ( barrierDirective | taskwaitDirective )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==113) ) {
                int LA172_1 = input.LA(2);

                if ( (LA172_1==129) ) {
                    int LA172_2 = input.LA(3);

                    if ( (synpred285()) ) {
                        alt172=1;
                    }
                    else if ( (true) ) {
                        alt172=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("800:1: openmpDirective : ( barrierDirective | taskwaitDirective );", 172, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("800:1: openmpDirective : ( barrierDirective | taskwaitDirective );", 172, 1, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("800:1: openmpDirective : ( barrierDirective | taskwaitDirective );", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:801:4: barrierDirective
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_barrierDirective_in_openmpDirective5917);
                    barrierDirective623=barrierDirective();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, barrierDirective623.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:802:4: taskwaitDirective
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_taskwaitDirective_in_openmpDirective5923);
                    taskwaitDirective624=taskwaitDirective();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, taskwaitDirective624.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 137, openmpDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end openmpDirective

    public static class structuredBlock extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start structuredBlock
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:804:1: structuredBlock : statement ;
    public final structuredBlock structuredBlock() throws RecognitionException, OMPParserException {
        structuredBlock retval = new structuredBlock();
        retval.setStart(input.LT(1));
        int structuredBlock_StartIndex = input.index();
        OMPTree root_0 = null;

        statement statement625 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 138) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:805:2: ( statement )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:805:4: statement
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_statement_in_structuredBlock5934);
            statement625=statement();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, statement625.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 138, structuredBlock_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end structuredBlock

    public static class parallelConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:808:1: parallelConstruct : parallelDirective structuredBlock ;
    public final parallelConstruct parallelConstruct() throws RecognitionException, OMPParserException {
        parallelConstruct retval = new parallelConstruct();
        retval.setStart(input.LT(1));
        int parallelConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        parallelDirective parallelDirective626 = null;

        structuredBlock structuredBlock627 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 139) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:810:2: ( parallelDirective structuredBlock )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:810:4: parallelDirective structuredBlock
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_parallelDirective_in_parallelConstruct5953);
            parallelDirective626=parallelDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, parallelDirective626.getTree());
            pushFollow(FOLLOW_structuredBlock_in_parallelConstruct5955);
            structuredBlock627=structuredBlock();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock627.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP parallel construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 139, parallelConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelConstruct

    public static class parallelDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:813:1: parallelDirective : '//omp' 'parallel' ( parallelClause )* ;
    public final parallelDirective parallelDirective() throws RecognitionException, OMPParserException {
        parallelDirective retval = new parallelDirective();
        retval.setStart(input.LT(1));
        int parallelDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal628=null;
        Token string_literal629=null;
        parallelClause parallelClause630 = null;


        OMPTree string_literal628_tree=null;
        OMPTree string_literal629_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 140) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:814:2: ( '//omp' 'parallel' ( parallelClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:814:5: '//omp' 'parallel' ( parallelClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal628=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_parallelDirective5968); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal628_tree = (OMPTree)adaptor.create(string_literal628);
            adaptor.addChild(root_0, string_literal628_tree);
            }
            string_literal629=(Token)input.LT(1);
            match(input,114,FOLLOW_114_in_parallelDirective5970); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal629_tree = (OMPTree)adaptor.create(string_literal629);
            adaptor.addChild(root_0, string_literal629_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:814:24: ( parallelClause )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==75) ) {
                    int LA173_3 = input.LA(2);

                    if ( (LA173_3==65) ) {
                        int LA173_44 = input.LA(3);

                        if ( (synpred286()) ) {
                            alt173=1;
                        }


                    }


                }
                else if ( (LA173_0==32||LA173_0==73||LA173_0==115||(LA173_0>=133 && LA173_0<=136)||(LA173_0>=138 && LA173_0<=139)) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:814:25: parallelClause
            	    {
            	    pushFollow(FOLLOW_parallelClause_in_parallelDirective5973);
            	    parallelClause630=parallelClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, parallelClause630.getTree());

            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 140, parallelDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelDirective

    public static class parallelClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:817:1: parallelClause : ( uniqueParallelClause | dataClause );
    public final parallelClause parallelClause() throws RecognitionException, OMPParserException {
        parallelClause retval = new parallelClause();
        retval.setStart(input.LT(1));
        int parallelClause_StartIndex = input.index();
        OMPTree root_0 = null;

        uniqueParallelClause uniqueParallelClause631 = null;

        dataClause dataClause632 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 141) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:818:2: ( uniqueParallelClause | dataClause )
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==75||LA174_0==115) ) {
                alt174=1;
            }
            else if ( (LA174_0==32||LA174_0==73||(LA174_0>=133 && LA174_0<=136)||(LA174_0>=138 && LA174_0<=139)) ) {
                alt174=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("817:1: parallelClause : ( uniqueParallelClause | dataClause );", 174, 0, input);

                throw nvae;
            }
            switch (alt174) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:818:4: uniqueParallelClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_uniqueParallelClause_in_parallelClause5986);
                    uniqueParallelClause631=uniqueParallelClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, uniqueParallelClause631.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:819:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_parallelClause5991);
                    dataClause632=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause632.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 141, parallelClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelClause

    public static class uniqueParallelClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start uniqueParallelClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:822:1: uniqueParallelClause : ( 'if' '(' expression ')' | 'num_threads' '(' expression ')' );
    public final uniqueParallelClause uniqueParallelClause() throws RecognitionException, OMPParserException {
        uniqueParallelClause retval = new uniqueParallelClause();
        retval.setStart(input.LT(1));
        int uniqueParallelClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal633=null;
        Token char_literal634=null;
        Token char_literal636=null;
        Token string_literal637=null;
        Token char_literal638=null;
        Token char_literal640=null;
        expression expression635 = null;

        expression expression639 = null;


        OMPTree string_literal633_tree=null;
        OMPTree char_literal634_tree=null;
        OMPTree char_literal636_tree=null;
        OMPTree string_literal637_tree=null;
        OMPTree char_literal638_tree=null;
        OMPTree char_literal640_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 142) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:823:2: ( 'if' '(' expression ')' | 'num_threads' '(' expression ')' )
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==75) ) {
                alt175=1;
            }
            else if ( (LA175_0==115) ) {
                alt175=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("822:1: uniqueParallelClause : ( 'if' '(' expression ')' | 'num_threads' '(' expression ')' );", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:823:4: 'if' '(' expression ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal633=(Token)input.LT(1);
                    match(input,75,FOLLOW_75_in_uniqueParallelClause6003); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal633_tree = (OMPTree)adaptor.create(string_literal633);
                    adaptor.addChild(root_0, string_literal633_tree);
                    }
                    char_literal634=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_uniqueParallelClause6005); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal634_tree = (OMPTree)adaptor.create(char_literal634);
                    adaptor.addChild(root_0, char_literal634_tree);
                    }
                    pushFollow(FOLLOW_expression_in_uniqueParallelClause6007);
                    expression635=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression635.getTree());
                    char_literal636=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_uniqueParallelClause6009); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal636_tree = (OMPTree)adaptor.create(char_literal636);
                    adaptor.addChild(root_0, char_literal636_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:824:4: 'num_threads' '(' expression ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal637=(Token)input.LT(1);
                    match(input,115,FOLLOW_115_in_uniqueParallelClause6014); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal637_tree = (OMPTree)adaptor.create(string_literal637);
                    adaptor.addChild(root_0, string_literal637_tree);
                    }
                    char_literal638=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_uniqueParallelClause6016); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal638_tree = (OMPTree)adaptor.create(char_literal638);
                    adaptor.addChild(root_0, char_literal638_tree);
                    }
                    pushFollow(FOLLOW_expression_in_uniqueParallelClause6018);
                    expression639=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression639.getTree());
                    char_literal640=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_uniqueParallelClause6020); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal640_tree = (OMPTree)adaptor.create(char_literal640);
                    adaptor.addChild(root_0, char_literal640_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 142, uniqueParallelClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end uniqueParallelClause

    public static class forConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start forConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:827:1: forConstruct : forDirective iterationStatement ;
    public final forConstruct forConstruct() throws RecognitionException, OMPParserException {
        forConstruct retval = new forConstruct();
        retval.setStart(input.LT(1));
        int forConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        forDirective forDirective641 = null;

        iterationStatement iterationStatement642 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 143) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:829:2: ( forDirective iterationStatement )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:829:4: forDirective iterationStatement
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_forDirective_in_forConstruct6043);
            forDirective641=forDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, forDirective641.getTree());
            pushFollow(FOLLOW_iterationStatement_in_forConstruct6045);
            iterationStatement642=iterationStatement();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, iterationStatement642.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP for construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 143, forConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end forConstruct

    public static class forDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start forDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:831:1: forDirective : '//omp' 'for' ( forClause )* ;
    public final forDirective forDirective() throws RecognitionException, OMPParserException {
        forDirective retval = new forDirective();
        retval.setStart(input.LT(1));
        int forDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal643=null;
        Token string_literal644=null;
        forClause forClause645 = null;


        OMPTree string_literal643_tree=null;
        OMPTree string_literal644_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 144) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:832:2: ( '//omp' 'for' ( forClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:832:4: '//omp' 'for' ( forClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal643=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_forDirective6056); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal643_tree = (OMPTree)adaptor.create(string_literal643);
            adaptor.addChild(root_0, string_literal643_tree);
            }
            string_literal644=(Token)input.LT(1);
            match(input,77,FOLLOW_77_in_forDirective6058); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal644_tree = (OMPTree)adaptor.create(string_literal644);
            adaptor.addChild(root_0, string_literal644_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:832:18: ( forClause )*
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==32||LA176_0==73||(LA176_0>=116 && LA176_0<=118)||(LA176_0>=133 && LA176_0<=136)||(LA176_0>=138 && LA176_0<=139)) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: forClause
            	    {
            	    pushFollow(FOLLOW_forClause_in_forDirective6060);
            	    forClause645=forClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, forClause645.getTree());

            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 144, forDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end forDirective

    public static class forClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start forClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:835:1: forClause : ( uniqueForClause | dataClause | 'nowait' );
    public final forClause forClause() throws RecognitionException, OMPParserException {
        forClause retval = new forClause();
        retval.setStart(input.LT(1));
        int forClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal648=null;
        uniqueForClause uniqueForClause646 = null;

        dataClause dataClause647 = null;


        OMPTree string_literal648_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 145) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:836:2: ( uniqueForClause | dataClause | 'nowait' )
            int alt177=3;
            switch ( input.LA(1) ) {
            case 117:
            case 118:
                {
                alt177=1;
                }
                break;
            case 32:
            case 73:
            case 133:
            case 134:
            case 135:
            case 136:
            case 138:
            case 139:
                {
                alt177=2;
                }
                break;
            case 116:
                {
                alt177=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("835:1: forClause : ( uniqueForClause | dataClause | 'nowait' );", 177, 0, input);

                throw nvae;
            }

            switch (alt177) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:836:4: uniqueForClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_uniqueForClause_in_forClause6073);
                    uniqueForClause646=uniqueForClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, uniqueForClause646.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:837:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_forClause6079);
                    dataClause647=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause647.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:838:4: 'nowait'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal648=(Token)input.LT(1);
                    match(input,116,FOLLOW_116_in_forClause6085); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal648_tree = (OMPTree)adaptor.create(string_literal648);
                    adaptor.addChild(root_0, string_literal648_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 145, forClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end forClause

    public static class uniqueForClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start uniqueForClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:841:1: uniqueForClause : ( 'ordered' | 'schedule' '(' scheduleKind ')' | 'schedule' '(' scheduleKind ',' expression ')' );
    public final uniqueForClause uniqueForClause() throws RecognitionException, OMPParserException {
        uniqueForClause retval = new uniqueForClause();
        retval.setStart(input.LT(1));
        int uniqueForClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal649=null;
        Token string_literal650=null;
        Token char_literal651=null;
        Token char_literal653=null;
        Token string_literal654=null;
        Token char_literal655=null;
        Token char_literal657=null;
        Token char_literal659=null;
        scheduleKind scheduleKind652 = null;

        scheduleKind scheduleKind656 = null;

        expression expression658 = null;


        OMPTree string_literal649_tree=null;
        OMPTree string_literal650_tree=null;
        OMPTree char_literal651_tree=null;
        OMPTree char_literal653_tree=null;
        OMPTree string_literal654_tree=null;
        OMPTree char_literal655_tree=null;
        OMPTree char_literal657_tree=null;
        OMPTree char_literal659_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 146) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:842:2: ( 'ordered' | 'schedule' '(' scheduleKind ')' | 'schedule' '(' scheduleKind ',' expression ')' )
            int alt178=3;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==117) ) {
                alt178=1;
            }
            else if ( (LA178_0==118) ) {
                int LA178_2 = input.LA(2);

                if ( (LA178_2==65) ) {
                    int LA178_3 = input.LA(3);

                    if ( (synpred293()) ) {
                        alt178=2;
                    }
                    else if ( (true) ) {
                        alt178=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("841:1: uniqueForClause : ( 'ordered' | 'schedule' '(' scheduleKind ')' | 'schedule' '(' scheduleKind ',' expression ')' );", 178, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("841:1: uniqueForClause : ( 'ordered' | 'schedule' '(' scheduleKind ')' | 'schedule' '(' scheduleKind ',' expression ')' );", 178, 2, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("841:1: uniqueForClause : ( 'ordered' | 'schedule' '(' scheduleKind ')' | 'schedule' '(' scheduleKind ',' expression ')' );", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:842:4: 'ordered'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal649=(Token)input.LT(1);
                    match(input,117,FOLLOW_117_in_uniqueForClause6097); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal649_tree = (OMPTree)adaptor.create(string_literal649);
                    adaptor.addChild(root_0, string_literal649_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:843:4: 'schedule' '(' scheduleKind ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal650=(Token)input.LT(1);
                    match(input,118,FOLLOW_118_in_uniqueForClause6103); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal650_tree = (OMPTree)adaptor.create(string_literal650);
                    adaptor.addChild(root_0, string_literal650_tree);
                    }
                    char_literal651=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_uniqueForClause6105); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal651_tree = (OMPTree)adaptor.create(char_literal651);
                    adaptor.addChild(root_0, char_literal651_tree);
                    }
                    pushFollow(FOLLOW_scheduleKind_in_uniqueForClause6107);
                    scheduleKind652=scheduleKind();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, scheduleKind652.getTree());
                    char_literal653=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_uniqueForClause6109); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal653_tree = (OMPTree)adaptor.create(char_literal653);
                    adaptor.addChild(root_0, char_literal653_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:844:4: 'schedule' '(' scheduleKind ',' expression ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal654=(Token)input.LT(1);
                    match(input,118,FOLLOW_118_in_uniqueForClause6114); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal654_tree = (OMPTree)adaptor.create(string_literal654);
                    adaptor.addChild(root_0, string_literal654_tree);
                    }
                    char_literal655=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_uniqueForClause6116); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal655_tree = (OMPTree)adaptor.create(char_literal655);
                    adaptor.addChild(root_0, char_literal655_tree);
                    }
                    pushFollow(FOLLOW_scheduleKind_in_uniqueForClause6118);
                    scheduleKind656=scheduleKind();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, scheduleKind656.getTree());
                    char_literal657=(Token)input.LT(1);
                    match(input,40,FOLLOW_40_in_uniqueForClause6120); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal657_tree = (OMPTree)adaptor.create(char_literal657);
                    adaptor.addChild(root_0, char_literal657_tree);
                    }
                    pushFollow(FOLLOW_expression_in_uniqueForClause6122);
                    expression658=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression658.getTree());
                    char_literal659=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_uniqueForClause6124); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal659_tree = (OMPTree)adaptor.create(char_literal659);
                    adaptor.addChild(root_0, char_literal659_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 146, uniqueForClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end uniqueForClause

    public static class scheduleKind extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start scheduleKind
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:847:1: scheduleKind : ( 'static' | 'dynamic' | 'guided' | 'runtime' );
    public final scheduleKind scheduleKind() throws RecognitionException, OMPParserException {
        scheduleKind retval = new scheduleKind();
        retval.setStart(input.LT(1));
        int scheduleKind_StartIndex = input.index();
        OMPTree root_0 = null;

        Token set660=null;

        OMPTree set660_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 147) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:848:2: ( 'static' | 'dynamic' | 'guided' | 'runtime' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:
            {
            root_0 = (OMPTree)adaptor.nil();

            set660=(Token)input.LT(1);
            if ( input.LA(1)==27||(input.LA(1)>=119 && input.LA(1)<=121) ) {
                input.consume();
                if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set660));
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_scheduleKind0);    throw mse;
            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 147, scheduleKind_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end scheduleKind

    public static class sectionsConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start sectionsConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:854:1: sectionsConstruct : sectionsDirective sectionScope ;
    public final sectionsConstruct sectionsConstruct() throws RecognitionException, OMPParserException {
        sectionsConstruct retval = new sectionsConstruct();
        retval.setStart(input.LT(1));
        int sectionsConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        sectionsDirective sectionsDirective661 = null;

        sectionScope sectionScope662 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 148) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:856:2: ( sectionsDirective sectionScope )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:856:4: sectionsDirective sectionScope
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_sectionsDirective_in_sectionsConstruct6168);
            sectionsDirective661=sectionsDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, sectionsDirective661.getTree());
            pushFollow(FOLLOW_sectionScope_in_sectionsConstruct6170);
            sectionScope662=sectionScope();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, sectionScope662.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP sections construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 148, sectionsConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sectionsConstruct

    public static class sectionsDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start sectionsDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:859:1: sectionsDirective : '//omp' 'sections' ( sectionsClause )* ;
    public final sectionsDirective sectionsDirective() throws RecognitionException, OMPParserException {
        sectionsDirective retval = new sectionsDirective();
        retval.setStart(input.LT(1));
        int sectionsDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal663=null;
        Token string_literal664=null;
        sectionsClause sectionsClause665 = null;


        OMPTree string_literal663_tree=null;
        OMPTree string_literal664_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 149) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:860:2: ( '//omp' 'sections' ( sectionsClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:860:4: '//omp' 'sections' ( sectionsClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal663=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_sectionsDirective6182); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal663_tree = (OMPTree)adaptor.create(string_literal663);
            adaptor.addChild(root_0, string_literal663_tree);
            }
            string_literal664=(Token)input.LT(1);
            match(input,122,FOLLOW_122_in_sectionsDirective6184); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal664_tree = (OMPTree)adaptor.create(string_literal664);
            adaptor.addChild(root_0, string_literal664_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:860:23: ( sectionsClause )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==32||LA179_0==73||LA179_0==116||(LA179_0>=133 && LA179_0<=136)||(LA179_0>=138 && LA179_0<=139)) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: sectionsClause
            	    {
            	    pushFollow(FOLLOW_sectionsClause_in_sectionsDirective6186);
            	    sectionsClause665=sectionsClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, sectionsClause665.getTree());

            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 149, sectionsDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sectionsDirective

    public static class sectionsClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start sectionsClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:863:1: sectionsClause : ( dataClause | 'nowait' );
    public final sectionsClause sectionsClause() throws RecognitionException, OMPParserException {
        sectionsClause retval = new sectionsClause();
        retval.setStart(input.LT(1));
        int sectionsClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal667=null;
        dataClause dataClause666 = null;


        OMPTree string_literal667_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 150) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:864:2: ( dataClause | 'nowait' )
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==32||LA180_0==73||(LA180_0>=133 && LA180_0<=136)||(LA180_0>=138 && LA180_0<=139)) ) {
                alt180=1;
            }
            else if ( (LA180_0==116) ) {
                alt180=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("863:1: sectionsClause : ( dataClause | 'nowait' );", 180, 0, input);

                throw nvae;
            }
            switch (alt180) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:864:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_sectionsClause6201);
                    dataClause666=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause666.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:865:4: 'nowait'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal667=(Token)input.LT(1);
                    match(input,116,FOLLOW_116_in_sectionsClause6207); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal667_tree = (OMPTree)adaptor.create(string_literal667);
                    adaptor.addChild(root_0, string_literal667_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 150, sectionsClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sectionsClause

    public static class sectionScope extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start sectionScope
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:868:1: sectionScope : '{' sectionSequence '}' ;
    public final sectionScope sectionScope() throws RecognitionException, OMPParserException {
        sectionScope retval = new sectionScope();
        retval.setStart(input.LT(1));
        int sectionScope_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal668=null;
        Token char_literal670=null;
        sectionSequence sectionSequence669 = null;


        OMPTree char_literal668_tree=null;
        OMPTree char_literal670_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 151) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:869:2: ( '{' sectionSequence '}' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:869:4: '{' sectionSequence '}'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal668=(Token)input.LT(1);
            match(input,43,FOLLOW_43_in_sectionScope6219); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal668_tree = (OMPTree)adaptor.create(char_literal668);
            adaptor.addChild(root_0, char_literal668_tree);
            }
            pushFollow(FOLLOW_sectionSequence_in_sectionScope6221);
            sectionSequence669=sectionSequence();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, sectionSequence669.getTree());
            char_literal670=(Token)input.LT(1);
            match(input,44,FOLLOW_44_in_sectionScope6223); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal670_tree = (OMPTree)adaptor.create(char_literal670);
            adaptor.addChild(root_0, char_literal670_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 151, sectionScope_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sectionScope

    public static class sectionSequence extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start sectionSequence
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );
    public final sectionSequence sectionSequence() throws RecognitionException, OMPParserException {
        sectionSequence retval = new sectionSequence();
        retval.setStart(input.LT(1));
        int sectionSequence_StartIndex = input.index();
        OMPTree root_0 = null;

        sectionDirective sectionDirective671 = null;

        structuredBlock structuredBlock672 = null;

        sectionDirective sectionDirective673 = null;

        structuredBlock structuredBlock674 = null;

        sectionSequence sectionSequence675 = null;

        sectionDirective sectionDirective676 = null;

        structuredBlock structuredBlock677 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 152) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:873:2: ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock )
            int alt183=2;
            switch ( input.LA(1) ) {
            case 113:
                {
                switch ( input.LA(2) ) {
                case 77:
                    {
                    int LA183_35 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 35, input);

                        throw nvae;
                    }
                    }
                    break;
                case 114:
                    {
                    int LA183_36 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 36, input);

                        throw nvae;
                    }
                    }
                    break;
                case 127:
                    {
                    int LA183_37 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 37, input);

                        throw nvae;
                    }
                    }
                    break;
                case 128:
                    {
                    int LA183_38 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 38, input);

                        throw nvae;
                    }
                    }
                    break;
                case 130:
                    {
                    int LA183_39 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 39, input);

                        throw nvae;
                    }
                    }
                    break;
                case 117:
                    {
                    int LA183_40 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 40, input);

                        throw nvae;
                    }
                    }
                    break;
                case 126:
                    {
                    int LA183_41 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 41, input);

                        throw nvae;
                    }
                    }
                    break;
                case 124:
                    {
                    int LA183_42 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 42, input);

                        throw nvae;
                    }
                    }
                    break;
                case 123:
                    {
                    int LA183_43 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 43, input);

                        throw nvae;
                    }
                    }
                    break;
                case 122:
                    {
                    int LA183_44 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 44, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 1, input);

                    throw nvae;
                }

                }
                break;
            case 43:
                {
                switch ( input.LA(2) ) {
                case 34:
                    {
                    int LA183_45 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 45, input);

                        throw nvae;
                    }
                    }
                    break;
                case 72:
                    {
                    int LA183_46 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 46, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_47 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 47, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_48 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 48, input);

                        throw nvae;
                    }
                    }
                    break;
                case 30:
                    {
                    int LA183_49 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 49, input);

                        throw nvae;
                    }
                    }
                    break;
                case 31:
                    {
                    int LA183_50 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 50, input);

                        throw nvae;
                    }
                    }
                    break;
                case 32:
                    {
                    int LA183_51 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 51, input);

                        throw nvae;
                    }
                    }
                    break;
                case 33:
                    {
                    int LA183_52 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 52, input);

                        throw nvae;
                    }
                    }
                    break;
                case 27:
                    {
                    int LA183_53 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 53, input);

                        throw nvae;
                    }
                    }
                    break;
                case 35:
                    {
                    int LA183_54 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 54, input);

                        throw nvae;
                    }
                    }
                    break;
                case 36:
                    {
                    int LA183_55 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 55, input);

                        throw nvae;
                    }
                    }
                    break;
                case ENUM:
                    {
                    int LA183_56 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 56, input);

                        throw nvae;
                    }
                    }
                    break;
                case 45:
                    {
                    int LA183_57 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 57, input);

                        throw nvae;
                    }
                    }
                    break;
                case 43:
                    {
                    int LA183_58 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 58, input);

                        throw nvae;
                    }
                    }
                    break;
                case ASSERT:
                    {
                    int LA183_59 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 59, input);

                        throw nvae;
                    }
                    }
                    break;
                case 75:
                    {
                    int LA183_60 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 60, input);

                        throw nvae;
                    }
                    }
                    break;
                case 77:
                    {
                    int LA183_61 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 61, input);

                        throw nvae;
                    }
                    }
                    break;
                case 78:
                    {
                    int LA183_62 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 62, input);

                        throw nvae;
                    }
                    }
                    break;
                case 79:
                    {
                    int LA183_63 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 63, input);

                        throw nvae;
                    }
                    }
                    break;
                case 80:
                    {
                    int LA183_64 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 64, input);

                        throw nvae;
                    }
                    }
                    break;
                case 82:
                    {
                    int LA183_65 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 65, input);

                        throw nvae;
                    }
                    }
                    break;
                case 52:
                    {
                    int LA183_66 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 66, input);

                        throw nvae;
                    }
                    }
                    break;
                case 83:
                    {
                    int LA183_67 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 67, input);

                        throw nvae;
                    }
                    }
                    break;
                case 84:
                    {
                    int LA183_68 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 68, input);

                        throw nvae;
                    }
                    }
                    break;
                case 85:
                    {
                    int LA183_69 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 69, input);

                        throw nvae;
                    }
                    }
                    break;
                case 86:
                    {
                    int LA183_70 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 70, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_71 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 71, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                    {
                    int LA183_72 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 72, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_73 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 73, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_74 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 74, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_75 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 75, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_76 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 76, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_77 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 77, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_78 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 78, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_79 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 79, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_80 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 80, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_81 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 81, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_82 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 82, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_83 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 83, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_84 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 84, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_85 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 85, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_86 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 86, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_87 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 87, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_88 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 88, input);

                        throw nvae;
                    }
                    }
                    break;
                case 113:
                    {
                    int LA183_89 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 89, input);

                        throw nvae;
                    }
                    }
                    break;
                case 44:
                    {
                    int LA183_90 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 90, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 2, input);

                    throw nvae;
                }

                }
                break;
            case ASSERT:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_91 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 91, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_92 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 92, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_93 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 93, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_94 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 94, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_95 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 95, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_96 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 96, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_97 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 97, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_98 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 98, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_99 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 99, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_100 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 100, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_101 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 101, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_102 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 102, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_103 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 103, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_104 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 104, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_105 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 105, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_106 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 106, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_107 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 107, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_108 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 108, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_109 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 109, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 3, input);

                    throw nvae;
                }

                }
                break;
            case 75:
                {
                int LA183_4 = input.LA(2);

                if ( (LA183_4==65) ) {
                    int LA183_110 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 110, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 4, input);

                    throw nvae;
                }
                }
                break;
            case 77:
                {
                int LA183_5 = input.LA(2);

                if ( (LA183_5==65) ) {
                    int LA183_111 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 111, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 5, input);

                    throw nvae;
                }
                }
                break;
            case 78:
                {
                int LA183_6 = input.LA(2);

                if ( (LA183_6==65) ) {
                    int LA183_112 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 112, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 6, input);

                    throw nvae;
                }
                }
                break;
            case 79:
                {
                switch ( input.LA(2) ) {
                case 43:
                    {
                    int LA183_113 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 113, input);

                        throw nvae;
                    }
                    }
                    break;
                case ASSERT:
                    {
                    int LA183_114 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 114, input);

                        throw nvae;
                    }
                    }
                    break;
                case 75:
                    {
                    int LA183_115 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 115, input);

                        throw nvae;
                    }
                    }
                    break;
                case 77:
                    {
                    int LA183_116 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 116, input);

                        throw nvae;
                    }
                    }
                    break;
                case 78:
                    {
                    int LA183_117 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 117, input);

                        throw nvae;
                    }
                    }
                    break;
                case 79:
                    {
                    int LA183_118 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 118, input);

                        throw nvae;
                    }
                    }
                    break;
                case 80:
                    {
                    int LA183_119 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 119, input);

                        throw nvae;
                    }
                    }
                    break;
                case 82:
                    {
                    int LA183_120 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 120, input);

                        throw nvae;
                    }
                    }
                    break;
                case 52:
                    {
                    int LA183_121 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 121, input);

                        throw nvae;
                    }
                    }
                    break;
                case 83:
                    {
                    int LA183_122 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 122, input);

                        throw nvae;
                    }
                    }
                    break;
                case 84:
                    {
                    int LA183_123 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 123, input);

                        throw nvae;
                    }
                    }
                    break;
                case 85:
                    {
                    int LA183_124 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 124, input);

                        throw nvae;
                    }
                    }
                    break;
                case 86:
                    {
                    int LA183_125 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 125, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_126 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 126, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                    {
                    int LA183_127 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 127, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_128 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 128, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_129 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 129, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_130 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 130, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_131 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 131, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_132 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 132, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_133 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 133, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_134 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 134, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_135 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 135, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_136 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 136, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_137 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 137, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_138 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 138, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_139 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 139, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_140 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 140, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_141 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 141, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_142 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 142, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_143 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 143, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_144 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 144, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_145 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 145, input);

                        throw nvae;
                    }
                    }
                    break;
                case 113:
                    {
                    int LA183_146 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 146, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 7, input);

                    throw nvae;
                }

                }
                break;
            case 80:
                {
                int LA183_8 = input.LA(2);

                if ( (LA183_8==43) ) {
                    int LA183_147 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 147, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 8, input);

                    throw nvae;
                }
                }
                break;
            case 82:
                {
                int LA183_9 = input.LA(2);

                if ( (LA183_9==65) ) {
                    int LA183_148 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 148, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 9, input);

                    throw nvae;
                }
                }
                break;
            case 52:
                {
                int LA183_10 = input.LA(2);

                if ( (LA183_10==65) ) {
                    int LA183_149 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 149, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 10, input);

                    throw nvae;
                }
                }
                break;
            case 83:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_150 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 150, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_151 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 151, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_152 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 152, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_153 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 153, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_154 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 154, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_155 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 155, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_156 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 156, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_157 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 157, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_158 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 158, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_159 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 159, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_160 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 160, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_161 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 161, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_162 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 162, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_163 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 163, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_164 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 164, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_165 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 165, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_166 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 166, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_167 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 167, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_168 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 168, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_169 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 169, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 11, input);

                    throw nvae;
                }

                }
                break;
            case 84:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_170 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 170, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_171 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 171, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_172 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 172, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_173 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 173, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_174 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 174, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_175 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 175, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_176 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 176, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_177 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 177, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_178 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 178, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_179 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 179, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_180 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 180, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_181 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 181, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_182 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 182, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_183 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 183, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_184 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 184, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_185 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 185, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_186 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 186, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_187 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 187, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_188 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 188, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 12, input);

                    throw nvae;
                }

                }
                break;
            case 85:
                {
                int LA183_13 = input.LA(2);

                if ( (LA183_13==Identifier) ) {
                    int LA183_189 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 189, input);

                        throw nvae;
                    }
                }
                else if ( (LA183_13==25) ) {
                    int LA183_190 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 190, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 13, input);

                    throw nvae;
                }
                }
                break;
            case 86:
                {
                int LA183_14 = input.LA(2);

                if ( (LA183_14==Identifier) ) {
                    int LA183_191 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 191, input);

                        throw nvae;
                    }
                }
                else if ( (LA183_14==25) ) {
                    int LA183_192 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 192, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 14, input);

                    throw nvae;
                }
                }
                break;
            case 25:
                {
                switch ( input.LA(2) ) {
                case 113:
                    {
                    int LA183_193 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 193, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                case FloatingPointLiteral:
                case CharacterLiteral:
                case StringLiteral:
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                case ASSERT:
                case 25:
                case 43:
                case 46:
                case 52:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 64:
                case 65:
                case 68:
                case 69:
                case 70:
                case 71:
                case 75:
                case 77:
                case 78:
                case 79:
                case 80:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 104:
                case 105:
                case 108:
                case 109:
                case 110:
                case 111:
                case 112:
                    {
                    alt183=2;
                    }
                    break;
                case 44:
                    {
                    alt183=1;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 15, input);

                    throw nvae;
                }

                }
                break;
            case 104:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_228 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 228, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_229 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 229, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_230 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 230, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_231 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 231, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_232 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 232, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_233 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 233, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_234 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 234, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_235 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 235, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_236 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 236, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_237 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 237, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_238 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 238, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_239 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 239, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_240 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 240, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_241 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 241, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_242 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 242, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_243 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 243, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_244 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 244, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_245 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 245, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_246 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 246, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 16, input);

                    throw nvae;
                }

                }
                break;
            case 105:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_247 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 247, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_248 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 248, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_249 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 249, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_250 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 250, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_251 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 251, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_252 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 252, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_253 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 253, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_254 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 254, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_255 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 255, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_256 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 256, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_257 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 257, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_258 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 258, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_259 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 259, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_260 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 260, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_261 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 261, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_262 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 262, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_263 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 263, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_264 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 264, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_265 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 265, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 17, input);

                    throw nvae;
                }

                }
                break;
            case 108:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_266 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 266, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_267 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 267, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_268 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 268, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_269 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 269, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_270 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 270, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_271 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 271, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_272 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 272, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_273 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 273, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_274 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 274, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_275 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 275, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_276 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 276, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_277 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 277, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_278 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 278, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_279 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 279, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_280 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 280, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_281 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 281, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_282 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 282, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_283 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 283, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_284 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 284, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 18, input);

                    throw nvae;
                }

                }
                break;
            case 109:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_285 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 285, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_286 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 286, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_287 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 287, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_288 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 288, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_289 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 289, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_290 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 290, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_291 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 291, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_292 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 292, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_293 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 293, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_294 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 294, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_295 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 295, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_296 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 296, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_297 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 297, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_298 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 298, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_299 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 299, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_300 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 300, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_301 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 301, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_302 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 302, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_303 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 303, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 19, input);

                    throw nvae;
                }

                }
                break;
            case 110:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_304 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 304, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_305 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 305, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_306 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 306, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_307 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 307, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_308 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 308, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_309 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 309, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_310 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 310, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_311 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 311, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_312 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 312, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_313 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 313, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_314 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 314, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_315 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 315, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_316 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 316, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_317 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 317, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_318 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 318, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_319 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 319, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_320 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 320, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_321 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 321, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_322 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 322, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 20, input);

                    throw nvae;
                }

                }
                break;
            case 111:
                {
                switch ( input.LA(2) ) {
                case 104:
                    {
                    int LA183_323 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 323, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_324 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 324, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_325 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 325, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_326 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 326, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_327 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 327, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_328 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 328, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_329 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 329, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_330 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 330, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_331 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 331, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_332 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 332, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_333 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 333, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_334 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 334, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_335 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 335, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_336 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 336, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_337 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 337, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_338 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 338, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_339 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 339, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_340 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 340, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_341 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 341, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 21, input);

                    throw nvae;
                }

                }
                break;
            case 65:
                {
                switch ( input.LA(2) ) {
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_342 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 342, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                    {
                    int LA183_343 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 343, input);

                        throw nvae;
                    }
                    }
                    break;
                case 105:
                    {
                    int LA183_344 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 344, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                    {
                    int LA183_345 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 345, input);

                        throw nvae;
                    }
                    }
                    break;
                case 109:
                    {
                    int LA183_346 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 346, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                    {
                    int LA183_347 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 347, input);

                        throw nvae;
                    }
                    }
                    break;
                case 111:
                    {
                    int LA183_348 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 348, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_349 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 349, input);

                        throw nvae;
                    }
                    }
                    break;
                case 68:
                    {
                    int LA183_350 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 350, input);

                        throw nvae;
                    }
                    }
                    break;
                case 64:
                    {
                    int LA183_351 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 351, input);

                        throw nvae;
                    }
                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA183_352 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 352, input);

                        throw nvae;
                    }
                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA183_353 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 353, input);

                        throw nvae;
                    }
                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA183_354 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 354, input);

                        throw nvae;
                    }
                    }
                    break;
                case StringLiteral:
                    {
                    int LA183_355 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 355, input);

                        throw nvae;
                    }
                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA183_356 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 356, input);

                        throw nvae;
                    }
                    }
                    break;
                case 69:
                    {
                    int LA183_357 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 357, input);

                        throw nvae;
                    }
                    }
                    break;
                case 112:
                    {
                    int LA183_358 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 358, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_359 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 359, input);

                        throw nvae;
                    }
                    }
                    break;
                case 46:
                    {
                    int LA183_360 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 360, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 22, input);

                    throw nvae;
                }

                }
                break;
            case 68:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_361 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 361, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_362 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 362, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_363 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 363, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_364 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 364, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_365 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 365, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_366 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 366, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_367 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 367, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_368 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 368, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_369 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 369, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_370 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 370, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_371 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 371, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_372 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 372, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_373 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 373, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_374 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 374, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_375 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 375, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_376 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 376, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_377 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 377, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_378 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 378, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_379 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 379, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_380 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 380, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_381 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 381, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_382 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 382, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_383 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 383, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_384 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 384, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_385 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 385, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_386 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 386, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 23, input);

                    throw nvae;
                }

                }
                break;
            case 64:
                {
                int LA183_24 = input.LA(2);

                if ( (LA183_24==65) ) {
                    int LA183_387 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 387, input);

                        throw nvae;
                    }
                }
                else if ( (LA183_24==28) ) {
                    int LA183_388 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 388, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 24, input);

                    throw nvae;
                }
                }
                break;
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_389 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 389, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_390 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 390, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_391 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 391, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_392 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 392, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_393 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 393, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_394 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 394, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_395 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 395, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_396 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 396, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_397 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 397, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_398 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 398, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_399 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 399, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_400 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 400, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_401 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 401, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_402 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 402, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_403 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 403, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_404 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 404, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_405 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 405, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_406 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 406, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_407 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 407, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_408 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 408, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_409 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 409, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_410 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 410, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_411 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 411, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_412 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 412, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_413 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 413, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 25, input);

                    throw nvae;
                }

                }
                break;
            case FloatingPointLiteral:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_414 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 414, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_415 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 415, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_416 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 416, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_417 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 417, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_418 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 418, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_419 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 419, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_420 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 420, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_421 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 421, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_422 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 422, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_423 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 423, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_424 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 424, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_425 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 425, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_426 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 426, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_427 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 427, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_428 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 428, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_429 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 429, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_430 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 430, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_431 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 431, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_432 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 432, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_433 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 433, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_434 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 434, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_435 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 435, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_436 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 436, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_437 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 437, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_438 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 438, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 26, input);

                    throw nvae;
                }

                }
                break;
            case CharacterLiteral:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_439 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 439, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_440 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 440, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_441 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 441, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_442 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 442, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_443 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 443, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_444 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 444, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_445 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 445, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_446 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 446, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_447 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 447, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_448 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 448, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_449 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 449, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_450 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 450, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_451 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 451, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_452 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 452, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_453 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 453, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_454 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 454, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_455 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 455, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_456 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 456, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_457 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 457, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_458 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 458, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_459 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 459, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_460 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 460, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_461 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 461, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_462 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 462, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_463 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 463, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 27, input);

                    throw nvae;
                }

                }
                break;
            case StringLiteral:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_464 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 464, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_465 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 465, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_466 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 466, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_467 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 467, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_468 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 468, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_469 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 469, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_470 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 470, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_471 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 471, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_472 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 472, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_473 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 473, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_474 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 474, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_475 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 475, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_476 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 476, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_477 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 477, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_478 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 478, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_479 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 479, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_480 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 480, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_481 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 481, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_482 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 482, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_483 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 483, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_484 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 484, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_485 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 485, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_486 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 486, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_487 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 487, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_488 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 488, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 28, input);

                    throw nvae;
                }

                }
                break;
            case 70:
            case 71:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_489 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 489, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_490 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 490, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_491 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 491, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_492 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 492, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_493 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 493, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_494 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 494, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_495 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 495, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_496 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 496, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_497 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 497, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_498 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 498, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_499 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 499, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_500 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 500, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_501 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 501, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_502 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 502, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_503 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 503, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_504 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 504, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_505 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 505, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_506 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 506, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_507 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 507, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_508 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 508, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_509 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 509, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_510 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 510, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_511 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 511, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_512 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 512, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_513 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 513, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 29, input);

                    throw nvae;
                }

                }
                break;
            case 69:
                {
                switch ( input.LA(2) ) {
                case 28:
                    {
                    int LA183_514 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 514, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_515 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 515, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_516 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 516, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_517 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 517, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_518 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 518, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_519 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 519, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_520 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 520, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_521 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 521, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_522 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 522, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_523 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 523, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_524 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 524, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_525 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 525, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_526 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 526, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_527 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 527, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_528 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 528, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_529 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 529, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_530 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 530, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_531 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 531, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_532 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 532, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_533 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 533, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_534 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 534, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_535 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 535, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_536 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 536, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_537 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 537, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_538 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 538, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 30, input);

                    throw nvae;
                }

                }
                break;
            case 112:
                {
                switch ( input.LA(2) ) {
                case 39:
                    {
                    int LA183_539 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 539, input);

                        throw nvae;
                    }
                    }
                    break;
                case Identifier:
                    {
                    int LA183_540 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 540, input);

                        throw nvae;
                    }
                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA183_541 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 541, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 31, input);

                    throw nvae;
                }

                }
                break;
            case Identifier:
                {
                switch ( input.LA(2) ) {
                case 74:
                    {
                    int LA183_542 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 542, input);

                        throw nvae;
                    }
                    }
                    break;
                case 28:
                    {
                    int LA183_543 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 543, input);

                        throw nvae;
                    }
                    }
                    break;
                case 47:
                    {
                    int LA183_544 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 544, input);

                        throw nvae;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA183_545 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 545, input);

                        throw nvae;
                    }
                    }
                    break;
                case 108:
                case 109:
                    {
                    int LA183_546 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 546, input);

                        throw nvae;
                    }
                    }
                    break;
                case 29:
                case 106:
                case 107:
                    {
                    int LA183_547 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 547, input);

                        throw nvae;
                    }
                    }
                    break;
                case 104:
                case 105:
                    {
                    int LA183_548 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 548, input);

                        throw nvae;
                    }
                    }
                    break;
                case 39:
                    {
                    int LA183_549 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 549, input);

                        throw nvae;
                    }
                    }
                    break;
                case 41:
                    {
                    int LA183_550 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 550, input);

                        throw nvae;
                    }
                    }
                    break;
                case 103:
                    {
                    int LA183_551 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 551, input);

                        throw nvae;
                    }
                    }
                    break;
                case 101:
                case 102:
                    {
                    int LA183_552 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 552, input);

                        throw nvae;
                    }
                    }
                    break;
                case 42:
                    {
                    int LA183_553 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 553, input);

                        throw nvae;
                    }
                    }
                    break;
                case 100:
                    {
                    int LA183_554 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 554, input);

                        throw nvae;
                    }
                    }
                    break;
                case 99:
                    {
                    int LA183_555 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 555, input);

                        throw nvae;
                    }
                    }
                    break;
                case 98:
                    {
                    int LA183_556 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 556, input);

                        throw nvae;
                    }
                    }
                    break;
                case 97:
                    {
                    int LA183_557 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 557, input);

                        throw nvae;
                    }
                    }
                    break;
                case 63:
                    {
                    int LA183_558 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 558, input);

                        throw nvae;
                    }
                    }
                    break;
                case 50:
                    {
                    int LA183_559 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 559, input);

                        throw nvae;
                    }
                    }
                    break;
                case 89:
                    {
                    int LA183_560 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 560, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    int LA183_561 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 561, input);

                        throw nvae;
                    }
                    }
                    break;
                case 91:
                    {
                    int LA183_562 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 562, input);

                        throw nvae;
                    }
                    }
                    break;
                case 92:
                    {
                    int LA183_563 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 563, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    int LA183_564 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 564, input);

                        throw nvae;
                    }
                    }
                    break;
                case 94:
                    {
                    int LA183_565 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 565, input);

                        throw nvae;
                    }
                    }
                    break;
                case 95:
                    {
                    int LA183_566 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 566, input);

                        throw nvae;
                    }
                    }
                    break;
                case 96:
                    {
                    int LA183_567 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 567, input);

                        throw nvae;
                    }
                    }
                    break;
                case 25:
                    {
                    int LA183_568 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 568, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 32, input);

                    throw nvae;
                }

                }
                break;
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
                {
                int LA183_33 = input.LA(2);

                if ( (LA183_33==47) ) {
                    int LA183_569 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 569, input);

                        throw nvae;
                    }
                }
                else if ( (LA183_33==28) ) {
                    int LA183_570 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 570, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 33, input);

                    throw nvae;
                }
                }
                break;
            case 46:
                {
                int LA183_34 = input.LA(2);

                if ( (LA183_34==28) ) {
                    int LA183_571 = input.LA(3);

                    if ( (synpred300()) ) {
                        alt183=1;
                    }
                    else if ( (true) ) {
                        alt183=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 571, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 34, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("872:1: sectionSequence : ( ( sectionDirective )? structuredBlock | ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock );", 183, 0, input);

                throw nvae;
            }

            switch (alt183) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:873:4: ( sectionDirective )? structuredBlock
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:873:4: ( sectionDirective )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==113) ) {
                        int LA181_1 = input.LA(2);

                        if ( (LA181_1==123) ) {
                            alt181=1;
                        }
                    }
                    switch (alt181) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: sectionDirective
                            {
                            pushFollow(FOLLOW_sectionDirective_in_sectionSequence6236);
                            sectionDirective671=sectionDirective();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, sectionDirective671.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_structuredBlock_in_sectionSequence6239);
                    structuredBlock672=structuredBlock();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock672.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:874:4: ( sectionDirective )? structuredBlock sectionSequence sectionDirective structuredBlock
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:874:4: ( sectionDirective )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==113) ) {
                        int LA182_1 = input.LA(2);

                        if ( (LA182_1==123) ) {
                            alt182=1;
                        }
                    }
                    switch (alt182) {
                        case 1 :
                            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: sectionDirective
                            {
                            pushFollow(FOLLOW_sectionDirective_in_sectionSequence6244);
                            sectionDirective673=sectionDirective();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) adaptor.addChild(root_0, sectionDirective673.getTree());

                            }
                            break;

                    }

                    pushFollow(FOLLOW_structuredBlock_in_sectionSequence6247);
                    structuredBlock674=structuredBlock();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock674.getTree());
                    pushFollow(FOLLOW_sectionSequence_in_sectionSequence6249);
                    sectionSequence675=sectionSequence();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, sectionSequence675.getTree());
                    pushFollow(FOLLOW_sectionDirective_in_sectionSequence6251);
                    sectionDirective676=sectionDirective();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, sectionDirective676.getTree());
                    pushFollow(FOLLOW_structuredBlock_in_sectionSequence6253);
                    structuredBlock677=structuredBlock();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock677.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 152, sectionSequence_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sectionSequence

    public static class sectionDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start sectionDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:877:1: sectionDirective : '//omp' 'section' ;
    public final sectionDirective sectionDirective() throws RecognitionException, OMPParserException {
        sectionDirective retval = new sectionDirective();
        retval.setStart(input.LT(1));
        int sectionDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal678=null;
        Token string_literal679=null;

        OMPTree string_literal678_tree=null;
        OMPTree string_literal679_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 153) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:878:2: ( '//omp' 'section' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:878:4: '//omp' 'section'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal678=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_sectionDirective6266); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal678_tree = (OMPTree)adaptor.create(string_literal678);
            adaptor.addChild(root_0, string_literal678_tree);
            }
            string_literal679=(Token)input.LT(1);
            match(input,123,FOLLOW_123_in_sectionDirective6268); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal679_tree = (OMPTree)adaptor.create(string_literal679);
            adaptor.addChild(root_0, string_literal679_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 153, sectionDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sectionDirective

    public static class taskConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start taskConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:881:1: taskConstruct : taskDirective structuredBlock ;
    public final taskConstruct taskConstruct() throws RecognitionException, OMPParserException {
        taskConstruct retval = new taskConstruct();
        retval.setStart(input.LT(1));
        int taskConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        taskDirective taskDirective680 = null;

        structuredBlock structuredBlock681 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 154) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:883:2: ( taskDirective structuredBlock )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:883:4: taskDirective structuredBlock
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_taskDirective_in_taskConstruct6287);
            taskDirective680=taskDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, taskDirective680.getTree());
            pushFollow(FOLLOW_structuredBlock_in_taskConstruct6289);
            structuredBlock681=structuredBlock();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock681.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP task construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 154, taskConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end taskConstruct

    public static class taskDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start taskDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:885:1: taskDirective : '//omp' 'task' ( taskClause )* ;
    public final taskDirective taskDirective() throws RecognitionException, OMPParserException {
        taskDirective retval = new taskDirective();
        retval.setStart(input.LT(1));
        int taskDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal682=null;
        Token string_literal683=null;
        taskClause taskClause684 = null;


        OMPTree string_literal682_tree=null;
        OMPTree string_literal683_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 155) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:886:2: ( '//omp' 'task' ( taskClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:886:4: '//omp' 'task' ( taskClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal682=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_taskDirective6299); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal682_tree = (OMPTree)adaptor.create(string_literal682);
            adaptor.addChild(root_0, string_literal682_tree);
            }
            string_literal683=(Token)input.LT(1);
            match(input,124,FOLLOW_124_in_taskDirective6301); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal683_tree = (OMPTree)adaptor.create(string_literal683);
            adaptor.addChild(root_0, string_literal683_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:886:19: ( taskClause )*
            loop184:
            do {
                int alt184=2;
                switch ( input.LA(1) ) {
                case 43:
                    {
                    int LA184_1 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case ASSERT:
                    {
                    int LA184_2 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 75:
                    {
                    int LA184_3 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 77:
                    {
                    int LA184_4 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 78:
                    {
                    int LA184_5 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 79:
                    {
                    int LA184_6 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 80:
                    {
                    int LA184_7 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 82:
                    {
                    int LA184_8 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 52:
                    {
                    int LA184_9 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 83:
                    {
                    int LA184_10 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 84:
                    {
                    int LA184_11 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 85:
                    {
                    int LA184_12 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 86:
                    {
                    int LA184_13 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 25:
                    {
                    int LA184_14 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 104:
                    {
                    int LA184_15 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 105:
                    {
                    int LA184_16 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 108:
                    {
                    int LA184_17 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 109:
                    {
                    int LA184_18 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 110:
                    {
                    int LA184_19 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 111:
                    {
                    int LA184_20 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 65:
                    {
                    int LA184_21 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 68:
                    {
                    int LA184_22 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 64:
                    {
                    int LA184_23 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case HexLiteral:
                case OctalLiteral:
                case DecimalLiteral:
                    {
                    int LA184_24 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case FloatingPointLiteral:
                    {
                    int LA184_25 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case CharacterLiteral:
                    {
                    int LA184_26 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case StringLiteral:
                    {
                    int LA184_27 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 70:
                case 71:
                    {
                    int LA184_28 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 69:
                    {
                    int LA184_29 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 112:
                    {
                    int LA184_30 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case Identifier:
                    {
                    int LA184_31 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                    {
                    int LA184_32 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 46:
                    {
                    int LA184_33 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 113:
                    {
                    int LA184_34 = input.LA(2);

                    if ( (synpred302()) ) {
                        alt184=1;
                    }


                    }
                    break;
                case 32:
                case 73:
                case 125:
                case 133:
                case 134:
                case 135:
                case 136:
                case 138:
                case 139:
                    {
                    alt184=1;
                    }
                    break;

                }

                switch (alt184) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:886:20: taskClause
            	    {
            	    pushFollow(FOLLOW_taskClause_in_taskDirective6304);
            	    taskClause684=taskClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, taskClause684.getTree());

            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 155, taskDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end taskDirective

    public static class taskClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start taskClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );
    public final taskClause taskClause() throws RecognitionException, OMPParserException {
        taskClause retval = new taskClause();
        retval.setStart(input.LT(1));
        int taskClause_StartIndex = input.index();
        OMPTree root_0 = null;

        uniqueTaskClause uniqueTaskClause685 = null;

        dataClause dataClause686 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 156) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:2: ( ( uniqueTaskClause )* | dataClause )
            int alt186=2;
            switch ( input.LA(1) ) {
            case EOF:
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case ASSERT:
            case 25:
            case 43:
            case 46:
            case 52:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 64:
            case 65:
            case 68:
            case 69:
            case 70:
            case 71:
            case 75:
            case 77:
            case 78:
            case 79:
            case 80:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 104:
            case 105:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 125:
                {
                alt186=1;
                }
                break;
            case 32:
                {
                int LA186_36 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 36, input);

                    throw nvae;
                }
                }
                break;
            case 133:
                {
                int LA186_37 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 37, input);

                    throw nvae;
                }
                }
                break;
            case 134:
                {
                int LA186_38 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 38, input);

                    throw nvae;
                }
                }
                break;
            case 135:
                {
                int LA186_39 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 39, input);

                    throw nvae;
                }
                }
                break;
            case 136:
                {
                int LA186_40 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 40, input);

                    throw nvae;
                }
                }
                break;
            case 73:
                {
                int LA186_41 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 41, input);

                    throw nvae;
                }
                }
                break;
            case 138:
                {
                int LA186_42 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 42, input);

                    throw nvae;
                }
                }
                break;
            case 139:
                {
                int LA186_43 = input.LA(2);

                if ( (synpred304()) ) {
                    alt186=1;
                }
                else if ( (true) ) {
                    alt186=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 43, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("888:1: taskClause : ( ( uniqueTaskClause )* | dataClause );", 186, 0, input);

                throw nvae;
            }

            switch (alt186) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: ( uniqueTaskClause )*
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: ( uniqueTaskClause )*
                    loop185:
                    do {
                        int alt185=2;
                        int LA185_0 = input.LA(1);

                        if ( (LA185_0==75) ) {
                            int LA185_3 = input.LA(2);

                            if ( (synpred303()) ) {
                                alt185=1;
                            }


                        }
                        else if ( (LA185_0==125) ) {
                            int LA185_35 = input.LA(2);

                            if ( (synpred303()) ) {
                                alt185=1;
                            }


                        }


                        switch (alt185) {
                    	case 1 :
                    	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: uniqueTaskClause
                    	    {
                    	    pushFollow(FOLLOW_uniqueTaskClause_in_taskClause6316);
                    	    uniqueTaskClause685=uniqueTaskClause();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) adaptor.addChild(root_0, uniqueTaskClause685.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop185;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:890:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_taskClause6322);
                    dataClause686=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause686.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 156, taskClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end taskClause

    public static class uniqueTaskClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start uniqueTaskClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:892:1: uniqueTaskClause : ( 'if' '(' expression ')' | 'untied' );
    public final uniqueTaskClause uniqueTaskClause() throws RecognitionException, OMPParserException {
        uniqueTaskClause retval = new uniqueTaskClause();
        retval.setStart(input.LT(1));
        int uniqueTaskClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal687=null;
        Token char_literal688=null;
        Token char_literal690=null;
        Token string_literal691=null;
        expression expression689 = null;


        OMPTree string_literal687_tree=null;
        OMPTree char_literal688_tree=null;
        OMPTree char_literal690_tree=null;
        OMPTree string_literal691_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 157) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:893:2: ( 'if' '(' expression ')' | 'untied' )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==75) ) {
                alt187=1;
            }
            else if ( (LA187_0==125) ) {
                alt187=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("892:1: uniqueTaskClause : ( 'if' '(' expression ')' | 'untied' );", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:893:3: 'if' '(' expression ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal687=(Token)input.LT(1);
                    match(input,75,FOLLOW_75_in_uniqueTaskClause6331); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal687_tree = (OMPTree)adaptor.create(string_literal687);
                    adaptor.addChild(root_0, string_literal687_tree);
                    }
                    char_literal688=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_uniqueTaskClause6333); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal688_tree = (OMPTree)adaptor.create(char_literal688);
                    adaptor.addChild(root_0, char_literal688_tree);
                    }
                    pushFollow(FOLLOW_expression_in_uniqueTaskClause6335);
                    expression689=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, expression689.getTree());
                    char_literal690=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_uniqueTaskClause6337); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal690_tree = (OMPTree)adaptor.create(char_literal690);
                    adaptor.addChild(root_0, char_literal690_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:894:4: 'untied'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal691=(Token)input.LT(1);
                    match(input,125,FOLLOW_125_in_uniqueTaskClause6342); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal691_tree = (OMPTree)adaptor.create(string_literal691);
                    adaptor.addChild(root_0, string_literal691_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 157, uniqueTaskClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end uniqueTaskClause

    public static class singleConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start singleConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:896:1: singleConstruct : singleDirective structuredBlock ;
    public final singleConstruct singleConstruct() throws RecognitionException, OMPParserException {
        singleConstruct retval = new singleConstruct();
        retval.setStart(input.LT(1));
        int singleConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        singleDirective singleDirective692 = null;

        structuredBlock structuredBlock693 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 158) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:898:2: ( singleDirective structuredBlock )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:898:4: singleDirective structuredBlock
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_singleDirective_in_singleConstruct6363);
            singleDirective692=singleDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, singleDirective692.getTree());
            pushFollow(FOLLOW_structuredBlock_in_singleConstruct6365);
            structuredBlock693=structuredBlock();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock693.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP single construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 158, singleConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end singleConstruct

    public static class singleDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start singleDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:901:1: singleDirective : '//omp' 'single' ( singleClause )* ;
    public final singleDirective singleDirective() throws RecognitionException, OMPParserException {
        singleDirective retval = new singleDirective();
        retval.setStart(input.LT(1));
        int singleDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal694=null;
        Token string_literal695=null;
        singleClause singleClause696 = null;


        OMPTree string_literal694_tree=null;
        OMPTree string_literal695_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 159) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:902:2: ( '//omp' 'single' ( singleClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:902:4: '//omp' 'single' ( singleClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal694=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_singleDirective6378); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal694_tree = (OMPTree)adaptor.create(string_literal694);
            adaptor.addChild(root_0, string_literal694_tree);
            }
            string_literal695=(Token)input.LT(1);
            match(input,126,FOLLOW_126_in_singleDirective6380); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal695_tree = (OMPTree)adaptor.create(string_literal695);
            adaptor.addChild(root_0, string_literal695_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:902:21: ( singleClause )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==32||LA188_0==73||LA188_0==116||(LA188_0>=133 && LA188_0<=136)||(LA188_0>=138 && LA188_0<=139)) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: singleClause
            	    {
            	    pushFollow(FOLLOW_singleClause_in_singleDirective6382);
            	    singleClause696=singleClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, singleClause696.getTree());

            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 159, singleDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end singleDirective

    public static class singleClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start singleClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:905:1: singleClause : ( dataClause | 'nowait' );
    public final singleClause singleClause() throws RecognitionException, OMPParserException {
        singleClause retval = new singleClause();
        retval.setStart(input.LT(1));
        int singleClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal698=null;
        dataClause dataClause697 = null;


        OMPTree string_literal698_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 160) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:906:2: ( dataClause | 'nowait' )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==32||LA189_0==73||(LA189_0>=133 && LA189_0<=136)||(LA189_0>=138 && LA189_0<=139)) ) {
                alt189=1;
            }
            else if ( (LA189_0==116) ) {
                alt189=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("905:1: singleClause : ( dataClause | 'nowait' );", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:906:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_singleClause6397);
                    dataClause697=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause697.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:907:4: 'nowait'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal698=(Token)input.LT(1);
                    match(input,116,FOLLOW_116_in_singleClause6402); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal698_tree = (OMPTree)adaptor.create(string_literal698);
                    adaptor.addChild(root_0, string_literal698_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 160, singleClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end singleClause

    public static class parallelForConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelForConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:910:1: parallelForConstruct : parallelForDirective iterationStatement ;
    public final parallelForConstruct parallelForConstruct() throws RecognitionException, OMPParserException {
        parallelForConstruct retval = new parallelForConstruct();
        retval.setStart(input.LT(1));
        int parallelForConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        parallelForDirective parallelForDirective699 = null;

        iterationStatement iterationStatement700 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 161) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:912:2: ( parallelForDirective iterationStatement )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:912:4: parallelForDirective iterationStatement
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_parallelForDirective_in_parallelForConstruct6418);
            parallelForDirective699=parallelForDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, parallelForDirective699.getTree());
            pushFollow(FOLLOW_iterationStatement_in_parallelForConstruct6420);
            iterationStatement700=iterationStatement();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, iterationStatement700.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP parallel for construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 161, parallelForConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelForConstruct

    public static class parallelForDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelForDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:915:1: parallelForDirective : '//omp' 'parallel' 'for' ( parallelForClause )* ;
    public final parallelForDirective parallelForDirective() throws RecognitionException, OMPParserException {
        parallelForDirective retval = new parallelForDirective();
        retval.setStart(input.LT(1));
        int parallelForDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal701=null;
        Token string_literal702=null;
        Token string_literal703=null;
        parallelForClause parallelForClause704 = null;


        OMPTree string_literal701_tree=null;
        OMPTree string_literal702_tree=null;
        OMPTree string_literal703_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 162) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:916:2: ( '//omp' 'parallel' 'for' ( parallelForClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:916:4: '//omp' 'parallel' 'for' ( parallelForClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal701=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_parallelForDirective6433); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal701_tree = (OMPTree)adaptor.create(string_literal701);
            adaptor.addChild(root_0, string_literal701_tree);
            }
            string_literal702=(Token)input.LT(1);
            match(input,114,FOLLOW_114_in_parallelForDirective6435); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal702_tree = (OMPTree)adaptor.create(string_literal702);
            adaptor.addChild(root_0, string_literal702_tree);
            }
            string_literal703=(Token)input.LT(1);
            match(input,77,FOLLOW_77_in_parallelForDirective6437); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal703_tree = (OMPTree)adaptor.create(string_literal703);
            adaptor.addChild(root_0, string_literal703_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:916:29: ( parallelForClause )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==32||LA190_0==73||LA190_0==75||LA190_0==115||(LA190_0>=117 && LA190_0<=118)||(LA190_0>=133 && LA190_0<=136)||(LA190_0>=138 && LA190_0<=139)) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: parallelForClause
            	    {
            	    pushFollow(FOLLOW_parallelForClause_in_parallelForDirective6439);
            	    parallelForClause704=parallelForClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, parallelForClause704.getTree());

            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 162, parallelForDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelForDirective

    public static class parallelForClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelForClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:919:1: parallelForClause : ( uniqueParallelClause | uniqueForClause | dataClause );
    public final parallelForClause parallelForClause() throws RecognitionException, OMPParserException {
        parallelForClause retval = new parallelForClause();
        retval.setStart(input.LT(1));
        int parallelForClause_StartIndex = input.index();
        OMPTree root_0 = null;

        uniqueParallelClause uniqueParallelClause705 = null;

        uniqueForClause uniqueForClause706 = null;

        dataClause dataClause707 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 163) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:920:2: ( uniqueParallelClause | uniqueForClause | dataClause )
            int alt191=3;
            switch ( input.LA(1) ) {
            case 75:
            case 115:
                {
                alt191=1;
                }
                break;
            case 117:
            case 118:
                {
                alt191=2;
                }
                break;
            case 32:
            case 73:
            case 133:
            case 134:
            case 135:
            case 136:
            case 138:
            case 139:
                {
                alt191=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("919:1: parallelForClause : ( uniqueParallelClause | uniqueForClause | dataClause );", 191, 0, input);

                throw nvae;
            }

            switch (alt191) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:920:4: uniqueParallelClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_uniqueParallelClause_in_parallelForClause6454);
                    uniqueParallelClause705=uniqueParallelClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, uniqueParallelClause705.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:921:4: uniqueForClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_uniqueForClause_in_parallelForClause6459);
                    uniqueForClause706=uniqueForClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, uniqueForClause706.getTree());

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:922:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_parallelForClause6464);
                    dataClause707=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause707.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 163, parallelForClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelForClause

    public static class parallelSectionsConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelSectionsConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:925:1: parallelSectionsConstruct : parallelSectionsDirective sectionScope ;
    public final parallelSectionsConstruct parallelSectionsConstruct() throws RecognitionException, OMPParserException {
        parallelSectionsConstruct retval = new parallelSectionsConstruct();
        retval.setStart(input.LT(1));
        int parallelSectionsConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        parallelSectionsDirective parallelSectionsDirective708 = null;

        sectionScope sectionScope709 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 164) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:927:2: ( parallelSectionsDirective sectionScope )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:927:4: parallelSectionsDirective sectionScope
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_parallelSectionsDirective_in_parallelSectionsConstruct6480);
            parallelSectionsDirective708=parallelSectionsDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, parallelSectionsDirective708.getTree());
            pushFollow(FOLLOW_sectionScope_in_parallelSectionsConstruct6482);
            sectionScope709=sectionScope();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, sectionScope709.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP parallel sections construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 164, parallelSectionsConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelSectionsConstruct

    public static class parallelSectionsDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelSectionsDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:929:1: parallelSectionsDirective : '//omp' 'parallel' 'sections' ( parallelSectionsClause )* ;
    public final parallelSectionsDirective parallelSectionsDirective() throws RecognitionException, OMPParserException {
        parallelSectionsDirective retval = new parallelSectionsDirective();
        retval.setStart(input.LT(1));
        int parallelSectionsDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal710=null;
        Token string_literal711=null;
        Token string_literal712=null;
        parallelSectionsClause parallelSectionsClause713 = null;


        OMPTree string_literal710_tree=null;
        OMPTree string_literal711_tree=null;
        OMPTree string_literal712_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 165) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:930:2: ( '//omp' 'parallel' 'sections' ( parallelSectionsClause )* )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:930:4: '//omp' 'parallel' 'sections' ( parallelSectionsClause )*
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal710=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_parallelSectionsDirective6493); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal710_tree = (OMPTree)adaptor.create(string_literal710);
            adaptor.addChild(root_0, string_literal710_tree);
            }
            string_literal711=(Token)input.LT(1);
            match(input,114,FOLLOW_114_in_parallelSectionsDirective6495); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal711_tree = (OMPTree)adaptor.create(string_literal711);
            adaptor.addChild(root_0, string_literal711_tree);
            }
            string_literal712=(Token)input.LT(1);
            match(input,122,FOLLOW_122_in_parallelSectionsDirective6497); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal712_tree = (OMPTree)adaptor.create(string_literal712);
            adaptor.addChild(root_0, string_literal712_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:930:34: ( parallelSectionsClause )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==32||LA192_0==73||LA192_0==75||LA192_0==115||(LA192_0>=133 && LA192_0<=136)||(LA192_0>=138 && LA192_0<=139)) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: parallelSectionsClause
            	    {
            	    pushFollow(FOLLOW_parallelSectionsClause_in_parallelSectionsDirective6499);
            	    parallelSectionsClause713=parallelSectionsClause();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) adaptor.addChild(root_0, parallelSectionsClause713.getTree());

            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 165, parallelSectionsDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelSectionsDirective

    public static class parallelSectionsClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start parallelSectionsClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:932:1: parallelSectionsClause : ( uniqueParallelClause | dataClause );
    public final parallelSectionsClause parallelSectionsClause() throws RecognitionException, OMPParserException {
        parallelSectionsClause retval = new parallelSectionsClause();
        retval.setStart(input.LT(1));
        int parallelSectionsClause_StartIndex = input.index();
        OMPTree root_0 = null;

        uniqueParallelClause uniqueParallelClause714 = null;

        dataClause dataClause715 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 166) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:933:2: ( uniqueParallelClause | dataClause )
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==75||LA193_0==115) ) {
                alt193=1;
            }
            else if ( (LA193_0==32||LA193_0==73||(LA193_0>=133 && LA193_0<=136)||(LA193_0>=138 && LA193_0<=139)) ) {
                alt193=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("932:1: parallelSectionsClause : ( uniqueParallelClause | dataClause );", 193, 0, input);

                throw nvae;
            }
            switch (alt193) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:933:4: uniqueParallelClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_uniqueParallelClause_in_parallelSectionsClause6512);
                    uniqueParallelClause714=uniqueParallelClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, uniqueParallelClause714.getTree());

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:934:4: dataClause
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    pushFollow(FOLLOW_dataClause_in_parallelSectionsClause6517);
                    dataClause715=dataClause();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, dataClause715.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 166, parallelSectionsClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end parallelSectionsClause

    public static class masterConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start masterConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:937:1: masterConstruct : masterDirective structuredBlock ;
    public final masterConstruct masterConstruct() throws RecognitionException, OMPParserException {
        masterConstruct retval = new masterConstruct();
        retval.setStart(input.LT(1));
        int masterConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        masterDirective masterDirective716 = null;

        structuredBlock structuredBlock717 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 167) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:939:2: ( masterDirective structuredBlock )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:939:4: masterDirective structuredBlock
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_masterDirective_in_masterConstruct6533);
            masterDirective716=masterDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, masterDirective716.getTree());
            pushFollow(FOLLOW_structuredBlock_in_masterConstruct6535);
            structuredBlock717=structuredBlock();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock717.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP master construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 167, masterConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end masterConstruct

    public static class masterDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start masterDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:942:1: masterDirective : '//omp' 'master' ;
    public final masterDirective masterDirective() throws RecognitionException, OMPParserException {
        masterDirective retval = new masterDirective();
        retval.setStart(input.LT(1));
        int masterDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal718=null;
        Token string_literal719=null;

        OMPTree string_literal718_tree=null;
        OMPTree string_literal719_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 168) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:943:2: ( '//omp' 'master' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:943:4: '//omp' 'master'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal718=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_masterDirective6548); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal718_tree = (OMPTree)adaptor.create(string_literal718);
            adaptor.addChild(root_0, string_literal718_tree);
            }
            string_literal719=(Token)input.LT(1);
            match(input,127,FOLLOW_127_in_masterDirective6550); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal719_tree = (OMPTree)adaptor.create(string_literal719);
            adaptor.addChild(root_0, string_literal719_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 168, masterDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end masterDirective

    public static class criticalConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start criticalConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:946:1: criticalConstruct : criticalDirective structuredBlock ;
    public final criticalConstruct criticalConstruct() throws RecognitionException, OMPParserException {
        criticalConstruct retval = new criticalConstruct();
        retval.setStart(input.LT(1));
        int criticalConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        criticalDirective criticalDirective720 = null;

        structuredBlock structuredBlock721 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 169) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:948:2: ( criticalDirective structuredBlock )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:948:4: criticalDirective structuredBlock
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_criticalDirective_in_criticalConstruct6566);
            criticalDirective720=criticalDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, criticalDirective720.getTree());
            pushFollow(FOLLOW_structuredBlock_in_criticalConstruct6568);
            structuredBlock721=structuredBlock();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock721.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP critical construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 169, criticalConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end criticalConstruct

    public static class criticalDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start criticalDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:951:1: criticalDirective : '//omp' 'critical' ( regionPhrase )? ;
    public final criticalDirective criticalDirective() throws RecognitionException, OMPParserException {
        criticalDirective retval = new criticalDirective();
        retval.setStart(input.LT(1));
        int criticalDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal722=null;
        Token string_literal723=null;
        regionPhrase regionPhrase724 = null;


        OMPTree string_literal722_tree=null;
        OMPTree string_literal723_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 170) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:952:2: ( '//omp' 'critical' ( regionPhrase )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:952:5: '//omp' 'critical' ( regionPhrase )?
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal722=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_criticalDirective6582); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal722_tree = (OMPTree)adaptor.create(string_literal722);
            adaptor.addChild(root_0, string_literal722_tree);
            }
            string_literal723=(Token)input.LT(1);
            match(input,128,FOLLOW_128_in_criticalDirective6584); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal723_tree = (OMPTree)adaptor.create(string_literal723);
            adaptor.addChild(root_0, string_literal723_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:952:24: ( regionPhrase )?
            int alt194=2;
            int LA194_0 = input.LA(1);

            if ( (LA194_0==65) ) {
                int LA194_1 = input.LA(2);

                if ( (LA194_1==Identifier) ) {
                    int LA194_35 = input.LA(3);

                    if ( (synpred313()) ) {
                        alt194=1;
                    }
                }
            }
            switch (alt194) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: regionPhrase
                    {
                    pushFollow(FOLLOW_regionPhrase_in_criticalDirective6586);
                    regionPhrase724=regionPhrase();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, regionPhrase724.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 170, criticalDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end criticalDirective

    public static class regionPhrase extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start regionPhrase
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:954:1: regionPhrase : '(' Identifier ')' ;
    public final regionPhrase regionPhrase() throws RecognitionException, OMPParserException {
        regionPhrase retval = new regionPhrase();
        retval.setStart(input.LT(1));
        int regionPhrase_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal725=null;
        Token Identifier726=null;
        Token char_literal727=null;

        OMPTree char_literal725_tree=null;
        OMPTree Identifier726_tree=null;
        OMPTree char_literal727_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 171) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:955:2: ( '(' Identifier ')' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:955:4: '(' Identifier ')'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal725=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_regionPhrase6597); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal725_tree = (OMPTree)adaptor.create(char_literal725);
            adaptor.addChild(root_0, char_literal725_tree);
            }
            Identifier726=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_regionPhrase6599); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier726_tree = (OMPTree)adaptor.create(Identifier726);
            adaptor.addChild(root_0, Identifier726_tree);
            }
            char_literal727=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_regionPhrase6601); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal727_tree = (OMPTree)adaptor.create(char_literal727);
            adaptor.addChild(root_0, char_literal727_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 171, regionPhrase_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end regionPhrase

    public static class barrierDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start barrierDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:958:1: barrierDirective : '//omp' 'barrier' ;
    public final barrierDirective barrierDirective() throws RecognitionException, OMPParserException {
        barrierDirective retval = new barrierDirective();
        retval.setStart(input.LT(1));
        int barrierDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal728=null;
        Token string_literal729=null;

        OMPTree string_literal728_tree=null;
        OMPTree string_literal729_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 172) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:960:2: ( '//omp' 'barrier' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:960:4: '//omp' 'barrier'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal728=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_barrierDirective6618); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal728_tree = (OMPTree)adaptor.create(string_literal728);
            adaptor.addChild(root_0, string_literal728_tree);
            }
            string_literal729=(Token)input.LT(1);
            match(input,129,FOLLOW_129_in_barrierDirective6620); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal729_tree = (OMPTree)adaptor.create(string_literal729);
            adaptor.addChild(root_0, string_literal729_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP barrier directive");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 172, barrierDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end barrierDirective

    public static class taskwaitDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start taskwaitDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:963:1: taskwaitDirective : '//omp' 'barrier' ;
    public final taskwaitDirective taskwaitDirective() throws RecognitionException, OMPParserException {
        taskwaitDirective retval = new taskwaitDirective();
        retval.setStart(input.LT(1));
        int taskwaitDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal730=null;
        Token string_literal731=null;

        OMPTree string_literal730_tree=null;
        OMPTree string_literal731_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 173) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:965:2: ( '//omp' 'barrier' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:965:4: '//omp' 'barrier'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal730=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_taskwaitDirective6636); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal730_tree = (OMPTree)adaptor.create(string_literal730);
            adaptor.addChild(root_0, string_literal730_tree);
            }
            string_literal731=(Token)input.LT(1);
            match(input,129,FOLLOW_129_in_taskwaitDirective6638); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal731_tree = (OMPTree)adaptor.create(string_literal731);
            adaptor.addChild(root_0, string_literal731_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP taskwait directive");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 173, taskwaitDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end taskwaitDirective

    public static class atomicConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start atomicConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:967:1: atomicConstruct : atomicDirective statementExpression ;
    public final atomicConstruct atomicConstruct() throws RecognitionException, OMPParserException {
        atomicConstruct retval = new atomicConstruct();
        retval.setStart(input.LT(1));
        int atomicConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        atomicDirective atomicDirective732 = null;

        statementExpression statementExpression733 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 174) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:969:2: ( atomicDirective statementExpression )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:969:4: atomicDirective statementExpression
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_atomicDirective_in_atomicConstruct6653);
            atomicDirective732=atomicDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, atomicDirective732.getTree());
            pushFollow(FOLLOW_statementExpression_in_atomicConstruct6655);
            statementExpression733=statementExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, statementExpression733.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP atomic construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 174, atomicConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end atomicConstruct

    public static class atomicDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start atomicDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:972:1: atomicDirective : '//omp' 'atomic' ;
    public final atomicDirective atomicDirective() throws RecognitionException, OMPParserException {
        atomicDirective retval = new atomicDirective();
        retval.setStart(input.LT(1));
        int atomicDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal734=null;
        Token string_literal735=null;

        OMPTree string_literal734_tree=null;
        OMPTree string_literal735_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 175) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:973:2: ( '//omp' 'atomic' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:973:4: '//omp' 'atomic'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal734=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_atomicDirective6668); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal734_tree = (OMPTree)adaptor.create(string_literal734);
            adaptor.addChild(root_0, string_literal734_tree);
            }
            string_literal735=(Token)input.LT(1);
            match(input,130,FOLLOW_130_in_atomicDirective6670); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal735_tree = (OMPTree)adaptor.create(string_literal735);
            adaptor.addChild(root_0, string_literal735_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 175, atomicDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end atomicDirective

    public static class flushDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start flushDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:976:1: flushDirective : '//omp' 'flush' ( flushVars )? ;
    public final flushDirective flushDirective() throws RecognitionException, OMPParserException {
        flushDirective retval = new flushDirective();
        retval.setStart(input.LT(1));
        int flushDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal736=null;
        Token string_literal737=null;
        flushVars flushVars738 = null;


        OMPTree string_literal736_tree=null;
        OMPTree string_literal737_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 176) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:978:2: ( '//omp' 'flush' ( flushVars )? )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:978:4: '//omp' 'flush' ( flushVars )?
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal736=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_flushDirective6687); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal736_tree = (OMPTree)adaptor.create(string_literal736);
            adaptor.addChild(root_0, string_literal736_tree);
            }
            string_literal737=(Token)input.LT(1);
            match(input,131,FOLLOW_131_in_flushDirective6689); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal737_tree = (OMPTree)adaptor.create(string_literal737);
            adaptor.addChild(root_0, string_literal737_tree);
            }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:978:20: ( flushVars )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==65) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: flushVars
                    {
                    pushFollow(FOLLOW_flushVars_in_flushDirective6691);
                    flushVars738=flushVars();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, flushVars738.getTree());

                    }
                    break;

            }


            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP flush directive");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 176, flushDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end flushDirective

    public static class flushVars extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start flushVars
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:981:1: flushVars : '(' variableList ')' ;
    public final flushVars flushVars() throws RecognitionException, OMPParserException {
        flushVars retval = new flushVars();
        retval.setStart(input.LT(1));
        int flushVars_StartIndex = input.index();
        OMPTree root_0 = null;

        Token char_literal739=null;
        Token char_literal741=null;
        variableList variableList740 = null;


        OMPTree char_literal739_tree=null;
        OMPTree char_literal741_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 177) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:982:2: ( '(' variableList ')' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:982:4: '(' variableList ')'
            {
            root_0 = (OMPTree)adaptor.nil();

            char_literal739=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_flushVars6706); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal739_tree = (OMPTree)adaptor.create(char_literal739);
            adaptor.addChild(root_0, char_literal739_tree);
            }
            pushFollow(FOLLOW_variableList_in_flushVars6708);
            variableList740=variableList();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableList740.getTree());
            char_literal741=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_flushVars6710); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal741_tree = (OMPTree)adaptor.create(char_literal741);
            adaptor.addChild(root_0, char_literal741_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 177, flushVars_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end flushVars

    public static class orderedConstruct extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start orderedConstruct
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:985:1: orderedConstruct : orderedDirective structuredBlock ;
    public final orderedConstruct orderedConstruct() throws RecognitionException, OMPParserException {
        orderedConstruct retval = new orderedConstruct();
        retval.setStart(input.LT(1));
        int orderedConstruct_StartIndex = input.index();
        OMPTree root_0 = null;

        orderedDirective orderedDirective742 = null;

        structuredBlock structuredBlock743 = null;



        try {
            if ( backtracking>0 && alreadyParsedRule(input, 178) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:987:2: ( orderedDirective structuredBlock )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:987:4: orderedDirective structuredBlock
            {
            root_0 = (OMPTree)adaptor.nil();

            pushFollow(FOLLOW_orderedDirective_in_orderedConstruct6726);
            orderedDirective742=orderedDirective();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, orderedDirective742.getTree());
            pushFollow(FOLLOW_structuredBlock_in_orderedConstruct6728);
            structuredBlock743=structuredBlock();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, structuredBlock743.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP ordered construct");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 178, orderedConstruct_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end orderedConstruct

    public static class orderedDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start orderedDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:989:1: orderedDirective : '//omp' 'ordered' ;
    public final orderedDirective orderedDirective() throws RecognitionException, OMPParserException {
        orderedDirective retval = new orderedDirective();
        retval.setStart(input.LT(1));
        int orderedDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal744=null;
        Token string_literal745=null;

        OMPTree string_literal744_tree=null;
        OMPTree string_literal745_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 179) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:990:2: ( '//omp' 'ordered' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:990:4: '//omp' 'ordered'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal744=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_orderedDirective6739); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal744_tree = (OMPTree)adaptor.create(string_literal744);
            adaptor.addChild(root_0, string_literal744_tree);
            }
            string_literal745=(Token)input.LT(1);
            match(input,117,FOLLOW_117_in_orderedDirective6741); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal745_tree = (OMPTree)adaptor.create(string_literal745);
            adaptor.addChild(root_0, string_literal745_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 179, orderedDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end orderedDirective

    public static class threadprivateDirective extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start threadprivateDirective
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:993:1: threadprivateDirective : '//omp' 'threadprivate' '(' variableList ')' ;
    public final threadprivateDirective threadprivateDirective() throws RecognitionException, OMPParserException {
        threadprivateDirective retval = new threadprivateDirective();
        retval.setStart(input.LT(1));
        int threadprivateDirective_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal746=null;
        Token string_literal747=null;
        Token char_literal748=null;
        Token char_literal750=null;
        variableList variableList749 = null;


        OMPTree string_literal746_tree=null;
        OMPTree string_literal747_tree=null;
        OMPTree char_literal748_tree=null;
        OMPTree char_literal750_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 180) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:995:2: ( '//omp' 'threadprivate' '(' variableList ')' )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:995:4: '//omp' 'threadprivate' '(' variableList ')'
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal746=(Token)input.LT(1);
            match(input,113,FOLLOW_113_in_threadprivateDirective6758); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal746_tree = (OMPTree)adaptor.create(string_literal746);
            adaptor.addChild(root_0, string_literal746_tree);
            }
            string_literal747=(Token)input.LT(1);
            match(input,132,FOLLOW_132_in_threadprivateDirective6760); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal747_tree = (OMPTree)adaptor.create(string_literal747);
            adaptor.addChild(root_0, string_literal747_tree);
            }
            char_literal748=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_threadprivateDirective6762); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal748_tree = (OMPTree)adaptor.create(char_literal748);
            adaptor.addChild(root_0, char_literal748_tree);
            }
            pushFollow(FOLLOW_variableList_in_threadprivateDirective6764);
            variableList749=variableList();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, variableList749.getTree());
            char_literal750=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_threadprivateDirective6766); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal750_tree = (OMPTree)adaptor.create(char_literal750);
            adaptor.addChild(root_0, char_literal750_tree);
            }

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
            if ( backtracking==0 ) {
              log.debug("Found openMP threadPrivate directive");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 180, threadprivateDirective_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end threadprivateDirective

    public static class dataClause extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start dataClause
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:998:1: dataClause : ( 'private' '(' variableList ')' | 'copyprivate' '(' variableList ')' | 'firstprivate' '(' variableList ')' | 'lastprivate' '(' variableList ')' | 'shared' '(' variableList ')' | 'default' '(' 'shared' ')' | 'default' '(' 'none' ')' | 'reduction' '(' ( '+' | '*' | '-' | '&' | '^' | '|' | '&&' | '||' ) ':' variableList ')' | 'copyin' '(' variableList ')' );
    public final dataClause dataClause() throws RecognitionException, OMPParserException {
        dataClause retval = new dataClause();
        retval.setStart(input.LT(1));
        int dataClause_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal751=null;
        Token char_literal752=null;
        Token char_literal754=null;
        Token string_literal755=null;
        Token char_literal756=null;
        Token char_literal758=null;
        Token string_literal759=null;
        Token char_literal760=null;
        Token char_literal762=null;
        Token string_literal763=null;
        Token char_literal764=null;
        Token char_literal766=null;
        Token string_literal767=null;
        Token char_literal768=null;
        Token char_literal770=null;
        Token string_literal771=null;
        Token char_literal772=null;
        Token string_literal773=null;
        Token char_literal774=null;
        Token string_literal775=null;
        Token char_literal776=null;
        Token string_literal777=null;
        Token char_literal778=null;
        Token string_literal779=null;
        Token char_literal780=null;
        Token set781=null;
        Token char_literal782=null;
        Token char_literal784=null;
        Token string_literal785=null;
        Token char_literal786=null;
        Token char_literal788=null;
        variableList variableList753 = null;

        variableList variableList757 = null;

        variableList variableList761 = null;

        variableList variableList765 = null;

        variableList variableList769 = null;

        variableList variableList783 = null;

        variableList variableList787 = null;


        OMPTree string_literal751_tree=null;
        OMPTree char_literal752_tree=null;
        OMPTree char_literal754_tree=null;
        OMPTree string_literal755_tree=null;
        OMPTree char_literal756_tree=null;
        OMPTree char_literal758_tree=null;
        OMPTree string_literal759_tree=null;
        OMPTree char_literal760_tree=null;
        OMPTree char_literal762_tree=null;
        OMPTree string_literal763_tree=null;
        OMPTree char_literal764_tree=null;
        OMPTree char_literal766_tree=null;
        OMPTree string_literal767_tree=null;
        OMPTree char_literal768_tree=null;
        OMPTree char_literal770_tree=null;
        OMPTree string_literal771_tree=null;
        OMPTree char_literal772_tree=null;
        OMPTree string_literal773_tree=null;
        OMPTree char_literal774_tree=null;
        OMPTree string_literal775_tree=null;
        OMPTree char_literal776_tree=null;
        OMPTree string_literal777_tree=null;
        OMPTree char_literal778_tree=null;
        OMPTree string_literal779_tree=null;
        OMPTree char_literal780_tree=null;
        OMPTree set781_tree=null;
        OMPTree char_literal782_tree=null;
        OMPTree char_literal784_tree=null;
        OMPTree string_literal785_tree=null;
        OMPTree char_literal786_tree=null;
        OMPTree char_literal788_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 181) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:999:2: ( 'private' '(' variableList ')' | 'copyprivate' '(' variableList ')' | 'firstprivate' '(' variableList ')' | 'lastprivate' '(' variableList ')' | 'shared' '(' variableList ')' | 'default' '(' 'shared' ')' | 'default' '(' 'none' ')' | 'reduction' '(' ( '+' | '*' | '-' | '&' | '^' | '|' | '&&' | '||' ) ':' variableList ')' | 'copyin' '(' variableList ')' )
            int alt196=9;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt196=1;
                }
                break;
            case 133:
                {
                alt196=2;
                }
                break;
            case 134:
                {
                alt196=3;
                }
                break;
            case 135:
                {
                alt196=4;
                }
                break;
            case 136:
                {
                alt196=5;
                }
                break;
            case 73:
                {
                int LA196_6 = input.LA(2);

                if ( (LA196_6==65) ) {
                    int LA196_9 = input.LA(3);

                    if ( (synpred320()) ) {
                        alt196=6;
                    }
                    else if ( (synpred321()) ) {
                        alt196=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("998:1: dataClause : ( 'private' '(' variableList ')' | 'copyprivate' '(' variableList ')' | 'firstprivate' '(' variableList ')' | 'lastprivate' '(' variableList ')' | 'shared' '(' variableList ')' | 'default' '(' 'shared' ')' | 'default' '(' 'none' ')' | 'reduction' '(' ( '+' | '*' | '-' | '&' | '^' | '|' | '&&' | '||' ) ':' variableList ')' | 'copyin' '(' variableList ')' );", 196, 9, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("998:1: dataClause : ( 'private' '(' variableList ')' | 'copyprivate' '(' variableList ')' | 'firstprivate' '(' variableList ')' | 'lastprivate' '(' variableList ')' | 'shared' '(' variableList ')' | 'default' '(' 'shared' ')' | 'default' '(' 'none' ')' | 'reduction' '(' ( '+' | '*' | '-' | '&' | '^' | '|' | '&&' | '||' ) ':' variableList ')' | 'copyin' '(' variableList ')' );", 196, 6, input);

                    throw nvae;
                }
                }
                break;
            case 138:
                {
                alt196=8;
                }
                break;
            case 139:
                {
                alt196=9;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("998:1: dataClause : ( 'private' '(' variableList ')' | 'copyprivate' '(' variableList ')' | 'firstprivate' '(' variableList ')' | 'lastprivate' '(' variableList ')' | 'shared' '(' variableList ')' | 'default' '(' 'shared' ')' | 'default' '(' 'none' ')' | 'reduction' '(' ( '+' | '*' | '-' | '&' | '^' | '|' | '&&' | '||' ) ':' variableList ')' | 'copyin' '(' variableList ')' );", 196, 0, input);

                throw nvae;
            }

            switch (alt196) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:999:4: 'private' '(' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal751=(Token)input.LT(1);
                    match(input,32,FOLLOW_32_in_dataClause6779); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal751_tree = (OMPTree)adaptor.create(string_literal751);
                    adaptor.addChild(root_0, string_literal751_tree);
                    }
                    char_literal752=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6781); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal752_tree = (OMPTree)adaptor.create(char_literal752);
                    adaptor.addChild(root_0, char_literal752_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6783);
                    variableList753=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList753.getTree());
                    char_literal754=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6785); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal754_tree = (OMPTree)adaptor.create(char_literal754);
                    adaptor.addChild(root_0, char_literal754_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1000:4: 'copyprivate' '(' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal755=(Token)input.LT(1);
                    match(input,133,FOLLOW_133_in_dataClause6791); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal755_tree = (OMPTree)adaptor.create(string_literal755);
                    adaptor.addChild(root_0, string_literal755_tree);
                    }
                    char_literal756=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6793); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal756_tree = (OMPTree)adaptor.create(char_literal756);
                    adaptor.addChild(root_0, char_literal756_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6795);
                    variableList757=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList757.getTree());
                    char_literal758=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6797); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal758_tree = (OMPTree)adaptor.create(char_literal758);
                    adaptor.addChild(root_0, char_literal758_tree);
                    }

                    }
                    break;
                case 3 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1001:4: 'firstprivate' '(' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal759=(Token)input.LT(1);
                    match(input,134,FOLLOW_134_in_dataClause6803); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal759_tree = (OMPTree)adaptor.create(string_literal759);
                    adaptor.addChild(root_0, string_literal759_tree);
                    }
                    char_literal760=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6805); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal760_tree = (OMPTree)adaptor.create(char_literal760);
                    adaptor.addChild(root_0, char_literal760_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6807);
                    variableList761=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList761.getTree());
                    char_literal762=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6809); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal762_tree = (OMPTree)adaptor.create(char_literal762);
                    adaptor.addChild(root_0, char_literal762_tree);
                    }

                    }
                    break;
                case 4 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1002:4: 'lastprivate' '(' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal763=(Token)input.LT(1);
                    match(input,135,FOLLOW_135_in_dataClause6815); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal763_tree = (OMPTree)adaptor.create(string_literal763);
                    adaptor.addChild(root_0, string_literal763_tree);
                    }
                    char_literal764=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6817); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal764_tree = (OMPTree)adaptor.create(char_literal764);
                    adaptor.addChild(root_0, char_literal764_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6819);
                    variableList765=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList765.getTree());
                    char_literal766=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6821); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal766_tree = (OMPTree)adaptor.create(char_literal766);
                    adaptor.addChild(root_0, char_literal766_tree);
                    }

                    }
                    break;
                case 5 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1003:4: 'shared' '(' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal767=(Token)input.LT(1);
                    match(input,136,FOLLOW_136_in_dataClause6827); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal767_tree = (OMPTree)adaptor.create(string_literal767);
                    adaptor.addChild(root_0, string_literal767_tree);
                    }
                    char_literal768=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6829); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal768_tree = (OMPTree)adaptor.create(char_literal768);
                    adaptor.addChild(root_0, char_literal768_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6831);
                    variableList769=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList769.getTree());
                    char_literal770=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6833); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal770_tree = (OMPTree)adaptor.create(char_literal770);
                    adaptor.addChild(root_0, char_literal770_tree);
                    }

                    }
                    break;
                case 6 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1004:4: 'default' '(' 'shared' ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal771=(Token)input.LT(1);
                    match(input,73,FOLLOW_73_in_dataClause6839); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal771_tree = (OMPTree)adaptor.create(string_literal771);
                    adaptor.addChild(root_0, string_literal771_tree);
                    }
                    char_literal772=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6841); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal772_tree = (OMPTree)adaptor.create(char_literal772);
                    adaptor.addChild(root_0, char_literal772_tree);
                    }
                    string_literal773=(Token)input.LT(1);
                    match(input,136,FOLLOW_136_in_dataClause6843); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal773_tree = (OMPTree)adaptor.create(string_literal773);
                    adaptor.addChild(root_0, string_literal773_tree);
                    }
                    char_literal774=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6845); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal774_tree = (OMPTree)adaptor.create(char_literal774);
                    adaptor.addChild(root_0, char_literal774_tree);
                    }

                    }
                    break;
                case 7 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1005:4: 'default' '(' 'none' ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal775=(Token)input.LT(1);
                    match(input,73,FOLLOW_73_in_dataClause6850); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal775_tree = (OMPTree)adaptor.create(string_literal775);
                    adaptor.addChild(root_0, string_literal775_tree);
                    }
                    char_literal776=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6852); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal776_tree = (OMPTree)adaptor.create(char_literal776);
                    adaptor.addChild(root_0, char_literal776_tree);
                    }
                    string_literal777=(Token)input.LT(1);
                    match(input,137,FOLLOW_137_in_dataClause6854); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal777_tree = (OMPTree)adaptor.create(string_literal777);
                    adaptor.addChild(root_0, string_literal777_tree);
                    }
                    char_literal778=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6856); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal778_tree = (OMPTree)adaptor.create(char_literal778);
                    adaptor.addChild(root_0, char_literal778_tree);
                    }

                    }
                    break;
                case 8 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1006:4: 'reduction' '(' ( '+' | '*' | '-' | '&' | '^' | '|' | '&&' | '||' ) ':' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal779=(Token)input.LT(1);
                    match(input,138,FOLLOW_138_in_dataClause6861); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal779_tree = (OMPTree)adaptor.create(string_literal779);
                    adaptor.addChild(root_0, string_literal779_tree);
                    }
                    char_literal780=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6863); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal780_tree = (OMPTree)adaptor.create(char_literal780);
                    adaptor.addChild(root_0, char_literal780_tree);
                    }
                    set781=(Token)input.LT(1);
                    if ( input.LA(1)==29||input.LA(1)==42||(input.LA(1)>=97 && input.LA(1)<=100)||(input.LA(1)>=104 && input.LA(1)<=105) ) {
                        input.consume();
                        if ( backtracking==0 ) adaptor.addChild(root_0, adaptor.create(set781));
                        errorRecovery=false;failed=false;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        MismatchedSetException mse =
                            new MismatchedSetException(null,input);
                        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_dataClause6865);    throw mse;
                    }

                    char_literal782=(Token)input.LT(1);
                    match(input,74,FOLLOW_74_in_dataClause6900); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal782_tree = (OMPTree)adaptor.create(char_literal782);
                    adaptor.addChild(root_0, char_literal782_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6902);
                    variableList783=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList783.getTree());
                    char_literal784=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6904); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal784_tree = (OMPTree)adaptor.create(char_literal784);
                    adaptor.addChild(root_0, char_literal784_tree);
                    }

                    }
                    break;
                case 9 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1007:4: 'copyin' '(' variableList ')'
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    string_literal785=(Token)input.LT(1);
                    match(input,139,FOLLOW_139_in_dataClause6910); if (failed) return retval;
                    if ( backtracking==0 ) {
                    string_literal785_tree = (OMPTree)adaptor.create(string_literal785);
                    adaptor.addChild(root_0, string_literal785_tree);
                    }
                    char_literal786=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_dataClause6912); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal786_tree = (OMPTree)adaptor.create(char_literal786);
                    adaptor.addChild(root_0, char_literal786_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_dataClause6914);
                    variableList787=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList787.getTree());
                    char_literal788=(Token)input.LT(1);
                    match(input,66,FOLLOW_66_in_dataClause6916); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal788_tree = (OMPTree)adaptor.create(char_literal788);
                    adaptor.addChild(root_0, char_literal788_tree);
                    }

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 181, dataClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dataClause

    public static class variableList extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start variableList
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1010:1: variableList : ( Identifier | Identifier ',' variableList );
    public final variableList variableList() throws RecognitionException, OMPParserException {
        variableList retval = new variableList();
        retval.setStart(input.LT(1));
        int variableList_StartIndex = input.index();
        OMPTree root_0 = null;

        Token Identifier789=null;
        Token Identifier790=null;
        Token char_literal791=null;
        variableList variableList792 = null;


        OMPTree Identifier789_tree=null;
        OMPTree Identifier790_tree=null;
        OMPTree char_literal791_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 182) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1011:2: ( Identifier | Identifier ',' variableList )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==Identifier) ) {
                int LA197_1 = input.LA(2);

                if ( (LA197_1==40) ) {
                    alt197=2;
                }
                else if ( (LA197_1==66) ) {
                    alt197=1;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("1010:1: variableList : ( Identifier | Identifier ',' variableList );", 197, 1, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1010:1: variableList : ( Identifier | Identifier ',' variableList );", 197, 0, input);

                throw nvae;
            }
            switch (alt197) {
                case 1 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1011:4: Identifier
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    Identifier789=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_variableList6928); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier789_tree = (OMPTree)adaptor.create(Identifier789);
                    adaptor.addChild(root_0, Identifier789_tree);
                    }

                    }
                    break;
                case 2 :
                    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1012:4: Identifier ',' variableList
                    {
                    root_0 = (OMPTree)adaptor.nil();

                    Identifier790=(Token)input.LT(1);
                    match(input,Identifier,FOLLOW_Identifier_in_variableList6933); if (failed) return retval;
                    if ( backtracking==0 ) {
                    Identifier790_tree = (OMPTree)adaptor.create(Identifier790);
                    adaptor.addChild(root_0, Identifier790_tree);
                    }
                    char_literal791=(Token)input.LT(1);
                    match(input,40,FOLLOW_40_in_variableList6935); if (failed) return retval;
                    if ( backtracking==0 ) {
                    char_literal791_tree = (OMPTree)adaptor.create(char_literal791);
                    adaptor.addChild(root_0, char_literal791_tree);
                    }
                    pushFollow(FOLLOW_variableList_in_variableList6937);
                    variableList792=variableList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) adaptor.addChild(root_0, variableList792.getTree());

                    }
                    break;

            }
            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 182, variableList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end variableList

    public static class iterationStatement extends Rule {
        public void accept(OMPRuleVisitor ruleVisitor) {
        	ruleVisitor.visit(this);
        }
    };

    // $ANTLR start iterationStatement
    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1014:1: iterationStatement : 'for' '(' localVariableDeclaration ';' Identifier relationalOp expression ';' forUpdate ')' statement ;
    public final iterationStatement iterationStatement() throws RecognitionException, OMPParserException {
        iterationStatement retval = new iterationStatement();
        retval.setStart(input.LT(1));
        int iterationStatement_StartIndex = input.index();
        OMPTree root_0 = null;

        Token string_literal793=null;
        Token char_literal794=null;
        Token char_literal796=null;
        Token Identifier797=null;
        Token char_literal800=null;
        Token char_literal802=null;
        localVariableDeclaration localVariableDeclaration795 = null;

        relationalOp relationalOp798 = null;

        expression expression799 = null;

        forUpdate forUpdate801 = null;

        statement statement803 = null;


        OMPTree string_literal793_tree=null;
        OMPTree char_literal794_tree=null;
        OMPTree char_literal796_tree=null;
        OMPTree Identifier797_tree=null;
        OMPTree char_literal800_tree=null;
        OMPTree char_literal802_tree=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 183) ) { return retval; }
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1015:2: ( 'for' '(' localVariableDeclaration ';' Identifier relationalOp expression ';' forUpdate ')' statement )
            // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1015:4: 'for' '(' localVariableDeclaration ';' Identifier relationalOp expression ';' forUpdate ')' statement
            {
            root_0 = (OMPTree)adaptor.nil();

            string_literal793=(Token)input.LT(1);
            match(input,77,FOLLOW_77_in_iterationStatement6947); if (failed) return retval;
            if ( backtracking==0 ) {
            string_literal793_tree = (OMPTree)adaptor.create(string_literal793);
            adaptor.addChild(root_0, string_literal793_tree);
            }
            char_literal794=(Token)input.LT(1);
            match(input,65,FOLLOW_65_in_iterationStatement6949); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal794_tree = (OMPTree)adaptor.create(char_literal794);
            adaptor.addChild(root_0, char_literal794_tree);
            }
            pushFollow(FOLLOW_localVariableDeclaration_in_iterationStatement6951);
            localVariableDeclaration795=localVariableDeclaration();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, localVariableDeclaration795.getTree());
            char_literal796=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_iterationStatement6953); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal796_tree = (OMPTree)adaptor.create(char_literal796);
            adaptor.addChild(root_0, char_literal796_tree);
            }
            Identifier797=(Token)input.LT(1);
            match(input,Identifier,FOLLOW_Identifier_in_iterationStatement6955); if (failed) return retval;
            if ( backtracking==0 ) {
            Identifier797_tree = (OMPTree)adaptor.create(Identifier797);
            adaptor.addChild(root_0, Identifier797_tree);
            }
            pushFollow(FOLLOW_relationalOp_in_iterationStatement6957);
            relationalOp798=relationalOp();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, relationalOp798.getTree());
            pushFollow(FOLLOW_expression_in_iterationStatement6959);
            expression799=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, expression799.getTree());
            char_literal800=(Token)input.LT(1);
            match(input,25,FOLLOW_25_in_iterationStatement6961); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal800_tree = (OMPTree)adaptor.create(char_literal800);
            adaptor.addChild(root_0, char_literal800_tree);
            }
            pushFollow(FOLLOW_forUpdate_in_iterationStatement6963);
            forUpdate801=forUpdate();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, forUpdate801.getTree());
            char_literal802=(Token)input.LT(1);
            match(input,66,FOLLOW_66_in_iterationStatement6965); if (failed) return retval;
            if ( backtracking==0 ) {
            char_literal802_tree = (OMPTree)adaptor.create(char_literal802);
            adaptor.addChild(root_0, char_literal802_tree);
            }
            pushFollow(FOLLOW_statement_in_iterationStatement6967);
            statement803=statement();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) adaptor.addChild(root_0, statement803.getTree());

            }

            retval.setStop(input.LT(-1));

            if ( backtracking==0 ) {
                retval.setTree((OMPTree)adaptor.rulePostProcessing(root_0));
                adaptor.setTokenBoundaries(retval.getTree(), retval.getStart(), retval.getStop());
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            throw new OMPParserException();
            //recover(input,re);
        }
        finally {
            if ( backtracking>0 ) { memoize(input, 183, iterationStatement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end iterationStatement

    // $ANTLR start synpred1
    public final void synpred1_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:53:9: ( '@' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:53:10: '@'
        {
        match(input,72,FOLLOW_72_in_synpred1104); if (failed) return ;

        }
    }
    // $ANTLR end synpred1

    // $ANTLR start synpred113
    public final void synpred113_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:367:13: ( explicitConstructorInvocation )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:367:13: explicitConstructorInvocation
        {
        pushFollow(FOLLOW_explicitConstructorInvocation_in_synpred1132531);
        explicitConstructorInvocation();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred113

    // $ANTLR start synpred117
    public final void synpred117_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:9: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
        {
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:9: ( nonWildcardTypeArguments )?
        int alt207=2;
        int LA207_0 = input.LA(1);

        if ( (LA207_0==39) ) {
            alt207=1;
        }
        switch (alt207) {
            case 1 :
                // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:371:10: nonWildcardTypeArguments
                {
                pushFollow(FOLLOW_nonWildcardTypeArguments_in_synpred1172557);
                nonWildcardTypeArguments();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        if ( input.LA(1)==64||input.LA(1)==68 ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FOLLOW_set_in_synpred1172561);    throw mse;
        }

        pushFollow(FOLLOW_arguments_in_synpred1172569);
        arguments();
        _fsp--;
        if (failed) return ;
        match(input,25,FOLLOW_25_in_synpred1172571); if (failed) return ;

        }
    }
    // $ANTLR end synpred117

    // $ANTLR start synpred128
    public final void synpred128_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:403:9: ( annotation )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:403:9: annotation
        {
        pushFollow(FOLLOW_annotation_in_synpred1282782);
        annotation();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred128

    // $ANTLR start synpred151
    public final void synpred151_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:476:9: ( localVariableDeclarationStatement )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:476:9: localVariableDeclarationStatement
        {
        pushFollow(FOLLOW_localVariableDeclarationStatement_in_synpred1513311);
        localVariableDeclarationStatement();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred151

    // $ANTLR start synpred152
    public final void synpred152_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:477:9: ( classOrInterfaceDeclaration )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:477:9: classOrInterfaceDeclaration
        {
        pushFollow(FOLLOW_classOrInterfaceDeclaration_in_synpred1523321);
        classOrInterfaceDeclaration();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred152

    // $ANTLR start synpred153
    public final void synpred153_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:478:9: ( statement )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:478:9: statement
        {
        pushFollow(FOLLOW_statement_in_synpred1533331);
        statement();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred153

    // $ANTLR start synpred158
    public final void synpred158_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:497:54: ( 'else' statement )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:497:54: 'else' statement
        {
        match(input,76,FOLLOW_76_in_synpred1583475); if (failed) return ;
        pushFollow(FOLLOW_statement_in_synpred1583477);
        statement();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred158

    // $ANTLR start synpred163
    public final void synpred163_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:502:11: ( catches 'finally' block )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:502:11: catches 'finally' block
        {
        pushFollow(FOLLOW_catches_in_synpred1633553);
        catches();
        _fsp--;
        if (failed) return ;
        match(input,81,FOLLOW_81_in_synpred1633555); if (failed) return ;
        pushFollow(FOLLOW_block_in_synpred1633557);
        block();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred163

    // $ANTLR start synpred164
    public final void synpred164_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:503:11: ( catches )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:503:11: catches
        {
        pushFollow(FOLLOW_catches_in_synpred1643569);
        catches();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred164

    // $ANTLR start synpred180
    public final void synpred180_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:539:9: ( switchLabel )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:539:9: switchLabel
        {
        pushFollow(FOLLOW_switchLabel_in_synpred1803868);
        switchLabel();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred180

    // $ANTLR start synpred182
    public final void synpred182_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:543:9: ( 'case' constantExpression ':' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:543:9: 'case' constantExpression ':'
        {
        match(input,88,FOLLOW_88_in_synpred1823895); if (failed) return ;
        pushFollow(FOLLOW_constantExpression_in_synpred1823897);
        constantExpression();
        _fsp--;
        if (failed) return ;
        match(input,74,FOLLOW_74_in_synpred1823899); if (failed) return ;

        }
    }
    // $ANTLR end synpred182

    // $ANTLR start synpred183
    public final void synpred183_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:544:9: ( 'case' enumConstantName ':' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:544:9: 'case' enumConstantName ':'
        {
        match(input,88,FOLLOW_88_in_synpred1833909); if (failed) return ;
        pushFollow(FOLLOW_enumConstantName_in_synpred1833911);
        enumConstantName();
        _fsp--;
        if (failed) return ;
        match(input,74,FOLLOW_74_in_synpred1833913); if (failed) return ;

        }
    }
    // $ANTLR end synpred183

    // $ANTLR start synpred184
    public final void synpred184_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:550:9: ( enhancedForControl )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:550:9: enhancedForControl
        {
        pushFollow(FOLLOW_enhancedForControl_in_synpred1843956);
        enhancedForControl();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred184

    // $ANTLR start synpred188
    public final void synpred188_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:555:9: ( localVariableDeclaration )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:555:9: localVariableDeclaration
        {
        pushFollow(FOLLOW_localVariableDeclaration_in_synpred1883996);
        localVariableDeclaration();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred188

    // $ANTLR start synpred190
    public final void synpred190_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:586:32: ( assignmentOperator expression )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:586:32: assignmentOperator expression
        {
        pushFollow(FOLLOW_assignmentOperator_in_synpred1904179);
        assignmentOperator();
        _fsp--;
        if (failed) return ;
        pushFollow(FOLLOW_expression_in_synpred1904181);
        expression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred190

    // $ANTLR start synpred200
    public final void synpred200_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:599:9: ( '<' '<' '=' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:599:10: '<' '<' '='
        {
        match(input,39,FOLLOW_39_in_synpred2004297); if (failed) return ;
        match(input,39,FOLLOW_39_in_synpred2004299); if (failed) return ;
        match(input,50,FOLLOW_50_in_synpred2004301); if (failed) return ;

        }
    }
    // $ANTLR end synpred200

    // $ANTLR start synpred201
    public final void synpred201_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:604:9: ( '>' '>' '>' '=' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:604:10: '>' '>' '>' '='
        {
        match(input,41,FOLLOW_41_in_synpred2014337); if (failed) return ;
        match(input,41,FOLLOW_41_in_synpred2014339); if (failed) return ;
        match(input,41,FOLLOW_41_in_synpred2014341); if (failed) return ;
        match(input,50,FOLLOW_50_in_synpred2014343); if (failed) return ;

        }
    }
    // $ANTLR end synpred201

    // $ANTLR start synpred202
    public final void synpred202_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:611:9: ( '>' '>' '=' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:611:10: '>' '>' '='
        {
        match(input,41,FOLLOW_41_in_synpred2024382); if (failed) return ;
        match(input,41,FOLLOW_41_in_synpred2024384); if (failed) return ;
        match(input,50,FOLLOW_50_in_synpred2024386); if (failed) return ;

        }
    }
    // $ANTLR end synpred202

    // $ANTLR start synpred213
    public final void synpred213_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:655:9: ( '<' '=' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:655:10: '<' '='
        {
        match(input,39,FOLLOW_39_in_synpred2134694); if (failed) return ;
        match(input,50,FOLLOW_50_in_synpred2134696); if (failed) return ;

        }
    }
    // $ANTLR end synpred213

    // $ANTLR start synpred214
    public final void synpred214_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:658:9: ( '>' '=' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:658:10: '>' '='
        {
        match(input,41,FOLLOW_41_in_synpred2144728); if (failed) return ;
        match(input,50,FOLLOW_50_in_synpred2144730); if (failed) return ;

        }
    }
    // $ANTLR end synpred214

    // $ANTLR start synpred216
    public final void synpred216_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:666:30: ( shiftOp additiveExpression )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:666:30: shiftOp additiveExpression
        {
        pushFollow(FOLLOW_shiftOp_in_synpred2164796);
        shiftOp();
        _fsp--;
        if (failed) return ;
        pushFollow(FOLLOW_additiveExpression_in_synpred2164798);
        additiveExpression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred216

    // $ANTLR start synpred217
    public final void synpred217_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:670:9: ( '<' '<' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:670:10: '<' '<'
        {
        match(input,39,FOLLOW_39_in_synpred2174821); if (failed) return ;
        match(input,39,FOLLOW_39_in_synpred2174823); if (failed) return ;

        }
    }
    // $ANTLR end synpred217

    // $ANTLR start synpred218
    public final void synpred218_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:673:9: ( '>' '>' '>' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:673:10: '>' '>' '>'
        {
        match(input,41,FOLLOW_41_in_synpred2184855); if (failed) return ;
        match(input,41,FOLLOW_41_in_synpred2184857); if (failed) return ;
        match(input,41,FOLLOW_41_in_synpred2184859); if (failed) return ;

        }
    }
    // $ANTLR end synpred218

    // $ANTLR start synpred219
    public final void synpred219_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:678:9: ( '>' '>' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:678:10: '>' '>'
        {
        match(input,41,FOLLOW_41_in_synpred2194895); if (failed) return ;
        match(input,41,FOLLOW_41_in_synpred2194897); if (failed) return ;

        }
    }
    // $ANTLR end synpred219

    // $ANTLR start synpred221
    public final void synpred221_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:685:36: ( ( '+' | '-' ) multiplicativeExpression )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:685:36: ( '+' | '-' ) multiplicativeExpression
        {
        if ( (input.LA(1)>=104 && input.LA(1)<=105) ) {
            input.consume();
            errorRecovery=false;failed=false;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            MismatchedSetException mse =
                new MismatchedSetException(null,input);
            recoverFromMismatchedSet(input,mse,FOLLOW_set_in_synpred2214941);    throw mse;
        }

        pushFollow(FOLLOW_multiplicativeExpression_in_synpred2214949);
        multiplicativeExpression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred221

    // $ANTLR start synpred231
    public final void synpred231_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:703:9: ( castExpression )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:703:9: castExpression
        {
        pushFollow(FOLLOW_castExpression_in_synpred2315106);
        castExpression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred231

    // $ANTLR start synpred235
    public final void synpred235_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:708:8: ( '(' primitiveType ')' unaryExpression )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:708:8: '(' primitiveType ')' unaryExpression
        {
        match(input,65,FOLLOW_65_in_synpred2355144); if (failed) return ;
        pushFollow(FOLLOW_primitiveType_in_synpred2355146);
        primitiveType();
        _fsp--;
        if (failed) return ;
        match(input,66,FOLLOW_66_in_synpred2355148); if (failed) return ;
        pushFollow(FOLLOW_unaryExpression_in_synpred2355150);
        unaryExpression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred235

    // $ANTLR start synpred236
    public final void synpred236_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:709:13: ( type )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:709:13: type
        {
        pushFollow(FOLLOW_type_in_synpred2365162);
        type();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred236

    // $ANTLR start synpred238
    public final void synpred238_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:17: ( '.' Identifier )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:17: '.' Identifier
        {
        match(input,28,FOLLOW_28_in_synpred2385203); if (failed) return ;
        match(input,Identifier,FOLLOW_Identifier_in_synpred2385205); if (failed) return ;

        }
    }
    // $ANTLR end synpred238

    // $ANTLR start synpred239
    public final void synpred239_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:35: ( identifierSuffix )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:714:35: identifierSuffix
        {
        pushFollow(FOLLOW_identifierSuffix_in_synpred2395210);
        identifierSuffix();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred239

    // $ANTLR start synpred244
    public final void synpred244_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:21: ( '.' Identifier )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:21: '.' Identifier
        {
        match(input,28,FOLLOW_28_in_synpred2445259); if (failed) return ;
        match(input,Identifier,FOLLOW_Identifier_in_synpred2445261); if (failed) return ;

        }
    }
    // $ANTLR end synpred244

    // $ANTLR start synpred245
    public final void synpred245_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:39: ( identifierSuffix )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:718:39: identifierSuffix
        {
        pushFollow(FOLLOW_identifierSuffix_in_synpred2455266);
        identifierSuffix();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred245

    // $ANTLR start synpred251
    public final void synpred251_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:725:10: ( '[' expression ']' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:725:10: '[' expression ']'
        {
        match(input,47,FOLLOW_47_in_synpred2515342); if (failed) return ;
        pushFollow(FOLLOW_expression_in_synpred2515344);
        expression();
        _fsp--;
        if (failed) return ;
        match(input,48,FOLLOW_48_in_synpred2515346); if (failed) return ;

        }
    }
    // $ANTLR end synpred251

    // $ANTLR start synpred264
    public final void synpred264_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:29: ( '[' expression ']' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:751:29: '[' expression ']'
        {
        match(input,47,FOLLOW_47_in_synpred2645584); if (failed) return ;
        pushFollow(FOLLOW_expression_in_synpred2645586);
        expression();
        _fsp--;
        if (failed) return ;
        match(input,48,FOLLOW_48_in_synpred2645588); if (failed) return ;

        }
    }
    // $ANTLR end synpred264

    // $ANTLR start synpred266
    public final void synpred266_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:756:19: ( classBody )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:756:19: classBody
        {
        pushFollow(FOLLOW_classBody_in_synpred2665628);
        classBody();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred266

    // $ANTLR start synpred267
    public final void synpred267_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:768:25: ( arguments )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:768:25: arguments
        {
        pushFollow(FOLLOW_arguments_in_synpred2675711);
        arguments();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred267

    // $ANTLR start synpred273
    public final void synpred273_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:777:25: ( arguments )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:777:25: arguments
        {
        pushFollow(FOLLOW_arguments_in_synpred2735805);
        arguments();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred273

    // $ANTLR start synpred275
    public final void synpred275_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:787:4: ( parallelConstruct )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:787:4: parallelConstruct
        {
        pushFollow(FOLLOW_parallelConstruct_in_synpred2755847);
        parallelConstruct();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred275

    // $ANTLR start synpred279
    public final void synpred279_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:791:4: ( parallelForConstruct )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:791:4: parallelForConstruct
        {
        pushFollow(FOLLOW_parallelForConstruct_in_synpred2795870);
        parallelForConstruct();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred279

    // $ANTLR start synpred280
    public final void synpred280_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:792:4: ( parallelSectionsConstruct )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:792:4: parallelSectionsConstruct
        {
        pushFollow(FOLLOW_parallelSectionsConstruct_in_synpred2805876);
        parallelSectionsConstruct();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred280

    // $ANTLR start synpred285
    public final void synpred285_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:801:4: ( barrierDirective )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:801:4: barrierDirective
        {
        pushFollow(FOLLOW_barrierDirective_in_synpred2855917);
        barrierDirective();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred285

    // $ANTLR start synpred286
    public final void synpred286_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:814:25: ( parallelClause )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:814:25: parallelClause
        {
        pushFollow(FOLLOW_parallelClause_in_synpred2865973);
        parallelClause();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred286

    // $ANTLR start synpred293
    public final void synpred293_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:843:4: ( 'schedule' '(' scheduleKind ')' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:843:4: 'schedule' '(' scheduleKind ')'
        {
        match(input,118,FOLLOW_118_in_synpred2936103); if (failed) return ;
        match(input,65,FOLLOW_65_in_synpred2936105); if (failed) return ;
        pushFollow(FOLLOW_scheduleKind_in_synpred2936107);
        scheduleKind();
        _fsp--;
        if (failed) return ;
        match(input,66,FOLLOW_66_in_synpred2936109); if (failed) return ;

        }
    }
    // $ANTLR end synpred293

    // $ANTLR start synpred300
    public final void synpred300_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:873:4: ( ( sectionDirective )? structuredBlock )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:873:4: ( sectionDirective )? structuredBlock
        {
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:873:4: ( sectionDirective )?
        int alt228=2;
        int LA228_0 = input.LA(1);

        if ( (LA228_0==113) ) {
            int LA228_1 = input.LA(2);

            if ( (LA228_1==123) ) {
                alt228=1;
            }
        }
        switch (alt228) {
            case 1 :
                // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: sectionDirective
                {
                pushFollow(FOLLOW_sectionDirective_in_synpred3006236);
                sectionDirective();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_structuredBlock_in_synpred3006239);
        structuredBlock();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred300

    // $ANTLR start synpred302
    public final void synpred302_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:886:20: ( taskClause )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:886:20: taskClause
        {
        pushFollow(FOLLOW_taskClause_in_synpred3026304);
        taskClause();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred302

    // $ANTLR start synpred303
    public final void synpred303_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: ( uniqueTaskClause )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: uniqueTaskClause
        {
        pushFollow(FOLLOW_uniqueTaskClause_in_synpred3036316);
        uniqueTaskClause();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred303

    // $ANTLR start synpred304
    public final void synpred304_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: ( ( uniqueTaskClause )* )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: ( uniqueTaskClause )*
        {
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:889:4: ( uniqueTaskClause )*
        loop229:
        do {
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==75||LA229_0==125) ) {
                alt229=1;
            }


            switch (alt229) {
        	case 1 :
        	    // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:0:0: uniqueTaskClause
        	    {
        	    pushFollow(FOLLOW_uniqueTaskClause_in_synpred3046316);
        	    uniqueTaskClause();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop229;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred304

    // $ANTLR start synpred313
    public final void synpred313_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:952:24: ( regionPhrase )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:952:24: regionPhrase
        {
        pushFollow(FOLLOW_regionPhrase_in_synpred3136586);
        regionPhrase();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred313

    // $ANTLR start synpred320
    public final void synpred320_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1004:4: ( 'default' '(' 'shared' ')' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1004:4: 'default' '(' 'shared' ')'
        {
        match(input,73,FOLLOW_73_in_synpred3206839); if (failed) return ;
        match(input,65,FOLLOW_65_in_synpred3206841); if (failed) return ;
        match(input,136,FOLLOW_136_in_synpred3206843); if (failed) return ;
        match(input,66,FOLLOW_66_in_synpred3206845); if (failed) return ;

        }
    }
    // $ANTLR end synpred320

    // $ANTLR start synpred321
    public final void synpred321_fragment() throws RecognitionException, OMPParserException {   
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1005:4: ( 'default' '(' 'none' ')' )
        // ./src/ru/unn/omp/parser/javaparser/JavaOMP.g:1005:4: 'default' '(' 'none' ')'
        {
        match(input,73,FOLLOW_73_in_synpred3216850); if (failed) return ;
        match(input,65,FOLLOW_65_in_synpred3216852); if (failed) return ;
        match(input,137,FOLLOW_137_in_synpred3216854); if (failed) return ;
        match(input,66,FOLLOW_66_in_synpred3216856); if (failed) return ;

        }
    }
    // $ANTLR end synpred321

    public final boolean synpred128() {
        backtracking++;
        int start = input.mark();
        try {
            synpred128_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred304() {
        backtracking++;
        int start = input.mark();
        try {
            synpred304_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred219() {
        backtracking++;
        int start = input.mark();
        try {
            synpred219_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred303() {
        backtracking++;
        int start = input.mark();
        try {
            synpred303_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred218() {
        backtracking++;
        int start = input.mark();
        try {
            synpred218_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred293() {
        backtracking++;
        int start = input.mark();
        try {
            synpred293_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred302() {
        backtracking++;
        int start = input.mark();
        try {
            synpred302_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred300() {
        backtracking++;
        int start = input.mark();
        try {
            synpred300_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred213() {
        backtracking++;
        int start = input.mark();
        try {
            synpred213_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred164() {
        backtracking++;
        int start = input.mark();
        try {
            synpred164_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred163() {
        backtracking++;
        int start = input.mark();
        try {
            synpred163_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred216() {
        backtracking++;
        int start = input.mark();
        try {
            synpred216_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred217() {
        backtracking++;
        int start = input.mark();
        try {
            synpred217_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred214() {
        backtracking++;
        int start = input.mark();
        try {
            synpred214_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred251() {
        backtracking++;
        int start = input.mark();
        try {
            synpred251_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred313() {
        backtracking++;
        int start = input.mark();
        try {
            synpred313_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred117() {
        backtracking++;
        int start = input.mark();
        try {
            synpred117_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred113() {
        backtracking++;
        int start = input.mark();
        try {
            synpred113_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred152() {
        backtracking++;
        int start = input.mark();
        try {
            synpred152_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred221() {
        backtracking++;
        int start = input.mark();
        try {
            synpred221_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred151() {
        backtracking++;
        int start = input.mark();
        try {
            synpred151_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred153() {
        backtracking++;
        int start = input.mark();
        try {
            synpred153_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred264() {
        backtracking++;
        int start = input.mark();
        try {
            synpred264_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred266() {
        backtracking++;
        int start = input.mark();
        try {
            synpred266_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred267() {
        backtracking++;
        int start = input.mark();
        try {
            synpred267_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred320() {
        backtracking++;
        int start = input.mark();
        try {
            synpred320_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred321() {
        backtracking++;
        int start = input.mark();
        try {
            synpred321_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred158() {
        backtracking++;
        int start = input.mark();
        try {
            synpred158_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred279() {
        backtracking++;
        int start = input.mark();
        try {
            synpred279_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred273() {
        backtracking++;
        int start = input.mark();
        try {
            synpred273_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred275() {
        backtracking++;
        int start = input.mark();
        try {
            synpred275_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred190() {
        backtracking++;
        int start = input.mark();
        try {
            synpred190_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred183() {
        backtracking++;
        int start = input.mark();
        try {
            synpred183_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred231() {
        backtracking++;
        int start = input.mark();
        try {
            synpred231_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred182() {
        backtracking++;
        int start = input.mark();
        try {
            synpred182_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred180() {
        backtracking++;
        int start = input.mark();
        try {
            synpred180_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred184() {
        backtracking++;
        int start = input.mark();
        try {
            synpred184_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred239() {
        backtracking++;
        int start = input.mark();
        try {
            synpred239_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred238() {
        backtracking++;
        int start = input.mark();
        try {
            synpred238_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred188() {
        backtracking++;
        int start = input.mark();
        try {
            synpred188_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred236() {
        backtracking++;
        int start = input.mark();
        try {
            synpred236_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred235() {
        backtracking++;
        int start = input.mark();
        try {
            synpred235_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred285() {
        backtracking++;
        int start = input.mark();
        try {
            synpred285_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred286() {
        backtracking++;
        int start = input.mark();
        try {
            synpred286_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred1() {
        backtracking++;
        int start = input.mark();
        try {
            synpred1_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred280() {
        backtracking++;
        int start = input.mark();
        try {
            synpred280_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred200() {
        backtracking++;
        int start = input.mark();
        try {
            synpred200_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred201() {
        backtracking++;
        int start = input.mark();
        try {
            synpred201_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred202() {
        backtracking++;
        int start = input.mark();
        try {
            synpred202_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred244() {
        backtracking++;
        int start = input.mark();
        try {
            synpred244_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred245() {
        backtracking++;
        int start = input.mark();
        try {
            synpred245_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }  catch (OMPParserException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_annotations_in_compilationUnit108 = new BitSet(new long[]{0x0000201FC9000020L,0x0000000000000100L});
    public static final BitSet FOLLOW_packageDeclaration_in_compilationUnit122 = new BitSet(new long[]{0x0000201FCE000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit124 = new BitSet(new long[]{0x0000201FCE000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_typeDeclaration_in_compilationUnit127 = new BitSet(new long[]{0x0000201FCA000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_compilationUnit143 = new BitSet(new long[]{0x0000201FCA000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_typeDeclaration_in_compilationUnit145 = new BitSet(new long[]{0x0000201FCA000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_packageDeclaration_in_compilationUnit166 = new BitSet(new long[]{0x0000201FCE000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_importDeclaration_in_compilationUnit170 = new BitSet(new long[]{0x0000201FCE000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_typeDeclaration_in_compilationUnit173 = new BitSet(new long[]{0x0000201FCA000022L,0x0000000000000100L});
    public static final BitSet FOLLOW_24_in_packageDeclaration193 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedName_in_packageDeclaration195 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_packageDeclaration197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_importDeclaration220 = new BitSet(new long[]{0x0000000008000010L});
    public static final BitSet FOLLOW_27_in_importDeclaration222 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedName_in_importDeclaration225 = new BitSet(new long[]{0x0000000012000000L});
    public static final BitSet FOLLOW_28_in_importDeclaration228 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_importDeclaration230 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_importDeclaration234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_typeDeclaration267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceModifiers_in_classOrInterfaceDeclaration290 = new BitSet(new long[]{0x0000201000000020L,0x0000000000000100L});
    public static final BitSet FOLLOW_classDeclaration_in_classOrInterfaceDeclaration293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceModifier_in_classOrInterfaceModifiers321 = new BitSet(new long[]{0x0000000FC8000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_annotation_in_classOrInterfaceModifier341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_classOrInterfaceModifier354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_classOrInterfaceModifier369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_classOrInterfaceModifier381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_classOrInterfaceModifier395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_classOrInterfaceModifier408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_classOrInterfaceModifier423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_classOrInterfaceModifier439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_modifiers461 = new BitSet(new long[]{0x0078000FC8000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_classDeclaration481 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_classDeclaration491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_normalClassDeclaration514 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_normalClassDeclaration516 = new BitSet(new long[]{0x000008E000000000L});
    public static final BitSet FOLLOW_typeParameters_in_normalClassDeclaration519 = new BitSet(new long[]{0x0000086000000000L});
    public static final BitSet FOLLOW_37_in_normalClassDeclaration532 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_normalClassDeclaration534 = new BitSet(new long[]{0x0000084000000000L});
    public static final BitSet FOLLOW_38_in_normalClassDeclaration547 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_typeList_in_normalClassDeclaration549 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_classBody_in_normalClassDeclaration561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_typeParameters584 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters586 = new BitSet(new long[]{0x0000030000000000L});
    public static final BitSet FOLLOW_40_in_typeParameters589 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters591 = new BitSet(new long[]{0x0000030000000000L});
    public static final BitSet FOLLOW_41_in_typeParameters595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_typeParameter614 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_typeParameter617 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_typeBound_in_typeParameter619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeBound648 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_42_in_typeBound651 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_typeBound653 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_ENUM_in_enumDeclaration674 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_enumDeclaration676 = new BitSet(new long[]{0x0000084000000000L});
    public static final BitSet FOLLOW_38_in_enumDeclaration679 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_typeList_in_enumDeclaration681 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_enumBody_in_enumDeclaration685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_enumBody704 = new BitSet(new long[]{0x0000110002000010L,0x0000000000000100L});
    public static final BitSet FOLLOW_enumConstants_in_enumBody706 = new BitSet(new long[]{0x0000110002000000L});
    public static final BitSet FOLLOW_40_in_enumBody709 = new BitSet(new long[]{0x0000100002000000L});
    public static final BitSet FOLLOW_enumBodyDeclarations_in_enumBody712 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_enumBody715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumConstant_in_enumConstants734 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_enumConstants737 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000100L});
    public static final BitSet FOLLOW_enumConstant_in_enumConstants739 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_annotations_in_enumConstant764 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_enumConstant767 = new BitSet(new long[]{0x0000080000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_enumConstant770 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_classBody_in_enumConstant775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_enumBodyDeclarations800 = new BitSet(new long[]{0x7FF8689FCA000032L,0x0000000000000100L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_enumBodyDeclarations803 = new BitSet(new long[]{0x7FF8689FCA000032L,0x0000000000000100L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration828 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_normalInterfaceDeclaration861 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_normalInterfaceDeclaration863 = new BitSet(new long[]{0x000008A000000000L});
    public static final BitSet FOLLOW_typeParameters_in_normalInterfaceDeclaration865 = new BitSet(new long[]{0x0000082000000000L});
    public static final BitSet FOLLOW_37_in_normalInterfaceDeclaration869 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_typeList_in_normalInterfaceDeclaration871 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_interfaceBody_in_normalInterfaceDeclaration875 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeList898 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_typeList901 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_typeList903 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_43_in_classBody928 = new BitSet(new long[]{0x7FF8789FCA000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_classBody930 = new BitSet(new long[]{0x7FF8789FCA000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_44_in_classBody933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_interfaceBody956 = new BitSet(new long[]{0x7FF8709FCA000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_interfaceBodyDeclaration_in_interfaceBody958 = new BitSet(new long[]{0x7FF8709FCA000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_44_in_interfaceBody961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_classBodyDeclaration980 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_classBodyDeclaration990 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_classBodyDeclaration993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_classBodyDeclaration1003 = new BitSet(new long[]{0x7F80609000000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_memberDecl_in_classBodyDeclaration1005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_genericMethodOrConstructorDecl_in_memberDecl1028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberDeclaration_in_memberDecl1038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_memberDecl1048 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_memberDecl1050 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_voidMethodDeclaratorRest_in_memberDecl1052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_memberDecl1062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_constructorDeclaratorRest_in_memberDecl1064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_memberDecl1074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_memberDecl1084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_memberDeclaration1107 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_methodDeclaration_in_memberDeclaration1110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldDeclaration_in_memberDeclaration1114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_genericMethodOrConstructorDecl1134 = new BitSet(new long[]{0x7F80400000000010L});
    public static final BitSet FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl1136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_genericMethodOrConstructorRest1160 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_46_in_genericMethodOrConstructorRest1164 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_genericMethodOrConstructorRest1167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest1169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_genericMethodOrConstructorRest1179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest1181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_methodDeclaration1200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_methodDeclaratorRest_in_methodDeclaration1202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarators_in_fieldDeclaration1221 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_fieldDeclaration1223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_interfaceBodyDeclaration1250 = new BitSet(new long[]{0x7F80609000000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration1252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_interfaceBodyDeclaration1262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl1281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl1291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_interfaceMemberDecl1301 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_interfaceMemberDecl1303 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl1305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_interfaceMemberDecl1315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_interfaceMemberDecl1325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_interfaceMethodOrFieldDecl1348 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_interfaceMethodOrFieldDecl1350 = new BitSet(new long[]{0x0004800000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl1352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaratorsRest_in_interfaceMethodOrFieldRest1375 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_interfaceMethodOrFieldRest1377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest1387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_methodDeclaratorRest1410 = new BitSet(new long[]{0x0002880002000000L});
    public static final BitSet FOLLOW_47_in_methodDeclaratorRest1413 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_methodDeclaratorRest1415 = new BitSet(new long[]{0x0002880002000000L});
    public static final BitSet FOLLOW_49_in_methodDeclaratorRest1428 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_methodDeclaratorRest1430 = new BitSet(new long[]{0x0000080002000000L});
    public static final BitSet FOLLOW_methodBody_in_methodDeclaratorRest1446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_methodDeclaratorRest1460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_voidMethodDeclaratorRest1493 = new BitSet(new long[]{0x0002080002000000L});
    public static final BitSet FOLLOW_49_in_voidMethodDeclaratorRest1496 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest1498 = new BitSet(new long[]{0x0000080002000000L});
    public static final BitSet FOLLOW_methodBody_in_voidMethodDeclaratorRest1514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_voidMethodDeclaratorRest1528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest1561 = new BitSet(new long[]{0x0002800002000000L});
    public static final BitSet FOLLOW_47_in_interfaceMethodDeclaratorRest1564 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_interfaceMethodDeclaratorRest1566 = new BitSet(new long[]{0x0002800002000000L});
    public static final BitSet FOLLOW_49_in_interfaceMethodDeclaratorRest1571 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest1573 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_interfaceMethodDeclaratorRest1577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceGenericMethodDecl1600 = new BitSet(new long[]{0x7F80400000000010L});
    public static final BitSet FOLLOW_type_in_interfaceGenericMethodDecl1603 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_46_in_interfaceGenericMethodDecl1607 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_interfaceGenericMethodDecl1610 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl1620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest1643 = new BitSet(new long[]{0x0002000002000000L});
    public static final BitSet FOLLOW_49_in_voidInterfaceMethodDeclaratorRest1646 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest1648 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_voidInterfaceMethodDeclaratorRest1652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_constructorDeclaratorRest1675 = new BitSet(new long[]{0x0002080000000000L});
    public static final BitSet FOLLOW_49_in_constructorDeclaratorRest1678 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_constructorDeclaratorRest1680 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_constructorBody_in_constructorDeclaratorRest1684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_constantDeclarator1703 = new BitSet(new long[]{0x0004800000000000L});
    public static final BitSet FOLLOW_constantDeclaratorRest_in_constantDeclarator1705 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarator_in_variableDeclarators1728 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_variableDeclarators1731 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableDeclarator_in_variableDeclarators1733 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_variableDeclarator1754 = new BitSet(new long[]{0x0004000000000002L});
    public static final BitSet FOLLOW_50_in_variableDeclarator1757 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_variableInitializer_in_variableDeclarator1759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaratorRest_in_constantDeclaratorsRest1784 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_constantDeclaratorsRest1787 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_constantDeclarator_in_constantDeclaratorsRest1789 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_47_in_constantDeclaratorRest1811 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_constantDeclaratorRest1813 = new BitSet(new long[]{0x0004800000000000L});
    public static final BitSet FOLLOW_50_in_constantDeclaratorRest1817 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_variableInitializer_in_constantDeclaratorRest1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_variableDeclaratorId1842 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_variableDeclaratorId1845 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_variableDeclaratorId1847 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_arrayInitializer_in_variableInitializer1868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_variableInitializer1878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_arrayInitializer1905 = new BitSet(new long[]{0x7F80580000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_variableInitializer_in_arrayInitializer1908 = new BitSet(new long[]{0x0000110000000000L});
    public static final BitSet FOLLOW_40_in_arrayInitializer1911 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_variableInitializer_in_arrayInitializer1913 = new BitSet(new long[]{0x0000110000000000L});
    public static final BitSet FOLLOW_40_in_arrayInitializer1918 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_arrayInitializer1925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_modifier1944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_modifier1954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_modifier1964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_modifier1974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_modifier1984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_modifier1994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_modifier2004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_modifier2014 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_modifier2024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_modifier2034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_modifier2044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_modifier2054 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedName_in_packageOrTypeName2073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_enumConstantName2092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedName_in_typeName2111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_type2125 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_type2128 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_type2130 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_primitiveType_in_type2137 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_type2140 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_type2142 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_Identifier_in_classOrInterfaceType2155 = new BitSet(new long[]{0x0000008010000002L});
    public static final BitSet FOLLOW_typeArguments_in_classOrInterfaceType2158 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_28_in_classOrInterfaceType2163 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_classOrInterfaceType2165 = new BitSet(new long[]{0x0000008010000002L});
    public static final BitSet FOLLOW_typeArguments_in_classOrInterfaceType2168 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_set_in_primitiveType0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_variableModifier2278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_variableModifier2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_typeArguments2307 = new BitSet(new long[]{0xFF80000000000010L});
    public static final BitSet FOLLOW_typeArgument_in_typeArguments2309 = new BitSet(new long[]{0x0000030000000000L});
    public static final BitSet FOLLOW_40_in_typeArguments2312 = new BitSet(new long[]{0xFF80000000000010L});
    public static final BitSet FOLLOW_typeArgument_in_typeArguments2314 = new BitSet(new long[]{0x0000030000000000L});
    public static final BitSet FOLLOW_41_in_typeArguments2318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeArgument2341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_typeArgument2351 = new BitSet(new long[]{0x0000002000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_set_in_typeArgument2354 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_typeArgument2362 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedName_in_qualifiedNameList2387 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_qualifiedNameList2390 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_qualifiedName_in_qualifiedNameList2392 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_65_in_formalParameters2413 = new BitSet(new long[]{0x7F80000400000010L,0x0000000000000104L});
    public static final BitSet FOLLOW_formalParameterDecls_in_formalParameters2415 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_formalParameters2418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_formalParameterDecls2441 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_formalParameterDecls2443 = new BitSet(new long[]{0x0000000000000010L,0x0000000000000008L});
    public static final BitSet FOLLOW_formalParameterDeclsRest_in_formalParameterDecls2445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest2468 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_formalParameterDeclsRest2471 = new BitSet(new long[]{0x7F80000400000010L,0x0000000000000100L});
    public static final BitSet FOLLOW_formalParameterDecls_in_formalParameterDeclsRest2473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_formalParameterDeclsRest2485 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_formalParameterDeclsRest2487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_methodBody2510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_constructorBody2529 = new BitSet(new long[]{0x7F90789FCA001FF0L,0x0003F300007DE9F3L});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_constructorBody2531 = new BitSet(new long[]{0x7F90781FCA001FF0L,0x0003F300007DE9F3L});
    public static final BitSet FOLLOW_blockStatement_in_constructorBody2534 = new BitSet(new long[]{0x7F90781FCA001FF0L,0x0003F300007DE9F3L});
    public static final BitSet FOLLOW_44_in_constructorBody2537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation2557 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000011L});
    public static final BitSet FOLLOW_set_in_explicitConstructorInvocation2561 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_explicitConstructorInvocation2569 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_explicitConstructorInvocation2571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_explicitConstructorInvocation2581 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_explicitConstructorInvocation2583 = new BitSet(new long[]{0x0000008000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation2585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_explicitConstructorInvocation2588 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_explicitConstructorInvocation2590 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_explicitConstructorInvocation2592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_qualifiedName2612 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_28_in_qualifiedName2615 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_qualifiedName2617 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_integerLiteral_in_literal2643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FloatingPointLiteral_in_literal2653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CharacterLiteral_in_literal2663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_StringLiteral_in_literal2673 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanLiteral_in_literal2683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_literal2693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_integerLiteral0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_booleanLiteral0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_annotations2782 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_annotation2802 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_annotationName_in_annotation2804 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_annotation2808 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000001F7L});
    public static final BitSet FOLLOW_elementValuePairs_in_annotation2812 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_elementValue_in_annotation2816 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_annotation2821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_annotationName2845 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_28_in_annotationName2848 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_annotationName2850 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_elementValuePair_in_elementValuePairs2871 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_elementValuePairs2874 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_elementValuePair_in_elementValuePairs2876 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_Identifier_in_elementValuePair2897 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_elementValuePair2899 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000001F3L});
    public static final BitSet FOLLOW_elementValue_in_elementValuePair2901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_elementValue2924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_elementValue2934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValueArrayInitializer_in_elementValue2944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_elementValueArrayInitializer2967 = new BitSet(new long[]{0x7F80590000000FD0L,0x0001F300000001F3L});
    public static final BitSet FOLLOW_elementValue_in_elementValueArrayInitializer2970 = new BitSet(new long[]{0x0000110000000000L});
    public static final BitSet FOLLOW_40_in_elementValueArrayInitializer2973 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000001F3L});
    public static final BitSet FOLLOW_elementValue_in_elementValueArrayInitializer2975 = new BitSet(new long[]{0x0000110000000000L});
    public static final BitSet FOLLOW_40_in_elementValueArrayInitializer2982 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_elementValueArrayInitializer2986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_annotationTypeDeclaration3009 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_annotationTypeDeclaration3011 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_annotationTypeDeclaration3013 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_annotationTypeBody_in_annotationTypeDeclaration3015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_annotationTypeBody3038 = new BitSet(new long[]{0x7FF8301FC8000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_annotationTypeElementDeclaration_in_annotationTypeBody3041 = new BitSet(new long[]{0x7FF8301FC8000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_44_in_annotationTypeBody3045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_annotationTypeElementDeclaration3068 = new BitSet(new long[]{0x7F80201000000030L,0x0000000000000100L});
    public static final BitSet FOLLOW_annotationTypeElementRest_in_annotationTypeElementDeclaration3070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_annotationTypeElementRest3093 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_annotationMethodOrConstantRest_in_annotationTypeElementRest3095 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_annotationTypeElementRest3097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_annotationTypeElementRest3107 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25_in_annotationTypeElementRest3109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_annotationTypeElementRest3120 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25_in_annotationTypeElementRest3122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_annotationTypeElementRest3133 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25_in_annotationTypeElementRest3135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_annotationTypeElementRest3146 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25_in_annotationTypeElementRest3148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMethodRest_in_annotationMethodOrConstantRest3172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationConstantRest_in_annotationMethodOrConstantRest3182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_annotationMethodRest3205 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_annotationMethodRest3207 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_annotationMethodRest3209 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_defaultValue_in_annotationMethodRest3212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarators_in_annotationConstantRest3237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_defaultValue3260 = new BitSet(new long[]{0x7F80480000000FD0L,0x0001F300000001F3L});
    public static final BitSet FOLLOW_elementValue_in_defaultValue3262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_block3283 = new BitSet(new long[]{0x7F90781FCA001FF0L,0x0003F300007DE9F3L});
    public static final BitSet FOLLOW_blockStatement_in_block3285 = new BitSet(new long[]{0x7F90781FCA001FF0L,0x0003F300007DE9F3L});
    public static final BitSet FOLLOW_44_in_block3288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclarationStatement_in_blockStatement3311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_blockStatement3321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_blockStatement3331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_openmpDirective_in_blockStatement3340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_localVariableDeclarationStatement3364 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_localVariableDeclarationStatement3366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_localVariableDeclaration3385 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_localVariableDeclaration3387 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableDeclarators_in_localVariableDeclaration3389 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifier_in_variableModifiers3412 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_block_in_statement3430 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSERT_in_statement3440 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_statement3442 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_statement3445 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_statement3447 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_statement3461 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_statement3463 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_statement3465 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_statement3475 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_statement3477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_statement3489 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_statement3491 = new BitSet(new long[]{0x7F80400402000FD0L,0x0001F300000001F3L});
    public static final BitSet FOLLOW_forControl_in_statement3493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_statement3495 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_statement3497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_statement3507 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_statement3509 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_statement3511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_statement3521 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_statement3523 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_statement3525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_statement3527 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_statement3539 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_statement3541 = new BitSet(new long[]{0x0000000000000000L,0x0000000000820000L});
    public static final BitSet FOLLOW_catches_in_statement3553 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_statement3555 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_statement3557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_statement3569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_statement3583 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_statement3585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_statement3605 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_statement3607 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_statement3609 = new BitSet(new long[]{0x0000100000000000L,0x0000000001000200L});
    public static final BitSet FOLLOW_switchBlockStatementGroups_in_statement3611 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_statement3613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_statement3623 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_statement3625 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_statement3627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_statement3637 = new BitSet(new long[]{0x7F80400002000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_statement3639 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_statement3652 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_statement3654 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_statement3666 = new BitSet(new long[]{0x0000000002000010L});
    public static final BitSet FOLLOW_Identifier_in_statement3668 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_statement3681 = new BitSet(new long[]{0x0000000002000010L});
    public static final BitSet FOLLOW_Identifier_in_statement3683 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_statement3696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementExpression_in_statement3707 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_statement3709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_statement3719 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_statement3721 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_statement3723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_openmpConstruct_in_statement3731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catchClause_in_catches3754 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_catchClause_in_catches3757 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_catchClause3782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_catchClause3784 = new BitSet(new long[]{0x7F80000400000010L,0x0000000000000100L});
    public static final BitSet FOLLOW_formalParameter_in_catchClause3786 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_catchClause3788 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_catchClause3790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_formalParameter3809 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_formalParameter3811 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_formalParameter3813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups3841 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000200L});
    public static final BitSet FOLLOW_switchLabel_in_switchBlockStatementGroup3868 = new BitSet(new long[]{0x7F90681FCA001FF2L,0x0003F300017DEBF3L});
    public static final BitSet FOLLOW_blockStatement_in_switchBlockStatementGroup3871 = new BitSet(new long[]{0x7F90681FCA001FF2L,0x0003F300007DE9F3L});
    public static final BitSet FOLLOW_88_in_switchLabel3895 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_constantExpression_in_switchLabel3897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_switchLabel3899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_switchLabel3909 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_enumConstantName_in_switchLabel3911 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_switchLabel3913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_switchLabel3923 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_switchLabel3925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enhancedForControl_in_forControl3956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forInit_in_forControl3966 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_forControl3969 = new BitSet(new long[]{0x7F80400002000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_forControl3971 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_forControl3974 = new BitSet(new long[]{0x7F80400000000FD2L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_forUpdate_in_forControl3976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_forInit3996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionList_in_forInit4006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_enhancedForControl4029 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_enhancedForControl4031 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_enhancedForControl4033 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_enhancedForControl4035 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_enhancedForControl4037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionList_in_forUpdate4056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parExpression4077 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_parExpression4079 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_parExpression4081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionList4104 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_40_in_expressionList4107 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_expressionList4109 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_expression_in_statementExpression4130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_constantExpression4153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_expression4176 = new BitSet(new long[]{0x0004028000000002L,0x00000001FE000000L});
    public static final BitSet FOLLOW_assignmentOperator_in_expression4179 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_expression4181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_assignmentOperator4206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_assignmentOperator4216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_assignmentOperator4226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_assignmentOperator4236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_assignmentOperator4246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_assignmentOperator4256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_assignmentOperator4266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_assignmentOperator4276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_assignmentOperator4286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_assignmentOperator4307 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_assignmentOperator4311 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_assignmentOperator4315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_assignmentOperator4349 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_assignmentOperator4353 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_assignmentOperator4357 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_assignmentOperator4361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_assignmentOperator4392 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_assignmentOperator4396 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_assignmentOperator4400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalOrExpression_in_conditionalExpression4429 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_63_in_conditionalExpression4433 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_conditionalExpression4435 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_conditionalExpression4437 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_conditionalExpression4439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalAndExpression_in_conditionalOrExpression4461 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_conditionalOrExpression4465 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_conditionalAndExpression_in_conditionalOrExpression4467 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_inclusiveOrExpression_in_conditionalAndExpression4489 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_98_in_conditionalAndExpression4493 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_inclusiveOrExpression_in_conditionalAndExpression4495 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression4517 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_inclusiveOrExpression4521 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression4523 = new BitSet(new long[]{0x0000000000000002L,0x0000000800000000L});
    public static final BitSet FOLLOW_andExpression_in_exclusiveOrExpression4545 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_100_in_exclusiveOrExpression4549 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_andExpression_in_exclusiveOrExpression4551 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_equalityExpression_in_andExpression4573 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_42_in_andExpression4577 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_equalityExpression_in_andExpression4579 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_instanceOfExpression_in_equalityExpression4601 = new BitSet(new long[]{0x0000000000000002L,0x0000006000000000L});
    public static final BitSet FOLLOW_set_in_equalityExpression4605 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_instanceOfExpression_in_equalityExpression4613 = new BitSet(new long[]{0x0000000000000002L,0x0000006000000000L});
    public static final BitSet FOLLOW_relationalExpression_in_instanceOfExpression4635 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_instanceOfExpression4638 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_type_in_instanceOfExpression4640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_shiftExpression_in_relationalExpression4661 = new BitSet(new long[]{0x0000028000000002L});
    public static final BitSet FOLLOW_relationalOp_in_relationalExpression4665 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_shiftExpression_in_relationalExpression4667 = new BitSet(new long[]{0x0000028000000002L});
    public static final BitSet FOLLOW_39_in_relationalOp4702 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_relationalOp4706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_relationalOp4736 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_relationalOp4740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_relationalOp4761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_relationalOp4772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_shiftExpression4792 = new BitSet(new long[]{0x0000028000000002L});
    public static final BitSet FOLLOW_shiftOp_in_shiftExpression4796 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_additiveExpression_in_shiftExpression4798 = new BitSet(new long[]{0x0000028000000002L});
    public static final BitSet FOLLOW_39_in_shiftOp4829 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_shiftOp4833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_shiftOp4865 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_shiftOp4869 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_shiftOp4873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_shiftOp4903 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_shiftOp4907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_additiveExpression4937 = new BitSet(new long[]{0x0000000000000002L,0x0000030000000000L});
    public static final BitSet FOLLOW_set_in_additiveExpression4941 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_additiveExpression4949 = new BitSet(new long[]{0x0000000000000002L,0x0000030000000000L});
    public static final BitSet FOLLOW_unaryExpression_in_multiplicativeExpression4971 = new BitSet(new long[]{0x0000000020000002L,0x00000C0000000000L});
    public static final BitSet FOLLOW_set_in_multiplicativeExpression4975 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_multiplicativeExpression4989 = new BitSet(new long[]{0x0000000020000002L,0x00000C0000000000L});
    public static final BitSet FOLLOW_104_in_unaryExpression5015 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression5017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_unaryExpression5027 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression5029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_unaryExpression5039 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression5041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_unaryExpression5051 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression5053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression5063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_unaryExpressionNotPlusMinus5082 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus5084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_unaryExpressionNotPlusMinus5094 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus5096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_castExpression_in_unaryExpressionNotPlusMinus5106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_unaryExpressionNotPlusMinus5116 = new BitSet(new long[]{0x0000800010000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_selector_in_unaryExpressionNotPlusMinus5118 = new BitSet(new long[]{0x0000800010000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_set_in_unaryExpressionNotPlusMinus5121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_castExpression5144 = new BitSet(new long[]{0x7F80000000000000L});
    public static final BitSet FOLLOW_primitiveType_in_castExpression5146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_castExpression5148 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_castExpression5150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_castExpression5159 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_type_in_castExpression5162 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_expression_in_castExpression5166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_castExpression5169 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001C000000000F3L});
    public static final BitSet FOLLOW_unaryExpressionNotPlusMinus_in_castExpression5171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_primary5190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_primary5200 = new BitSet(new long[]{0x0000800010000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_primary5203 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_primary5205 = new BitSet(new long[]{0x0000800010000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_identifierSuffix_in_primary5210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_primary5222 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_superSuffix_in_primary5224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_literal_in_primary5234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_primary5244 = new BitSet(new long[]{0x7F80008000000010L});
    public static final BitSet FOLLOW_creator_in_primary5246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_primary5256 = new BitSet(new long[]{0x0000800010000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_primary5259 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_primary5261 = new BitSet(new long[]{0x0000800010000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_identifierSuffix_in_primary5266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_primary5278 = new BitSet(new long[]{0x0000800010000000L});
    public static final BitSet FOLLOW_47_in_primary5281 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_primary5283 = new BitSet(new long[]{0x0000800010000000L});
    public static final BitSet FOLLOW_28_in_primary5287 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_primary5289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_primary5299 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_primary5301 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_primary5303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_identifierSuffix5323 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_identifierSuffix5325 = new BitSet(new long[]{0x0000800010000000L});
    public static final BitSet FOLLOW_28_in_identifierSuffix5329 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_identifierSuffix5331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_identifierSuffix5342 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_identifierSuffix5344 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_identifierSuffix5346 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_arguments_in_identifierSuffix5359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_identifierSuffix5369 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_identifierSuffix5371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_identifierSuffix5381 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_explicitGenericInvocation_in_identifierSuffix5383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_identifierSuffix5393 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_identifierSuffix5395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_identifierSuffix5405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_identifierSuffix5407 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_identifierSuffix5409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_identifierSuffix5419 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_112_in_identifierSuffix5421 = new BitSet(new long[]{0x0000008000000010L});
    public static final BitSet FOLLOW_innerCreator_in_identifierSuffix5423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_creator5442 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_createdName_in_creator5444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_classCreatorRest_in_creator5446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createdName_in_creator5456 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_arrayCreatorRest_in_creator5459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classCreatorRest_in_creator5463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_createdName5483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_createdName5493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_innerCreator5517 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_innerCreator5521 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_classCreatorRest_in_innerCreator5523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_arrayCreatorRest5542 = new BitSet(new long[]{0x7F81400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_48_in_arrayCreatorRest5556 = new BitSet(new long[]{0x0000880000000000L});
    public static final BitSet FOLLOW_47_in_arrayCreatorRest5559 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_arrayCreatorRest5561 = new BitSet(new long[]{0x0000880000000000L});
    public static final BitSet FOLLOW_arrayInitializer_in_arrayCreatorRest5565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_arrayCreatorRest5579 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_arrayCreatorRest5581 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_arrayCreatorRest5584 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_arrayCreatorRest5586 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_arrayCreatorRest5588 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_arrayCreatorRest5593 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_arrayCreatorRest5595 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_arguments_in_classCreatorRest5626 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_classBody_in_classCreatorRest5628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_explicitGenericInvocation5652 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_explicitGenericInvocation5654 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_explicitGenericInvocation5656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_nonWildcardTypeArguments5679 = new BitSet(new long[]{0x7F80000000000010L});
    public static final BitSet FOLLOW_typeList_in_nonWildcardTypeArguments5681 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_nonWildcardTypeArguments5683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_selector5706 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_selector5708 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_selector5711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_selector5723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_68_in_selector5725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_selector5735 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64_in_selector5737 = new BitSet(new long[]{0x0000000010000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_superSuffix_in_selector5739 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_selector5749 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_112_in_selector5751 = new BitSet(new long[]{0x0000008000000010L});
    public static final BitSet FOLLOW_innerCreator_in_selector5753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_selector5763 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_selector5765 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_selector5767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_superSuffix5790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_superSuffix5800 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_superSuffix5802 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_superSuffix5805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_arguments5826 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F7L});
    public static final BitSet FOLLOW_expressionList_in_arguments5828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_arguments5831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelConstruct_in_openmpConstruct5847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forConstruct_in_openmpConstruct5852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sectionsConstruct_in_openmpConstruct5858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_singleConstruct_in_openmpConstruct5864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelForConstruct_in_openmpConstruct5870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelSectionsConstruct_in_openmpConstruct5876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_taskConstruct_in_openmpConstruct5882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_masterConstruct_in_openmpConstruct5887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_criticalConstruct_in_openmpConstruct5893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_atomicConstruct_in_openmpConstruct5899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_orderedConstruct_in_openmpConstruct5905 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_barrierDirective_in_openmpDirective5917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_taskwaitDirective_in_openmpDirective5923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_structuredBlock5934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelDirective_in_parallelConstruct5953 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_parallelConstruct5955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_parallelDirective5968 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_114_in_parallelDirective5970 = new BitSet(new long[]{0x0000000100000002L,0x0008000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_parallelClause_in_parallelDirective5973 = new BitSet(new long[]{0x0000000100000002L,0x0008000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_uniqueParallelClause_in_parallelClause5986 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dataClause_in_parallelClause5991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_uniqueParallelClause6003 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_uniqueParallelClause6005 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_uniqueParallelClause6007 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_uniqueParallelClause6009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_uniqueParallelClause6014 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_uniqueParallelClause6016 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_uniqueParallelClause6018 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_uniqueParallelClause6020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forDirective_in_forConstruct6043 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_iterationStatement_in_forConstruct6045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_forDirective6056 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_forDirective6058 = new BitSet(new long[]{0x0000000100000002L,0x0070000000000200L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_forClause_in_forDirective6060 = new BitSet(new long[]{0x0000000100000002L,0x0070000000000200L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_uniqueForClause_in_forClause6073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dataClause_in_forClause6079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_forClause6085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_uniqueForClause6097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_uniqueForClause6103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_uniqueForClause6105 = new BitSet(new long[]{0x0000000008000000L,0x0380000000000000L});
    public static final BitSet FOLLOW_scheduleKind_in_uniqueForClause6107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_uniqueForClause6109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_uniqueForClause6114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_uniqueForClause6116 = new BitSet(new long[]{0x0000000008000000L,0x0380000000000000L});
    public static final BitSet FOLLOW_scheduleKind_in_uniqueForClause6118 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_uniqueForClause6120 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_uniqueForClause6122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_uniqueForClause6124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_scheduleKind0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sectionsDirective_in_sectionsConstruct6168 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_sectionScope_in_sectionsConstruct6170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_sectionsDirective6182 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_122_in_sectionsDirective6184 = new BitSet(new long[]{0x0000000100000002L,0x0010000000000200L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_sectionsClause_in_sectionsDirective6186 = new BitSet(new long[]{0x0000000100000002L,0x0010000000000200L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_dataClause_in_sectionsClause6201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_sectionsClause6207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_sectionScope6219 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_sectionSequence_in_sectionScope6221 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_sectionScope6223 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sectionDirective_in_sectionSequence6236 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_sectionSequence6239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sectionDirective_in_sectionSequence6244 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_sectionSequence6247 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_sectionSequence_in_sectionSequence6249 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_sectionDirective_in_sectionSequence6251 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_sectionSequence6253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_sectionDirective6266 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_123_in_sectionDirective6268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_taskDirective_in_taskConstruct6287 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_taskConstruct6289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_taskDirective6299 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_124_in_taskDirective6301 = new BitSet(new long[]{0x0000000100000002L,0x2000000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_taskClause_in_taskDirective6304 = new BitSet(new long[]{0x0000000100000002L,0x2000000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_uniqueTaskClause_in_taskClause6316 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000800L});
    public static final BitSet FOLLOW_dataClause_in_taskClause6322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_uniqueTaskClause6331 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_uniqueTaskClause6333 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_uniqueTaskClause6335 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_uniqueTaskClause6337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_125_in_uniqueTaskClause6342 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_singleDirective_in_singleConstruct6363 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_singleConstruct6365 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_singleDirective6378 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_126_in_singleDirective6380 = new BitSet(new long[]{0x0000000100000002L,0x0010000000000200L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_singleClause_in_singleDirective6382 = new BitSet(new long[]{0x0000000100000002L,0x0010000000000200L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_dataClause_in_singleClause6397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_singleClause6402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelForDirective_in_parallelForConstruct6418 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_iterationStatement_in_parallelForConstruct6420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_parallelForDirective6433 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_114_in_parallelForDirective6435 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_parallelForDirective6437 = new BitSet(new long[]{0x0000000100000002L,0x0068000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_parallelForClause_in_parallelForDirective6439 = new BitSet(new long[]{0x0000000100000002L,0x0068000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_uniqueParallelClause_in_parallelForClause6454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_uniqueForClause_in_parallelForClause6459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dataClause_in_parallelForClause6464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelSectionsDirective_in_parallelSectionsConstruct6480 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_sectionScope_in_parallelSectionsConstruct6482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_parallelSectionsDirective6493 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_114_in_parallelSectionsDirective6495 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_122_in_parallelSectionsDirective6497 = new BitSet(new long[]{0x0000000100000002L,0x0008000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_parallelSectionsClause_in_parallelSectionsDirective6499 = new BitSet(new long[]{0x0000000100000002L,0x0008000000000A00L,0x0000000000000DE0L});
    public static final BitSet FOLLOW_uniqueParallelClause_in_parallelSectionsClause6512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dataClause_in_parallelSectionsClause6517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_masterDirective_in_masterConstruct6533 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_masterConstruct6535 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_masterDirective6548 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_127_in_masterDirective6550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_criticalDirective_in_criticalConstruct6566 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_criticalConstruct6568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_criticalDirective6582 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_criticalDirective6584 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_regionPhrase_in_criticalDirective6586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_regionPhrase6597 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_regionPhrase6599 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_regionPhrase6601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_barrierDirective6618 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_barrierDirective6620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_taskwaitDirective6636 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_taskwaitDirective6638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_atomicDirective_in_atomicConstruct6653 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_statementExpression_in_atomicConstruct6655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_atomicDirective6668 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_130_in_atomicDirective6670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_flushDirective6687 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131_in_flushDirective6689 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
    public static final BitSet FOLLOW_flushVars_in_flushDirective6691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_flushVars6706 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_flushVars6708 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_flushVars6710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_orderedDirective_in_orderedConstruct6726 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_orderedConstruct6728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_orderedDirective6739 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_117_in_orderedDirective6741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_threadprivateDirective6758 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_132_in_threadprivateDirective6760 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_threadprivateDirective6762 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_threadprivateDirective6764 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_threadprivateDirective6766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_dataClause6779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6781 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6783 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_133_in_dataClause6791 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6793 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6795 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_134_in_dataClause6803 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6805 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6807 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_135_in_dataClause6815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6817 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6819 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_136_in_dataClause6827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6829 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_dataClause6839 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6841 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_136_in_dataClause6843 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_dataClause6850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_137_in_dataClause6854 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_138_in_dataClause6861 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6863 = new BitSet(new long[]{0x0000040020000000L,0x0000031E00000000L});
    public static final BitSet FOLLOW_set_in_dataClause6865 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_dataClause6900 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6902 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_139_in_dataClause6910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_dataClause6912 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_dataClause6914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_dataClause6916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_variableList6928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Identifier_in_variableList6933 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_variableList6935 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_variableList_in_variableList6937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_iterationStatement6947 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_iterationStatement6949 = new BitSet(new long[]{0x7F80000400000010L,0x0000000000000100L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_iterationStatement6951 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_iterationStatement6953 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_iterationStatement6955 = new BitSet(new long[]{0x0000028000000000L});
    public static final BitSet FOLLOW_relationalOp_in_iterationStatement6957 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_iterationStatement6959 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_iterationStatement6961 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_forUpdate_in_iterationStatement6963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_iterationStatement6965 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_iterationStatement6967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_synpred1104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_synpred1132531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_synpred1172557 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000011L});
    public static final BitSet FOLLOW_set_in_synpred1172561 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_synpred1172569 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_25_in_synpred1172571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_synpred1282782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclarationStatement_in_synpred1513311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_synpred1523321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synpred1533331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_synpred1583475 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_statement_in_synpred1583477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred1633553 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_synpred1633555 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_block_in_synpred1633557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred1643569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchLabel_in_synpred1803868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred1823895 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_constantExpression_in_synpred1823897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_synpred1823899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_synpred1833909 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_enumConstantName_in_synpred1833911 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_synpred1833913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enhancedForControl_in_synpred1843956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_synpred1883996 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentOperator_in_synpred1904179 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_synpred1904181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_synpred2004297 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_synpred2004299 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_synpred2004301 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_synpred2014337 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_synpred2014339 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_synpred2014341 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_synpred2014343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_synpred2024382 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_synpred2024384 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_synpred2024386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_synpred2134694 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_synpred2134696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_synpred2144728 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_synpred2144730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_shiftOp_in_synpred2164796 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_additiveExpression_in_synpred2164798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_synpred2174821 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_39_in_synpred2174823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_synpred2184855 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_synpred2184857 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_synpred2184859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_synpred2194895 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_synpred2194897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred2214941 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_synpred2214949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_castExpression_in_synpred2315106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_synpred2355144 = new BitSet(new long[]{0x7F80000000000000L});
    public static final BitSet FOLLOW_primitiveType_in_synpred2355146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_synpred2355148 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_unaryExpression_in_synpred2355150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred2365162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_synpred2385203 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_synpred2385205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierSuffix_in_synpred2395210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_synpred2445259 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_Identifier_in_synpred2445261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierSuffix_in_synpred2455266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_synpred2515342 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_synpred2515344 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred2515346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_synpred2645584 = new BitSet(new long[]{0x7F80400000000FD0L,0x0001F300000000F3L});
    public static final BitSet FOLLOW_expression_in_synpred2645586 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred2645588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBody_in_synpred2665628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_synpred2675711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_synpred2735805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelConstruct_in_synpred2755847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelForConstruct_in_synpred2795870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelSectionsConstruct_in_synpred2805876 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_barrierDirective_in_synpred2855917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parallelClause_in_synpred2865973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_synpred2936103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_synpred2936105 = new BitSet(new long[]{0x0000000008000000L,0x0380000000000000L});
    public static final BitSet FOLLOW_scheduleKind_in_synpred2936107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_synpred2936109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sectionDirective_in_synpred3006236 = new BitSet(new long[]{0x7F90480002001FD0L,0x0003F300007DE8F3L});
    public static final BitSet FOLLOW_structuredBlock_in_synpred3006239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_taskClause_in_synpred3026304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_uniqueTaskClause_in_synpred3036316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_uniqueTaskClause_in_synpred3046316 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000800L});
    public static final BitSet FOLLOW_regionPhrase_in_synpred3136586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_synpred3206839 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_synpred3206841 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_136_in_synpred3206843 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_synpred3206845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_synpred3216850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_synpred3216852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_137_in_synpred3216854 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_66_in_synpred3216856 = new BitSet(new long[]{0x0000000000000002L});

}